{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/about/index/NotWasteTime.png","path":"about/index/NotWasteTime.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-128.ico","path":"images/favicon-128.ico","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16.ico","path":"images/favicon-16.ico","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32.ico","path":"images/favicon-32.ico","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/fireworks.js","path":"js/fireworks.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"2f842f512e58492c3634aab7f5ee64a701c0000c","modified":1629958856458},{"_id":"source/_posts/.DS_Store","hash":"0ebf98d395b8a2a2c47a3a53f157fa2da09f261d","modified":1629958856458},{"_id":"source/_posts/Activiti学习记录.md","hash":"0899026da3544d07262cc264b2f6a27f204bb23a","modified":1629958856458},{"_id":"source/_posts/Git分支管理.md","hash":"9ed08e2756f4f8d7d448584ffccd4ccb102d7ef0","modified":1629958856458},{"_id":"source/_posts/Linux解决VMware问题.md","hash":"7957cf248d545cb6818121adf5a17258ca18432c","modified":1629959063619},{"_id":"source/_posts/Linux驱动博通无线网卡.md","hash":"a681a03880ef7a418c1b6e7507ef9fddca42dfec","modified":1629959046219},{"_id":"source/_posts/SpringBoot-banner.md","hash":"373061469f5e60c9ac0aa3b2a78c278408925b64","modified":1629958856458},{"_id":"source/_posts/TiDB学习记录.md","hash":"a5d457313bf703ff8dadfe6721d5a31a986a775b","modified":1629958856458},{"_id":"source/_posts/TypeScript学习记录.md","hash":"0fbf8e1b95fbcd904362834e11a923b710b9f735","modified":1629958856458},{"_id":"source/_posts/Windows安装Scoop.md","hash":"270f5ee43252e459ee4fb5dd6ed272ac0c2c5dfd","modified":1629958856458},{"_id":"source/_posts/diy-screen.md","hash":"1e66759ff3f64ac809596f938a5e5cb9485916f4","modified":1629958856458},{"_id":"source/_posts/hexo-beautify.md","hash":"579f5d89245d6672b051ba2c9182e809fad0e007","modified":1629958856462},{"_id":"source/_posts/hexo本地图片显示问题.md","hash":"1ff545f7972b9d0bf02389d31fdda34c9928269c","modified":1629958856462},{"_id":"source/_posts/hexo-blog.md","hash":"08d5702e4a6d84f4c02efd69575ca50a2bfa7d7d","modified":1629958856462},{"_id":"source/_posts/jekyll-blog.md","hash":"bec0835ea2f7598c4a0f3eef362d0d4b19b0008a","modified":1629958856462},{"_id":"source/_posts/macOS开发环境搭建.md","hash":"6786a3fbd3022a59545c96d2b3e35cabcb78a54f","modified":1629958856462},{"_id":"source/_posts/macOS配置.md","hash":"36239b56a899d78444e298c307357760e7abdf01","modified":1629958856462},{"_id":"source/_posts/todo-list.md","hash":"524109427d9e21017606c20ac5f1d1d2927748a1","modified":1629958856462},{"_id":"source/_posts/代码质量培训.md","hash":"476d971fd8c34587dfc24b0364f6cdd3f024a9df","modified":1629958856462},{"_id":"source/_posts/黑苹果踩坑记录.md","hash":"3a24a16a80d41c5fc3e793ec168c6684e18a96c0","modified":1629958856462},{"_id":"source/about/.DS_Store","hash":"e87ee202f271fd82bcc98f6cecafec6bd00c367b","modified":1629958856462},{"_id":"source/about/index.md","hash":"54abf03b4c201662904a2580feba40cdeb093a29","modified":1629958856462},{"_id":"source/categories/index.md","hash":"4c85184c7b57b253ee7bc8104e76eba11a3fa58a","modified":1629958856462},{"_id":"source/tags/index.md","hash":"624f5866d52ccb10bc8e39303f8d17f60815f9df","modified":1629958856462},{"_id":"source/about/index/NotWasteTime.png","hash":"2314b88bf5f00ae0f0d973c0d5596657d2f89ec3","modified":1629958856462},{"_id":"source/_posts/diy-screen/DIYScreen_1day.png","hash":"dcb3a706fe905840b444e3486fc4ddfd865764c8","modified":1629958856458},{"_id":"source/_posts/diy-screen/DIYScreen_1hour.png","hash":"9678c2febbdc2131a8af0910a2759435babef952","modified":1629958856458},{"_id":"source/_posts/diy-screen/DIYScreen_1morning.png","hash":"5e1cbe491e3e35a923fa935e733d5d37e4de0292","modified":1629958856458},{"_id":"source/_posts/diy-screen/DIYScreen_closing1.png","hash":"7ed9c80161f46e54d9a85dc396e64908b4783836","modified":1629958856458},{"_id":"source/_posts/diy-screen/DIYScreen_finish1.png","hash":"e1ceabb0af645809dfb4e52714c3aa203d28a172","modified":1629958856462},{"_id":"source/_posts/diy-screen/DIYScreen_finish2.png","hash":"e4a4499847cbf9f3bcd701f35ad3eac3e966c14b","modified":1629958856462},{"_id":"source/_posts/diy-screen/DIYScreen_closing2.png","hash":"f04c5179d6c77e6493e43678a333d06624dacc1a","modified":1629958856458},{"_id":"source/_posts/diy-screen/DIYScreen_finish3.png","hash":"1732708ad2a5d6c072a60cfc96ebde957a0e7df2","modified":1629958856462},{"_id":"source/_posts/diy-screen/DIYScreen_my_hand.png","hash":"bb4e31a2c2802022f14fa14d0948087f79043924","modified":1629958856462},{"_id":"source/_posts/diy-screen/DIYScreen_my_name.png","hash":"22665aa353efa6a90d0a7cd3776f2afd9e66e9c4","modified":1629958856462},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1629958856462},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1629958856462},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1629958856462},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1629958856462},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1629958856462},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1629958856462},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1629958856462},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1629958856462},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1629958856462},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1629958856462},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1629958856475},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1629958856462},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1629958856462},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1629958856462},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1629958856462},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1629958856462},{"_id":"themes/next/_config.yml","hash":"b271eac1beb8f5b2c96869d94972c60c8accec4d","modified":1629958856462},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1629958856462},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1629958856462},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1629958856462},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1629958856462},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1629958856462},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1629958856462},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1629958856462},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1629958856462},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1629958856462},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1629958856462},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1629958856462},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1629958856462},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1629958856462},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1629958856462},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1629958856462},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1629958856462},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1629958856462},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1629958856462},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1629958856462},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1629958856462},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1629958856462},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1629958856462},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1629958856462},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1629958856462},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1629958856462},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1629958856462},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1629958856465},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1629958856465},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1629958856465},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1629958856465},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1629958856465},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1629958856465},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1629958856465},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1629958856465},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1629958856465},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1629958856465},{"_id":"themes/next/layout/_layout.swig","hash":"d783231ad4c9c3067c14499832c6bff2caabd4e3","modified":1629958856465},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1629958856465},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1629958856475},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1629958856475},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1629958856475},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1629958856475},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1629958856475},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1629958856475},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1629958856475},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1629958856462},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1629958856462},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1629958856462},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1629958856462},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1629958856462},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1629958856462},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1629958856462},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1629958856462},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1629958856462},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1629958856462},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1629958856462},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1629958856462},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1629958856462},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1629958856462},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1629958856462},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1629958856465},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1629958856462},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1629958856462},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"0bf0772666c6a171d3d98daeee0dcb3930d5613e","modified":1629958856465},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1629958856465},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1629958856472},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1629958856465},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1629958856472},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1629958856472},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1629958856465},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1629958856472},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1629958856472},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1629958856472},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1629958856472},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1629958856472},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1629958856475},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1629958856468},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1629958856472},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1629958856475},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1629958856475},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1629958856475},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1629958856475},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1629958856475},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1629958856475},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1629958856475},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1629958856475},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1629958856475},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1629958856475},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1629958856475},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1629958856475},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1629958856475},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1629958856475},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1629958856475},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1629958856475},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1629958856475},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1629958856475},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1629958856475},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1629958856475},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1629958856475},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1629958856478},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1629958856478},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1629958856478},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1629958856478},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1629958856465},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1629958856465},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1629958856478},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1629958856478},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1629958856478},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1629958856478},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1629958856478},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1629958856478},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1629958856478},{"_id":"themes/next/source/images/favicon-16.ico","hash":"def3cab5d0a1f2905f3ba99c8a5155eba9fe67ba","modified":1629958856478},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1629958856478},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1629958856478},{"_id":"themes/next/source/images/favicon-32.ico","hash":"5e28df10232effae62e3a3ea9afa15c9efdd23fb","modified":1629958856478},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1629958856478},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1629958856478},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1629958856478},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1629958856478},{"_id":"themes/next/source/js/fireworks.js","hash":"9d33d5b5ca33641facaabba0507c9d0eaa5802f0","modified":1629958856478},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1629958856478},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1629958856478},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1629958856465},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1629958856465},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1629958856465},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1629958856478},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1629958856465},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1629958856465},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1629958856478},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1629958856465},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1629958856465},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1629958856465},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1629958856465},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1629958856465},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1629958856465},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1629958856465},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1629958856465},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1629958856465},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1629958856465},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1629958856465},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1629958856465},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1629958856472},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1629958856472},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1629958856468},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1629958856472},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1629958856472},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1629958856472},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1629958856472},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1629958856472},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1629958856472},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1629958856472},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1629958856472},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1629958856472},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1629958856472},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1629958856472},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1629958856472},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1629958856472},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1629958856472},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1629958856472},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1629958856472},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1629958856472},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1629958856472},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1629958856472},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1629958856472},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1629958856472},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1629958856472},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1629958856472},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1629958856472},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1629958856472},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1629958856472},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1629958856472},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1629958856472},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1629958856475},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1629958856475},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1629958856475},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1629958856475},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1629958856475},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1629958856475},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1629958856475},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1629958856475},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1629958856475},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1629958856475},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1629958856475},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1629958856475},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1629958856475},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1629958856475},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1629958856475},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1629958856478},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1629958856478},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1629958856475},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1629958856478},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1629958856475},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1629958856478},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1629958856478},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1629958856475},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1629958856475},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1629958856478},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1629958856478},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1629958856475},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1629958856475},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1629958856475},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1629958856475},{"_id":"themes/next/source/images/favicon-128.ico","hash":"3637c3ae98f58f998542511e8212603a90a37028","modified":1629958856478},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1629958856478},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1629958856478},{"_id":"themes/next/source/images/avatar.jpg","hash":"c741c4d121e2797b103f706b44352e8b1378dd2f","modified":1629958856478},{"_id":"public/about/index.html","hash":"6f27203a18c091e200d79dfd2a30e3759380f3e4","modified":1629959068070},{"_id":"public/categories/index.html","hash":"437e223ebd1ff7d6969b547289ad53da7eeee2b6","modified":1629959068070},{"_id":"public/tags/index.html","hash":"d3f7f31f8ba8c05b61431dc2f9703309d50630ee","modified":1629959068070},{"_id":"public/2021/08/26/Linux解决VMware问题/index.html","hash":"fd9486eb80b1de1171c55975546d58ad7c6c2589","modified":1629959068070},{"_id":"public/2021/08/25/Linux驱动博通无线网卡/index.html","hash":"1b7f42eb78e8564942a55f0621c086c30b322d54","modified":1629959068070},{"_id":"public/2021/06/22/TypeScript学习记录/index.html","hash":"d4dc6a39cebc7a61a691a8c6562831164c7bcaec","modified":1629959068070},{"_id":"public/2021/03/21/todo-list/index.html","hash":"ffffffaafea2d8794ccd2d2e2bb1614b9229efd8","modified":1629959068070},{"_id":"public/2021/03/21/jekyll-blog/index.html","hash":"94749f9c801d857288ee5ab85888889b9ce4b25b","modified":1629959068070},{"_id":"public/archives/index.html","hash":"900e3499d4d2c2d882cabd3168965cde55741c65","modified":1629959068070},{"_id":"public/archives/page/2/index.html","hash":"5a3b9f98c93d3ea49930b7602b9c402da8d57beb","modified":1629959068070},{"_id":"public/archives/2020/index.html","hash":"e630c0daccb0f185e46ae2afbc63f7117c89acc9","modified":1629959068070},{"_id":"public/archives/2020/10/index.html","hash":"b3339a97b3f469ea69c8d106b8d082b483f91e24","modified":1629959068070},{"_id":"public/archives/2021/index.html","hash":"93e71033536e6f3ae2725dbc96e3c0316c5bf5b3","modified":1629959068070},{"_id":"public/archives/2021/page/2/index.html","hash":"50c15af312569617ea7878aae593655dcda0f52e","modified":1629959068070},{"_id":"public/archives/2021/01/index.html","hash":"e7710f7ef21718b9007826fdeabb60816f6eb952","modified":1629959068070},{"_id":"public/archives/2021/03/index.html","hash":"36fe0cd0846b5dc3934421b4da92b63eb00f9be2","modified":1629959068070},{"_id":"public/archives/2021/05/index.html","hash":"a30dcbfc4ba6e1439f99997f48191df6dc4f4ccc","modified":1629959068070},{"_id":"public/archives/2021/06/index.html","hash":"fb809d7d1f79f4107e9c5e4ab6bc7d7ae7592db9","modified":1629959068070},{"_id":"public/archives/2021/08/index.html","hash":"bd6da5782aac66188db6ffcfc8a51c58b777a8b7","modified":1629959068070},{"_id":"public/categories/Java/index.html","hash":"11bbb772bc0b9c2380afb08b5ffcf9a3f581b450","modified":1629959068070},{"_id":"public/categories/配置/index.html","hash":"e246547f5ee3a784ce323ec054e7f209486f7e4e","modified":1629959068070},{"_id":"public/categories/Git/index.html","hash":"f35b1e7c4e63424f39e767da86305b46a7330dd2","modified":1629959068070},{"_id":"public/categories/Java/Spring-Boot/index.html","hash":"aca79f5f253d1e18d98d2683837c6e35e17cb5e9","modified":1629959068070},{"_id":"public/categories/SQL/index.html","hash":"5c55982dfd021dfa70ab7d0b6508feaf4760a22b","modified":1629959068070},{"_id":"public/categories/前端/index.html","hash":"253e3f8a329d88fb0befc807916f65652e02ffe9","modified":1629959068070},{"_id":"public/categories/DIY/index.html","hash":"085d1be6f475ce70175c0d632d63640b7b5f5017","modified":1629959068070},{"_id":"public/categories/博客/index.html","hash":"60179276bda89524782f961d7179bc91277a4821","modified":1629959068070},{"_id":"public/categories/培训/index.html","hash":"73d73a4a525c98238d0f52e8594388f50ce5cd95","modified":1629959068070},{"_id":"public/categories/SQL/TiDB/index.html","hash":"db504cdc8e8dc36e608bd850e3e0795f1a5158f1","modified":1629959068070},{"_id":"public/categories/Todo/index.html","hash":"d0b2055001c035927a386ca7b814285bb7fb2271","modified":1629959068070},{"_id":"public/categories/前端/TypeScript/index.html","hash":"b77d9a739997413ec5090afb50c45a45d6825f97","modified":1629959068070},{"_id":"public/categories/DIY/硬件/index.html","hash":"eaddf7a8c403ee5f642aa6731cce5dc537434795","modified":1629959068070},{"_id":"public/categories/博客/Hexo/index.html","hash":"8ba23a794551ebd4dcbfe73310156777e639dc2a","modified":1629959068070},{"_id":"public/categories/博客/Jekyll/index.html","hash":"7a8c232cf89284ae560cb27760ef8031f0dfedb4","modified":1629959068070},{"_id":"public/categories/DIY/软件/index.html","hash":"044de14a0780e6ae85d2aca23782f7622505bde9","modified":1629959068070},{"_id":"public/tags/Java/index.html","hash":"8c4beaced4d01d479d06d308a52263f93bb7536f","modified":1629959068070},{"_id":"public/tags/Git/index.html","hash":"5d90694f69eeeefa2b526c2c31f9443e74b9f6f0","modified":1629959068070},{"_id":"public/tags/配置/index.html","hash":"3e325bc8281a35d59d397afa0f31b945888f2f23","modified":1629959068070},{"_id":"public/tags/SQL/index.html","hash":"0a398c7a6010dec794a3a8e509e5794808d513a5","modified":1629959068070},{"_id":"public/tags/TypeScript/index.html","hash":"9fd8191474f205461779c528e2365d2ca7f79bde","modified":1629959068070},{"_id":"public/tags/DIY/index.html","hash":"f4c2f8bdcb16a76de963a259c394fda1260073d6","modified":1629959068070},{"_id":"public/tags/博客/index.html","hash":"da7312371adff5e43b3292decd177c8ace107e5d","modified":1629959068070},{"_id":"public/tags/Todo/index.html","hash":"f9783edbb87ff70e15d06a9ca5c39885e0459396","modified":1629959068070},{"_id":"public/tags/培训/index.html","hash":"49281ea595167d97fcea66202359d42ad354d465","modified":1629959068070},{"_id":"public/2021/08/23/Windows安装Scoop/index.html","hash":"a8725d3d0e516c695dffb253cd75e4cef6a0bb71","modified":1629959068070},{"_id":"public/2021/08/22/Git分支管理/index.html","hash":"bd3f6db9d02d130938ae1b6d160d85e2ba84cbcd","modified":1629959068070},{"_id":"public/2021/08/21/hexo本地图片显示问题/index.html","hash":"07a6d59794343516a059e2d0c3411448aa044686","modified":1629959068070},{"_id":"public/2021/08/20/hexo-beautify/index.html","hash":"4bb0cbb0d3db989e73e381259e1738ac762b78e9","modified":1629959068070},{"_id":"public/2021/08/15/hexo-blog/index.html","hash":"d1d6ed1dc437a2544c49f893a458b16b94529e4f","modified":1629959068070},{"_id":"public/2021/06/22/TiDB学习记录/index.html","hash":"004675812b7051bec0c4b60acab170f9c3c22c77","modified":1629959068070},{"_id":"public/2021/06/05/macOS开发环境搭建/index.html","hash":"f25931576dc17cd52cfff311256f9d6b74966fc1","modified":1629959068070},{"_id":"public/2021/05/29/SpringBoot-banner/index.html","hash":"34348556638468515c8fcda28eea6d95d453fd33","modified":1629959068070},{"_id":"public/2021/05/29/macOS配置/index.html","hash":"f3cc60201f7fca9378aa26a2bdda29dc7ea90105","modified":1629959068070},{"_id":"public/2021/05/29/黑苹果踩坑记录/index.html","hash":"bcdff632b99bc99316e0fe5fb9a5f7c1b1c48b5a","modified":1629959068070},{"_id":"public/2021/03/28/diy-screen/index.html","hash":"21f06d1e99de90e7432e698780d19d3fd3f714cf","modified":1629959068070},{"_id":"public/2021/01/15/代码质量培训/index.html","hash":"25e0871cee0aa0d2618e486a74e7c34aac89fc48","modified":1629959068070},{"_id":"public/2020/10/26/Activiti学习记录/index.html","hash":"713feb834e3df1a2b31563ea64431f4d55560946","modified":1629959068070},{"_id":"public/page/2/index.html","hash":"6100706a2a83bb1b54b54ba7fa766446296f9ab5","modified":1629959068070},{"_id":"public/index.html","hash":"1fb4ca5a31af865b96d7798f073344671471260f","modified":1629959068070},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1629959068070},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1629959068070},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1629959068070},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1629959068070},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1629959068070},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1629959068070},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1629959068070},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1629959068070},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1629959068070},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1629959068070},{"_id":"public/images/favicon-16.ico","hash":"def3cab5d0a1f2905f3ba99c8a5155eba9fe67ba","modified":1629959068070},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1629959068070},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1629959068070},{"_id":"public/images/favicon-32.ico","hash":"5e28df10232effae62e3a3ea9afa15c9efdd23fb","modified":1629959068070},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1629959068070},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1629959068070},{"_id":"public/about/index/NotWasteTime.png","hash":"2314b88bf5f00ae0f0d973c0d5596657d2f89ec3","modified":1629959068070},{"_id":"public/images/favicon-128.ico","hash":"3637c3ae98f58f998542511e8212603a90a37028","modified":1629959068070},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1629959068070},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1629959068070},{"_id":"public/2021/03/28/diy-screen/DIYScreen_1day.png","hash":"dcb3a706fe905840b444e3486fc4ddfd865764c8","modified":1629959068070},{"_id":"public/2021/03/28/diy-screen/DIYScreen_1morning.png","hash":"5e1cbe491e3e35a923fa935e733d5d37e4de0292","modified":1629959068070},{"_id":"public/2021/03/28/diy-screen/DIYScreen_closing1.png","hash":"7ed9c80161f46e54d9a85dc396e64908b4783836","modified":1629959068070},{"_id":"public/2021/03/28/diy-screen/DIYScreen_closing2.png","hash":"f04c5179d6c77e6493e43678a333d06624dacc1a","modified":1629959068070},{"_id":"public/2021/03/28/diy-screen/DIYScreen_1hour.png","hash":"9678c2febbdc2131a8af0910a2759435babef952","modified":1629959068070},{"_id":"public/2021/03/28/diy-screen/DIYScreen_finish1.png","hash":"e1ceabb0af645809dfb4e52714c3aa203d28a172","modified":1629959068070},{"_id":"public/2021/03/28/diy-screen/DIYScreen_finish2.png","hash":"e4a4499847cbf9f3bcd701f35ad3eac3e966c14b","modified":1629959068070},{"_id":"public/2021/03/28/diy-screen/DIYScreen_my_hand.png","hash":"bb4e31a2c2802022f14fa14d0948087f79043924","modified":1629959068070},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1629959068070},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1629959068070},{"_id":"public/js/fireworks.js","hash":"9d33d5b5ca33641facaabba0507c9d0eaa5802f0","modified":1629959068070},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1629959068070},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1629959068070},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1629959068070},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1629959068070},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1629959068070},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1629959068070},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1629959068070},{"_id":"public/css/main.css","hash":"f8e898c0c4677329c104772cd1bee0f7a564847a","modified":1629959068070},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1629959068070},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1629959068070},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1629959068070},{"_id":"public/2021/03/28/diy-screen/DIYScreen_my_name.png","hash":"22665aa353efa6a90d0a7cd3776f2afd9e66e9c4","modified":1629959068070},{"_id":"public/2021/03/28/diy-screen/DIYScreen_finish3.png","hash":"1732708ad2a5d6c072a60cfc96ebde957a0e7df2","modified":1629959068070},{"_id":"public/images/avatar.jpg","hash":"c741c4d121e2797b103f706b44352e8b1378dd2f","modified":1629959068070}],"Category":[{"name":"Java","_id":"ckssjjmau0004fa589dag7ubz"},{"name":"Git","_id":"ckssjjmay000afa58e3p7g56j"},{"name":"配置","_id":"ckssjjmb0000gfa582a5sbcui"},{"name":"Spring Boot","parent":"ckssjjmau0004fa589dag7ubz","_id":"ckssjjmb6000tfa5875pzf1py"},{"name":"SQL","_id":"ckssjjmbe0016fa587jol3lvs"},{"name":"前端","_id":"ckssjjmbh001gfa58g8ul2i3c"},{"name":"DIY","_id":"ckssjjmbj001mfa580qznhqyy"},{"name":"博客","_id":"ckssjjmbl001qfa58fkvf7wlr"},{"name":"Todo","_id":"ckssjjmbo0022fa5899t1bpmd"},{"name":"培训","_id":"ckssjjmbo0024fa582jte1ivf"},{"name":"TiDB","parent":"ckssjjmbe0016fa587jol3lvs","_id":"ckssjjmbp0026fa589tbg8qhd"},{"name":"TypeScript","parent":"ckssjjmbh001gfa58g8ul2i3c","_id":"ckssjjmbp0029fa58drwc7rrm"},{"name":"硬件","parent":"ckssjjmbj001mfa580qznhqyy","_id":"ckssjjmbq002cfa58ef6oa14c"},{"name":"Hexo","parent":"ckssjjmbl001qfa58fkvf7wlr","_id":"ckssjjmbq002efa58gof6gnk5"},{"name":"Jekyll","parent":"ckssjjmbl001qfa58fkvf7wlr","_id":"ckssjjmbr002mfa58ht7i2tgp"},{"name":"软件","parent":"ckssjjmbj001mfa580qznhqyy","_id":"ckssjjmbs002qfa58bo9lay68"}],"Data":[],"Page":[{"title":"一点想法","date":"2021-08-20T12:14:12.000Z","type":"about","_content":"\n***Carpe Diem，Quam Minimum Credula Postero.***\n\n这句话我个人挺喜欢的，前半句是在看《死亡诗社》时知道的，这是拉丁语，英文意思是*seize the day*，整句话大意为——抓住今天，而不要过于相信明天。\n\n当然，我自认为大部分时候是没有做到这一步的，更多时间我只是活在自己的世界里。想做的事当然很多，比如自己完全敲出一个blog网站啊，比如自己组装一台游戏主机啊，比如学会弹吉他啊，但我最终只是将时间慢慢消耗在手机上，时光悄悄地、匆匆地在指缝间流走。\n\n![图片](index/NotWasteTime.png \"笑\")\n\n\n虽然我觉得这样其实也没什么，我是喜欢一动不动家里蹲的，但想做的事总是要慢慢去完成的。\n\n我曾经想着自己写一个博客网站，但疲懒的性子让我迟迟没有动手，买的服务器和域名也快到到期了，如今终于在网上找了教程，直接使用*github*仓库来作为第一个博客网站练手吧，借此机会也记录一些自己的东西。","source":"about/index.md","raw":"---\ntitle: 一点想法\ndate: 2021-08-20 20:14:12\ntype: \"about\"\n---\n\n***Carpe Diem，Quam Minimum Credula Postero.***\n\n这句话我个人挺喜欢的，前半句是在看《死亡诗社》时知道的，这是拉丁语，英文意思是*seize the day*，整句话大意为——抓住今天，而不要过于相信明天。\n\n当然，我自认为大部分时候是没有做到这一步的，更多时间我只是活在自己的世界里。想做的事当然很多，比如自己完全敲出一个blog网站啊，比如自己组装一台游戏主机啊，比如学会弹吉他啊，但我最终只是将时间慢慢消耗在手机上，时光悄悄地、匆匆地在指缝间流走。\n\n![图片](index/NotWasteTime.png \"笑\")\n\n\n虽然我觉得这样其实也没什么，我是喜欢一动不动家里蹲的，但想做的事总是要慢慢去完成的。\n\n我曾经想着自己写一个博客网站，但疲懒的性子让我迟迟没有动手，买的服务器和域名也快到到期了，如今终于在网上找了教程，直接使用*github*仓库来作为第一个博客网站练手吧，借此机会也记录一些自己的东西。","updated":"2021-08-26T06:20:56.462Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckssjjmap0000fa58cwwnd95u","content":"<p><em><strong>Carpe Diem，Quam Minimum Credula Postero.</strong></em></p>\n<p>这句话我个人挺喜欢的，前半句是在看《死亡诗社》时知道的，这是拉丁语，英文意思是<em>seize the day</em>，整句话大意为——抓住今天，而不要过于相信明天。</p>\n<p>当然，我自认为大部分时候是没有做到这一步的，更多时间我只是活在自己的世界里。想做的事当然很多，比如自己完全敲出一个blog网站啊，比如自己组装一台游戏主机啊，比如学会弹吉他啊，但我最终只是将时间慢慢消耗在手机上，时光悄悄地、匆匆地在指缝间流走。</p>\n<p><img src=\"/about/index/NotWasteTime.png\" alt=\"图片\" title=\"笑\"></p>\n<p>虽然我觉得这样其实也没什么，我是喜欢一动不动家里蹲的，但想做的事总是要慢慢去完成的。</p>\n<p>我曾经想着自己写一个博客网站，但疲懒的性子让我迟迟没有动手，买的服务器和域名也快到到期了，如今终于在网上找了教程，直接使用<em>github</em>仓库来作为第一个博客网站练手吧，借此机会也记录一些自己的东西。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><em><strong>Carpe Diem，Quam Minimum Credula Postero.</strong></em></p>\n<p>这句话我个人挺喜欢的，前半句是在看《死亡诗社》时知道的，这是拉丁语，英文意思是<em>seize the day</em>，整句话大意为——抓住今天，而不要过于相信明天。</p>\n<p>当然，我自认为大部分时候是没有做到这一步的，更多时间我只是活在自己的世界里。想做的事当然很多，比如自己完全敲出一个blog网站啊，比如自己组装一台游戏主机啊，比如学会弹吉他啊，但我最终只是将时间慢慢消耗在手机上，时光悄悄地、匆匆地在指缝间流走。</p>\n<p><img src=\"/about/index/NotWasteTime.png\" alt=\"图片\" title=\"笑\"></p>\n<p>虽然我觉得这样其实也没什么，我是喜欢一动不动家里蹲的，但想做的事总是要慢慢去完成的。</p>\n<p>我曾经想着自己写一个博客网站，但疲懒的性子让我迟迟没有动手，买的服务器和域名也快到到期了，如今终于在网上找了教程，直接使用<em>github</em>仓库来作为第一个博客网站练手吧，借此机会也记录一些自己的东西。</p>\n"},{"title":"分类","date":"2021-08-20T12:15:15.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-08-20 20:15:15\ntype: \"categories\"\n---\n","updated":"2021-08-26T06:20:56.462Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckssjjmat0002fa58623lg7ml","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2021-08-20T12:14:27.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2021-08-20 20:14:27\ntype: \"tags\"\n---\n","updated":"2021-08-26T06:20:56.462Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckssjjmaw0006fa58ctub9gzj","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Activiti学习记录","date":"2020-10-26T01:00:00.000Z","_content":"\n# Activiti 官方网站\n\n先上官方文档，[Activiti 6 User Guide](https://www.activiti.org/userguide)\n\n<!--more-->\n\n# 找到的教程系列文章\n\n- [SpringBoot Activiti6系列教程(一)-activiti-app部署](https://zhengjianfeng.cn/?p=162)\n- [SpringBoot Activiti6系列教程(二)-基于mysql数据库初始化](https://zhengjianfeng.cn/?p=167)\n- [SpringBoot Activiti6系列教程(三)-开发一个简单的SpringBoot activiti6应用程序](https://zhengjianfeng.cn/?p=170)\n- [SpringBoot Activiti6系列教程(四)-流程部署](https://zhengjianfeng.cn/?p=176)\n- [SpringBoot Activiti6系列教程(五)-activiti api](https://zhengjianfeng.cn/?p=179)\n- [SpringBoot Activiti6系列教程(六)-Execution说明](https://zhengjianfeng.cn/?p=184)\n- [SpringBoot Activiti6系列教程(七)-变量](https://zhengjianfeng.cn/?p=186)\n- [SpringBoot Activiti6系列教程(八)-流程拒绝实现](https://zhengjianfeng.cn/?p=190)\n- [SpringBoot Activiti6系列教程(九)-流程回退实现](https://zhengjianfeng.cn/?p=193)\n- [SpringBoot Activiti6系列教程(十)-流程加签征询实现(完结篇)](https://zhengjianfeng.cn/?p=197)\n\n# 架构说明\n\n> ProcessEngineConfiguration类，主要作用是加载activiti.cfg.xml配置文件；\n\n> ProcessEngine类，可以生成activiti的工作环境（建表），通过此类得到各个Service的接口；\n\n> Service接口，快速实现数据库表的操作；\n>\n> ​\t\t|---- RepositoryService\n>\n> ​\t\t|---- RuntimeService\n>\n> ​\t\t|---- TaskService\t\t\t\t查看、处理任务\n>\n> ​\t\t|---- HistoryService\n>\n> [Activiti核心API介绍](https://my.oschina.net/fuyung/blog/475181)\n\n# 流程\n\n> 流程部署\n> \t1、单个文件部署（bpmn文件，png文件），addClasspathResource(\"*.bpmn\")\n>\n> ​\t2、将bpmn文件与png文件压缩成zip文件，再通过addZipInputStream()部署\n\n>流程实例\n>\n>一个流程定义可以对应多个流程实例\n>启动流程实例 RuntimeService startProcessInstanceByKey(\"key\")\n\n## 实例\n\n> [组任务流程CandidateUsers](https://blog.csdn.net/qq_15204179/article/details/86298442)\n\n> [分配组任务的三种方式](https://blog.csdn.net/zjx86320/article/details/50412263)\n\n> [查询待办和已办任务](https://blog.csdn.net/ylforever/article/details/99708257)\n\n> [Activiti业务键（businessKey）](https://www.cnblogs.com/cxyj/p/3893631.html)","source":"_posts/Activiti学习记录.md","raw":"---\ntitle: Activiti学习记录\ndate: 2020-10-26 09:00:00\ntags: \n    - Java\ncategories:\n    - Java\n    - Spring Boot\n---\n\n# Activiti 官方网站\n\n先上官方文档，[Activiti 6 User Guide](https://www.activiti.org/userguide)\n\n<!--more-->\n\n# 找到的教程系列文章\n\n- [SpringBoot Activiti6系列教程(一)-activiti-app部署](https://zhengjianfeng.cn/?p=162)\n- [SpringBoot Activiti6系列教程(二)-基于mysql数据库初始化](https://zhengjianfeng.cn/?p=167)\n- [SpringBoot Activiti6系列教程(三)-开发一个简单的SpringBoot activiti6应用程序](https://zhengjianfeng.cn/?p=170)\n- [SpringBoot Activiti6系列教程(四)-流程部署](https://zhengjianfeng.cn/?p=176)\n- [SpringBoot Activiti6系列教程(五)-activiti api](https://zhengjianfeng.cn/?p=179)\n- [SpringBoot Activiti6系列教程(六)-Execution说明](https://zhengjianfeng.cn/?p=184)\n- [SpringBoot Activiti6系列教程(七)-变量](https://zhengjianfeng.cn/?p=186)\n- [SpringBoot Activiti6系列教程(八)-流程拒绝实现](https://zhengjianfeng.cn/?p=190)\n- [SpringBoot Activiti6系列教程(九)-流程回退实现](https://zhengjianfeng.cn/?p=193)\n- [SpringBoot Activiti6系列教程(十)-流程加签征询实现(完结篇)](https://zhengjianfeng.cn/?p=197)\n\n# 架构说明\n\n> ProcessEngineConfiguration类，主要作用是加载activiti.cfg.xml配置文件；\n\n> ProcessEngine类，可以生成activiti的工作环境（建表），通过此类得到各个Service的接口；\n\n> Service接口，快速实现数据库表的操作；\n>\n> ​\t\t|---- RepositoryService\n>\n> ​\t\t|---- RuntimeService\n>\n> ​\t\t|---- TaskService\t\t\t\t查看、处理任务\n>\n> ​\t\t|---- HistoryService\n>\n> [Activiti核心API介绍](https://my.oschina.net/fuyung/blog/475181)\n\n# 流程\n\n> 流程部署\n> \t1、单个文件部署（bpmn文件，png文件），addClasspathResource(\"*.bpmn\")\n>\n> ​\t2、将bpmn文件与png文件压缩成zip文件，再通过addZipInputStream()部署\n\n>流程实例\n>\n>一个流程定义可以对应多个流程实例\n>启动流程实例 RuntimeService startProcessInstanceByKey(\"key\")\n\n## 实例\n\n> [组任务流程CandidateUsers](https://blog.csdn.net/qq_15204179/article/details/86298442)\n\n> [分配组任务的三种方式](https://blog.csdn.net/zjx86320/article/details/50412263)\n\n> [查询待办和已办任务](https://blog.csdn.net/ylforever/article/details/99708257)\n\n> [Activiti业务键（businessKey）](https://www.cnblogs.com/cxyj/p/3893631.html)","slug":"Activiti学习记录","published":1,"updated":"2021-08-26T06:20:56.458Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmar0001fa58gwmnaxe9","content":"<h1 id=\"Activiti-官方网站\"><a href=\"#Activiti-官方网站\" class=\"headerlink\" title=\"Activiti 官方网站\"></a>Activiti 官方网站</h1><p>先上官方文档，<a href=\"https://www.activiti.org/userguide\">Activiti 6 User Guide</a></p>\n<span id=\"more\"></span>\n\n<h1 id=\"找到的教程系列文章\"><a href=\"#找到的教程系列文章\" class=\"headerlink\" title=\"找到的教程系列文章\"></a>找到的教程系列文章</h1><ul>\n<li><a href=\"https://zhengjianfeng.cn/?p=162\">SpringBoot Activiti6系列教程(一)-activiti-app部署</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=167\">SpringBoot Activiti6系列教程(二)-基于mysql数据库初始化</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=170\">SpringBoot Activiti6系列教程(三)-开发一个简单的SpringBoot activiti6应用程序</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=176\">SpringBoot Activiti6系列教程(四)-流程部署</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=179\">SpringBoot Activiti6系列教程(五)-activiti api</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=184\">SpringBoot Activiti6系列教程(六)-Execution说明</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=186\">SpringBoot Activiti6系列教程(七)-变量</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=190\">SpringBoot Activiti6系列教程(八)-流程拒绝实现</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=193\">SpringBoot Activiti6系列教程(九)-流程回退实现</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=197\">SpringBoot Activiti6系列教程(十)-流程加签征询实现(完结篇)</a></li>\n</ul>\n<h1 id=\"架构说明\"><a href=\"#架构说明\" class=\"headerlink\" title=\"架构说明\"></a>架构说明</h1><blockquote>\n<p>ProcessEngineConfiguration类，主要作用是加载activiti.cfg.xml配置文件；</p>\n</blockquote>\n<blockquote>\n<p>ProcessEngine类，可以生成activiti的工作环境（建表），通过此类得到各个Service的接口；</p>\n</blockquote>\n<blockquote>\n<p>Service接口，快速实现数据库表的操作；</p>\n<p>​        |—- RepositoryService</p>\n<p>​        |—- RuntimeService</p>\n<p>​        |—- TaskService                查看、处理任务</p>\n<p>​        |—- HistoryService</p>\n<p><a href=\"https://my.oschina.net/fuyung/blog/475181\">Activiti核心API介绍</a></p>\n</blockquote>\n<h1 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h1><blockquote>\n<p>流程部署<br>    1、单个文件部署（bpmn文件，png文件），addClasspathResource(“*.bpmn”)</p>\n<p>​    2、将bpmn文件与png文件压缩成zip文件，再通过addZipInputStream()部署</p>\n</blockquote>\n<blockquote>\n<p>流程实例</p>\n<p>一个流程定义可以对应多个流程实例<br>启动流程实例 RuntimeService startProcessInstanceByKey(“key”)</p>\n</blockquote>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><blockquote>\n<p><a href=\"https://blog.csdn.net/qq_15204179/article/details/86298442\">组任务流程CandidateUsers</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/zjx86320/article/details/50412263\">分配组任务的三种方式</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/ylforever/article/details/99708257\">查询待办和已办任务</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/cxyj/p/3893631.html\">Activiti业务键（businessKey）</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"Activiti-官方网站\"><a href=\"#Activiti-官方网站\" class=\"headerlink\" title=\"Activiti 官方网站\"></a>Activiti 官方网站</h1><p>先上官方文档，<a href=\"https://www.activiti.org/userguide\">Activiti 6 User Guide</a></p>","more":"<h1 id=\"找到的教程系列文章\"><a href=\"#找到的教程系列文章\" class=\"headerlink\" title=\"找到的教程系列文章\"></a>找到的教程系列文章</h1><ul>\n<li><a href=\"https://zhengjianfeng.cn/?p=162\">SpringBoot Activiti6系列教程(一)-activiti-app部署</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=167\">SpringBoot Activiti6系列教程(二)-基于mysql数据库初始化</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=170\">SpringBoot Activiti6系列教程(三)-开发一个简单的SpringBoot activiti6应用程序</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=176\">SpringBoot Activiti6系列教程(四)-流程部署</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=179\">SpringBoot Activiti6系列教程(五)-activiti api</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=184\">SpringBoot Activiti6系列教程(六)-Execution说明</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=186\">SpringBoot Activiti6系列教程(七)-变量</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=190\">SpringBoot Activiti6系列教程(八)-流程拒绝实现</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=193\">SpringBoot Activiti6系列教程(九)-流程回退实现</a></li>\n<li><a href=\"https://zhengjianfeng.cn/?p=197\">SpringBoot Activiti6系列教程(十)-流程加签征询实现(完结篇)</a></li>\n</ul>\n<h1 id=\"架构说明\"><a href=\"#架构说明\" class=\"headerlink\" title=\"架构说明\"></a>架构说明</h1><blockquote>\n<p>ProcessEngineConfiguration类，主要作用是加载activiti.cfg.xml配置文件；</p>\n</blockquote>\n<blockquote>\n<p>ProcessEngine类，可以生成activiti的工作环境（建表），通过此类得到各个Service的接口；</p>\n</blockquote>\n<blockquote>\n<p>Service接口，快速实现数据库表的操作；</p>\n<p>​        |—- RepositoryService</p>\n<p>​        |—- RuntimeService</p>\n<p>​        |—- TaskService                查看、处理任务</p>\n<p>​        |—- HistoryService</p>\n<p><a href=\"https://my.oschina.net/fuyung/blog/475181\">Activiti核心API介绍</a></p>\n</blockquote>\n<h1 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h1><blockquote>\n<p>流程部署<br>    1、单个文件部署（bpmn文件，png文件），addClasspathResource(“*.bpmn”)</p>\n<p>​    2、将bpmn文件与png文件压缩成zip文件，再通过addZipInputStream()部署</p>\n</blockquote>\n<blockquote>\n<p>流程实例</p>\n<p>一个流程定义可以对应多个流程实例<br>启动流程实例 RuntimeService startProcessInstanceByKey(“key”)</p>\n</blockquote>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><blockquote>\n<p><a href=\"https://blog.csdn.net/qq_15204179/article/details/86298442\">组任务流程CandidateUsers</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/zjx86320/article/details/50412263\">分配组任务的三种方式</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/ylforever/article/details/99708257\">查询待办和已办任务</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/cxyj/p/3893631.html\">Activiti业务键（businessKey）</a></p>\n</blockquote>"},{"title":"Git 分支管理","date":"2021-08-22T07:43:45.000Z","_content":"\nGit进行本地仓库和远程仓库的分支管理。\n\n<!--more-->\n\n# 管理分支\n\n## 本地分支\n\n1. 查看本地分支\n\n    ```bash\n    # 查看分支\n    git branch\n    # 查看所有分支\n    git branch -a\n    ```\n\n    结果\n\n    ```bash\n    # *号表示的是当前分支\n    * master\n    ```\n\n2. 新建本地分支\n\n    ```bash\n    git branch [branch name]\n    ```\n\n3. 切换分支\n\n    ```bash\n    git checkout [branch name]\n    ```\n\n4. 创建&切换分支\n\n    ```bash\n    # 创建分支的同时切换到该分支\n    git checkout -b [branch name]\n    ```\n\n5. 删除分支\n\n    ```bash\n    git branch -d [branch name]\n    ```\n\n6. 将分支推送到远程仓库\n\n    ```bash\n    git push origin [branch name]\n    ```\n\n## 远程分支\n\n1. 查看远程分支\n\n    ```bash\n    git branch -r\n    ```\n\n2. 删除远程分支\n\n    ```bash\n    # 分支名称前的冒号代表删除\n    git push origin :[branch name]\n    ```\n\n# 参考文章\n\n[git创建新分支，并将本地代码提交到新分支上](https://blog.csdn.net/chen134225/article/details/95475960)","source":"_posts/Git分支管理.md","raw":"---\ntitle: Git 分支管理\ndate: 2021-08-22 15:43:45\ntags: \n    - Git\ncategories:\n    - Git\n---\n\nGit进行本地仓库和远程仓库的分支管理。\n\n<!--more-->\n\n# 管理分支\n\n## 本地分支\n\n1. 查看本地分支\n\n    ```bash\n    # 查看分支\n    git branch\n    # 查看所有分支\n    git branch -a\n    ```\n\n    结果\n\n    ```bash\n    # *号表示的是当前分支\n    * master\n    ```\n\n2. 新建本地分支\n\n    ```bash\n    git branch [branch name]\n    ```\n\n3. 切换分支\n\n    ```bash\n    git checkout [branch name]\n    ```\n\n4. 创建&切换分支\n\n    ```bash\n    # 创建分支的同时切换到该分支\n    git checkout -b [branch name]\n    ```\n\n5. 删除分支\n\n    ```bash\n    git branch -d [branch name]\n    ```\n\n6. 将分支推送到远程仓库\n\n    ```bash\n    git push origin [branch name]\n    ```\n\n## 远程分支\n\n1. 查看远程分支\n\n    ```bash\n    git branch -r\n    ```\n\n2. 删除远程分支\n\n    ```bash\n    # 分支名称前的冒号代表删除\n    git push origin :[branch name]\n    ```\n\n# 参考文章\n\n[git创建新分支，并将本地代码提交到新分支上](https://blog.csdn.net/chen134225/article/details/95475960)","slug":"Git分支管理","published":1,"updated":"2021-08-26T06:20:56.458Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmat0003fa5898080l5a","content":"<p>Git进行本地仓库和远程仓库的分支管理。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"管理分支\"><a href=\"#管理分支\" class=\"headerlink\" title=\"管理分支\"></a>管理分支</h1><h2 id=\"本地分支\"><a href=\"#本地分支\" class=\"headerlink\" title=\"本地分支\"></a>本地分支</h2><ol>\n<li><p>查看本地分支</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看分支</span></span><br><span class=\"line\">git branch</span><br><span class=\"line\"><span class=\"comment\"># 查看所有分支</span></span><br><span class=\"line\">git branch -a</span><br></pre></td></tr></table></figure>\n\n<p> 结果</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># *号表示的是当前分支</span></span><br><span class=\"line\">* master</span><br></pre></td></tr></table></figure></li>\n<li><p>新建本地分支</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch [branch name]</span><br></pre></td></tr></table></figure></li>\n<li><p>切换分支</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout [branch name]</span><br></pre></td></tr></table></figure></li>\n<li><p>创建&amp;切换分支</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建分支的同时切换到该分支</span></span><br><span class=\"line\">git checkout -b [branch name]</span><br></pre></td></tr></table></figure></li>\n<li><p>删除分支</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d [branch name]</span><br></pre></td></tr></table></figure></li>\n<li><p>将分支推送到远程仓库</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin [branch name]</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"远程分支\"><a href=\"#远程分支\" class=\"headerlink\" title=\"远程分支\"></a>远程分支</h2><ol>\n<li><p>查看远程分支</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -r</span><br></pre></td></tr></table></figure></li>\n<li><p>删除远程分支</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 分支名称前的冒号代表删除</span></span><br><span class=\"line\">git push origin :[branch name]</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://blog.csdn.net/chen134225/article/details/95475960\">git创建新分支，并将本地代码提交到新分支上</a></p>\n","site":{"data":{}},"excerpt":"<p>Git进行本地仓库和远程仓库的分支管理。</p>","more":"<h1 id=\"管理分支\"><a href=\"#管理分支\" class=\"headerlink\" title=\"管理分支\"></a>管理分支</h1><h2 id=\"本地分支\"><a href=\"#本地分支\" class=\"headerlink\" title=\"本地分支\"></a>本地分支</h2><ol>\n<li><p>查看本地分支</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看分支</span></span><br><span class=\"line\">git branch</span><br><span class=\"line\"><span class=\"comment\"># 查看所有分支</span></span><br><span class=\"line\">git branch -a</span><br></pre></td></tr></table></figure>\n\n<p> 结果</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># *号表示的是当前分支</span></span><br><span class=\"line\">* master</span><br></pre></td></tr></table></figure></li>\n<li><p>新建本地分支</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch [branch name]</span><br></pre></td></tr></table></figure></li>\n<li><p>切换分支</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout [branch name]</span><br></pre></td></tr></table></figure></li>\n<li><p>创建&amp;切换分支</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建分支的同时切换到该分支</span></span><br><span class=\"line\">git checkout -b [branch name]</span><br></pre></td></tr></table></figure></li>\n<li><p>删除分支</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d [branch name]</span><br></pre></td></tr></table></figure></li>\n<li><p>将分支推送到远程仓库</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin [branch name]</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"远程分支\"><a href=\"#远程分支\" class=\"headerlink\" title=\"远程分支\"></a>远程分支</h2><ol>\n<li><p>查看远程分支</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -r</span><br></pre></td></tr></table></figure></li>\n<li><p>删除远程分支</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 分支名称前的冒号代表删除</span></span><br><span class=\"line\">git push origin :[branch name]</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://blog.csdn.net/chen134225/article/details/95475960\">git创建新分支，并将本地代码提交到新分支上</a></p>"},{"title":"Linux解决VMware问题","date":"2021-08-26T13:00:00.000Z","_content":"\n我在Manjaro升级linux内核后启动虚拟机突然报找不到vmmon模块错误，大致如下：\n\n<!--more-->\n\n```bash\ncould not open /dev/ vmmon，Please make sure that the kernel module `vmmon’ is loaded.\n```\n\n大部分回答说的都是执行以下命令：\n\n```bash\nsudo vmware-modconfig --console --install-all\n```\n\n\n但我执行后却报找不到文件\n\n```bash\n[AppLoader] GLib does not have GSettings support.\nsh: line 1: /usr/lib/systemd/scripts/vmware: No such file or directory\nUnable to stop services\n```\n\n还有人说执行：\n\n```bash\n/etc/init.d/vmware start\n```\n\n同样报错：\n\n```bash\nno such file or directory: /etc/init.d/vmware\n```\n\n也试了重装VMware，还是一样。\n\n最后在回答中看到有这三条命令，试了一下，问题终于解决。\n\n```bash\nsudo modprobe -v vmmon\n\nsudo modprobe -v vmnet\n\nsudo vmware-networks --start\n```\n\n# 参考文章\n\n[Install VMware : Could not open /dev/vmmon: No such file or directory. Please make sure that the kernel module `vmmon' is loaded [closed]](https://stackoverflow.com/questions/49205162/install-vmware-could-not-open-dev-vmmon-no-such-file-or-directory-please-ma)","source":"_posts/Linux解决VMware问题.md","raw":"---\ntitle: Linux解决VMware问题\ndate: 2021-08-26 21:00:00\ntags: \n    - 配置\ncategories:\n    - 配置\n---\n\n我在Manjaro升级linux内核后启动虚拟机突然报找不到vmmon模块错误，大致如下：\n\n<!--more-->\n\n```bash\ncould not open /dev/ vmmon，Please make sure that the kernel module `vmmon’ is loaded.\n```\n\n大部分回答说的都是执行以下命令：\n\n```bash\nsudo vmware-modconfig --console --install-all\n```\n\n\n但我执行后却报找不到文件\n\n```bash\n[AppLoader] GLib does not have GSettings support.\nsh: line 1: /usr/lib/systemd/scripts/vmware: No such file or directory\nUnable to stop services\n```\n\n还有人说执行：\n\n```bash\n/etc/init.d/vmware start\n```\n\n同样报错：\n\n```bash\nno such file or directory: /etc/init.d/vmware\n```\n\n也试了重装VMware，还是一样。\n\n最后在回答中看到有这三条命令，试了一下，问题终于解决。\n\n```bash\nsudo modprobe -v vmmon\n\nsudo modprobe -v vmnet\n\nsudo vmware-networks --start\n```\n\n# 参考文章\n\n[Install VMware : Could not open /dev/vmmon: No such file or directory. Please make sure that the kernel module `vmmon' is loaded [closed]](https://stackoverflow.com/questions/49205162/install-vmware-could-not-open-dev-vmmon-no-such-file-or-directory-please-ma)","slug":"Linux解决VMware问题","published":1,"updated":"2021-08-26T06:24:23.619Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmaw0007fa58616g83zw","content":"<p>我在Manjaro升级linux内核后启动虚拟机突然报找不到vmmon模块错误，大致如下：</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">could not open /dev/ vmmon，Please make sure that the kernel module `vmmon’ is loaded.</span><br></pre></td></tr></table></figure>\n\n<p>大部分回答说的都是执行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vmware-modconfig --console --install-all</span><br></pre></td></tr></table></figure>\n\n\n<p>但我执行后却报找不到文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[AppLoader] GLib does not have GSettings support.</span><br><span class=\"line\">sh: line 1: /usr/lib/systemd/scripts/vmware: No such file or directory</span><br><span class=\"line\">Unable to stop services</span><br></pre></td></tr></table></figure>\n\n<p>还有人说执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/vmware start</span><br></pre></td></tr></table></figure>\n\n<p>同样报错：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">no such file or directory: /etc/init.d/vmware</span><br></pre></td></tr></table></figure>\n\n<p>也试了重装VMware，还是一样。</p>\n<p>最后在回答中看到有这三条命令，试了一下，问题终于解决。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo modprobe -v vmmon</span><br><span class=\"line\"></span><br><span class=\"line\">sudo modprobe -v vmnet</span><br><span class=\"line\"></span><br><span class=\"line\">sudo vmware-networks --start</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p>[Install VMware : Could not open /dev/vmmon: No such file or directory. Please make sure that the kernel module `vmmon’ is loaded [closed]](<a href=\"https://stackoverflow.com/questions/49205162/install-vmware-could-not-open-dev-vmmon-no-such-file-or-directory-please-ma\">https://stackoverflow.com/questions/49205162/install-vmware-could-not-open-dev-vmmon-no-such-file-or-directory-please-ma</a>)</p>\n","site":{"data":{}},"excerpt":"<p>我在Manjaro升级linux内核后启动虚拟机突然报找不到vmmon模块错误，大致如下：</p>","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">could not open /dev/ vmmon，Please make sure that the kernel module `vmmon’ is loaded.</span><br></pre></td></tr></table></figure>\n\n<p>大部分回答说的都是执行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vmware-modconfig --console --install-all</span><br></pre></td></tr></table></figure>\n\n\n<p>但我执行后却报找不到文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[AppLoader] GLib does not have GSettings support.</span><br><span class=\"line\">sh: line 1: /usr/lib/systemd/scripts/vmware: No such file or directory</span><br><span class=\"line\">Unable to stop services</span><br></pre></td></tr></table></figure>\n\n<p>还有人说执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/vmware start</span><br></pre></td></tr></table></figure>\n\n<p>同样报错：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">no such file or directory: /etc/init.d/vmware</span><br></pre></td></tr></table></figure>\n\n<p>也试了重装VMware，还是一样。</p>\n<p>最后在回答中看到有这三条命令，试了一下，问题终于解决。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo modprobe -v vmmon</span><br><span class=\"line\"></span><br><span class=\"line\">sudo modprobe -v vmnet</span><br><span class=\"line\"></span><br><span class=\"line\">sudo vmware-networks --start</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p>[Install VMware : Could not open /dev/vmmon: No such file or directory. Please make sure that the kernel module `vmmon’ is loaded [closed]](<a href=\"https://stackoverflow.com/questions/49205162/install-vmware-could-not-open-dev-vmmon-no-such-file-or-directory-please-ma\">https://stackoverflow.com/questions/49205162/install-vmware-could-not-open-dev-vmmon-no-such-file-or-directory-please-ma</a>)</p>"},{"title":"Linux驱动博通无线网卡","date":"2021-08-25T13:00:00.000Z","_content":"\n解决基于Arch Linux的Linux发行版Manjaro无法识别博通无线网卡驱动的问题。\n\n<!--more-->\n\n# 问题描述\n\n* 找不到无线网络\n* 找不到无线开关\n\n\n# 解决\n\n1. 更新系统软件\n\n  ```bash\n  sudo pacman -Syu\n  ```\n\n2. 安装对应的linux-headers，可在设置查看对应的内核版本\n\n  ```bash\n  sudo pacman -S linux-headers\n  ```\n\n3. 安装博通网卡驱动\n\n  ```bash\n  sudo pacman -S broadcom-wl-dkms\n  ```\n\n4. 重启电脑，这时候应该就解决问题了，输入以下命令验证\n\n  ```bash\n  dkms status\n  # 出现类似信息说明成功\n  # broadcom-wl, 6.30.223.271, 5.10.59-1-MANJARO, x86_64: installed\n  ```\n\n# 参考文章\n\n[论如何在linux上正确驱动博通网卡](https://rowe98.github.io/2019/07/19/bodcom_failure/)","source":"_posts/Linux驱动博通无线网卡.md","raw":"---\ntitle: Linux驱动博通无线网卡\ndate: 2021-08-25 21:00:00\ntags: \n    - 配置\ncategories:\n    - 配置\n---\n\n解决基于Arch Linux的Linux发行版Manjaro无法识别博通无线网卡驱动的问题。\n\n<!--more-->\n\n# 问题描述\n\n* 找不到无线网络\n* 找不到无线开关\n\n\n# 解决\n\n1. 更新系统软件\n\n  ```bash\n  sudo pacman -Syu\n  ```\n\n2. 安装对应的linux-headers，可在设置查看对应的内核版本\n\n  ```bash\n  sudo pacman -S linux-headers\n  ```\n\n3. 安装博通网卡驱动\n\n  ```bash\n  sudo pacman -S broadcom-wl-dkms\n  ```\n\n4. 重启电脑，这时候应该就解决问题了，输入以下命令验证\n\n  ```bash\n  dkms status\n  # 出现类似信息说明成功\n  # broadcom-wl, 6.30.223.271, 5.10.59-1-MANJARO, x86_64: installed\n  ```\n\n# 参考文章\n\n[论如何在linux上正确驱动博通网卡](https://rowe98.github.io/2019/07/19/bodcom_failure/)","slug":"Linux驱动博通无线网卡","published":1,"updated":"2021-08-26T06:24:06.219Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmax0008fa584mym3sqr","content":"<p>解决基于Arch Linux的Linux发行版Manjaro无法识别博通无线网卡驱动的问题。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><ul>\n<li>找不到无线网络</li>\n<li>找不到无线开关</li>\n</ul>\n<h1 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h1><ol>\n<li>更新系统软件</li>\n</ol>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pacman -Syu</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>安装对应的linux-headers，可在设置查看对应的内核版本</li>\n</ol>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pacman -S linux-headers</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>安装博通网卡驱动</li>\n</ol>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pacman -S broadcom-wl-dkms</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>重启电脑，这时候应该就解决问题了，输入以下命令验证</li>\n</ol>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dkms status</span><br><span class=\"line\"><span class=\"comment\"># 出现类似信息说明成功</span></span><br><span class=\"line\"><span class=\"comment\"># broadcom-wl, 6.30.223.271, 5.10.59-1-MANJARO, x86_64: installed</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://rowe98.github.io/2019/07/19/bodcom_failure/\">论如何在linux上正确驱动博通网卡</a></p>\n","site":{"data":{}},"excerpt":"<p>解决基于Arch Linux的Linux发行版Manjaro无法识别博通无线网卡驱动的问题。</p>","more":"<h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><ul>\n<li>找不到无线网络</li>\n<li>找不到无线开关</li>\n</ul>\n<h1 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h1><ol>\n<li>更新系统软件</li>\n</ol>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pacman -Syu</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>安装对应的linux-headers，可在设置查看对应的内核版本</li>\n</ol>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pacman -S linux-headers</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>安装博通网卡驱动</li>\n</ol>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pacman -S broadcom-wl-dkms</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>重启电脑，这时候应该就解决问题了，输入以下命令验证</li>\n</ol>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dkms status</span><br><span class=\"line\"><span class=\"comment\"># 出现类似信息说明成功</span></span><br><span class=\"line\"><span class=\"comment\"># broadcom-wl, 6.30.223.271, 5.10.59-1-MANJARO, x86_64: installed</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://rowe98.github.io/2019/07/19/bodcom_failure/\">论如何在linux上正确驱动博通网卡</a></p>"},{"title":"SpringBoot banner","date":"2021-05-29T13:00:00.000Z","_content":"\nSpring Boot 启动时，控制台输出的图案叫 *banner*，如下所示的Spring图案。\n\n```bash\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v2.5.0)\n```\n\n<!--more-->\n\n# 最简单方式改写banner输出的图案\n\n1. 在src/main/resources目录下新建banner.txt\n2. 在banner.txt上加上图案，可以在这个网站-[一个ASCII图案网站](http://patorjk.com/software/taag/)-上获得自己想要的ASCII图案\n\n这样在启动项目时控制台就可以打印出自己的图案了。\n\n也可以使用jpg、png甚至gif，都命名为banner。\n\n或者通过设置`banner.image.location`属性来作为banner信息，这些图片会被转换为有艺术感的ASCII，并且打印在文本的顶部。\n\n# 对banner做配置\n\n1. 在启动类上设置\n\n    ```java\n    public static void main(String[] args) {\n        // SpringApplication.run(TestApplication.class, args);\n        SpringApplication springApplication = new SpringApplication(TestApplication.class);\n        springApplication.setBannerMode(Banner.Mode.CONSOLE);\n        springApplication.run(args);\n    }\n    ```\n   \n2. 在properties文件中做配置\n\n    ```properties\n    # 打印到控制台\n    spring.main.banner-mode=console\n    # 打印到日志文件\n    spring.main.banner-mode=log\n    # 不打印\n    spring.main.banner-mode=off\n    ```\n\n3. banner配置解析\n\n    * 模式\n\n        ```java\n        OFF\t\t\t\t\t// 关闭banner\n        CONSOLE\t\t\t// 在控制台输出banner图案\n        LOG\t\t\t\t\t// 应为在日志中打印图案，控制台也有\n        ```\n\n    * 打印样式\n\n        ```java\n        AnsiColor         // 用来设定字符的前景色\n        AnsiBackground    // 用来设定字符的背景色\n        AnsiStyle         // 用来控制加粗、斜体、下划线等等。\n        ```\n    \n    * 可以加上文件版本号等\n\n        ```java\n        ${application.title}                    // MANIFEST.MF文件中的应用名称\n\n        ${application.version}                  //  这个是MANIFEST.MF文件中的版本号  \n\n        ${application.formatted-version}        // 这个是上面的的版本号前面加v后上括号  \n\n        ${spring-boot.version}                  // 这个是springboot的版本号  \n\n        ${spring-boot.formatted-version}\t\t\t\t// 同上\n        ```\n\n4. 示例\n\n    ```bash\n    ${AnsiColor.BRIGHT_MAGENTA}\n        ______       ___\n        /\\__  _\\     /\\_ \\\n        \\/_/\\ \\/     \\//\\ \\     ___   __  __     __       __  __    ___   __  __\n        \\ \\ \\       \\ \\ \\   / __`\\/\\ \\/\\ \\  /'__`\\    /\\ \\/\\ \\  / __`\\/\\ \\/\\ \\\n            \\_\\ \\__     \\_\\ \\_/\\ \\\\ \\ \\ \\_/ |/\\  __/    \\ \\ \\_\\ \\/\\ \\\\ \\ \\ \\_\\ \\ \\\n            /\\_____\\    /\\____\\ \\____/\\ \\___/ \\ \\____\\    \\/`____ \\ \\____/\\ \\____/\n            \\/_____/    \\/____/\\/___/  \\/__/   \\/____/     `/___/> \\/___/  \\/___/\n                                                            /\\___/\n                                                            \\/__/\n                    :: Spring Boot ::\t\t\t\t\t\t\t${spring-boot.version}   \n    ```","source":"_posts/SpringBoot-banner.md","raw":"---\ntitle: SpringBoot banner\ndate: 2021-05-29 21:00:00\ntags: \n    - Java\ncategories:\n    - Java\n    - Spring Boot\n---\n\nSpring Boot 启动时，控制台输出的图案叫 *banner*，如下所示的Spring图案。\n\n```bash\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v2.5.0)\n```\n\n<!--more-->\n\n# 最简单方式改写banner输出的图案\n\n1. 在src/main/resources目录下新建banner.txt\n2. 在banner.txt上加上图案，可以在这个网站-[一个ASCII图案网站](http://patorjk.com/software/taag/)-上获得自己想要的ASCII图案\n\n这样在启动项目时控制台就可以打印出自己的图案了。\n\n也可以使用jpg、png甚至gif，都命名为banner。\n\n或者通过设置`banner.image.location`属性来作为banner信息，这些图片会被转换为有艺术感的ASCII，并且打印在文本的顶部。\n\n# 对banner做配置\n\n1. 在启动类上设置\n\n    ```java\n    public static void main(String[] args) {\n        // SpringApplication.run(TestApplication.class, args);\n        SpringApplication springApplication = new SpringApplication(TestApplication.class);\n        springApplication.setBannerMode(Banner.Mode.CONSOLE);\n        springApplication.run(args);\n    }\n    ```\n   \n2. 在properties文件中做配置\n\n    ```properties\n    # 打印到控制台\n    spring.main.banner-mode=console\n    # 打印到日志文件\n    spring.main.banner-mode=log\n    # 不打印\n    spring.main.banner-mode=off\n    ```\n\n3. banner配置解析\n\n    * 模式\n\n        ```java\n        OFF\t\t\t\t\t// 关闭banner\n        CONSOLE\t\t\t// 在控制台输出banner图案\n        LOG\t\t\t\t\t// 应为在日志中打印图案，控制台也有\n        ```\n\n    * 打印样式\n\n        ```java\n        AnsiColor         // 用来设定字符的前景色\n        AnsiBackground    // 用来设定字符的背景色\n        AnsiStyle         // 用来控制加粗、斜体、下划线等等。\n        ```\n    \n    * 可以加上文件版本号等\n\n        ```java\n        ${application.title}                    // MANIFEST.MF文件中的应用名称\n\n        ${application.version}                  //  这个是MANIFEST.MF文件中的版本号  \n\n        ${application.formatted-version}        // 这个是上面的的版本号前面加v后上括号  \n\n        ${spring-boot.version}                  // 这个是springboot的版本号  \n\n        ${spring-boot.formatted-version}\t\t\t\t// 同上\n        ```\n\n4. 示例\n\n    ```bash\n    ${AnsiColor.BRIGHT_MAGENTA}\n        ______       ___\n        /\\__  _\\     /\\_ \\\n        \\/_/\\ \\/     \\//\\ \\     ___   __  __     __       __  __    ___   __  __\n        \\ \\ \\       \\ \\ \\   / __`\\/\\ \\/\\ \\  /'__`\\    /\\ \\/\\ \\  / __`\\/\\ \\/\\ \\\n            \\_\\ \\__     \\_\\ \\_/\\ \\\\ \\ \\ \\_/ |/\\  __/    \\ \\ \\_\\ \\/\\ \\\\ \\ \\ \\_\\ \\ \\\n            /\\_____\\    /\\____\\ \\____/\\ \\___/ \\ \\____\\    \\/`____ \\ \\____/\\ \\____/\n            \\/_____/    \\/____/\\/___/  \\/__/   \\/____/     `/___/> \\/___/  \\/___/\n                                                            /\\___/\n                                                            \\/__/\n                    :: Spring Boot ::\t\t\t\t\t\t\t${spring-boot.version}   \n    ```","slug":"SpringBoot-banner","published":1,"updated":"2021-08-26T06:20:56.458Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmax0009fa588az802ue","content":"<p>Spring Boot 启动时，控制台输出的图案叫 <em>banner</em>，如下所示的Spring图案。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  .   ____          _            __ _ _</span><br><span class=\"line\"> /\\\\ / ___<span class=\"string\">&#x27;_ __ _ _(_)_ __  __ _ \\ \\ \\ \\</span></span><br><span class=\"line\"><span class=\"string\">( ( )\\___ | &#x27;</span>_ | <span class=\"string\">&#x27;_| | &#x27;</span>_ \\/ _` | \\ \\ \\ \\</span><br><span class=\"line\"> \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )</span><br><span class=\"line\">  <span class=\"string\">&#x27;  |____| .__|_| |_|_| |_\\__, | / / / /</span></span><br><span class=\"line\"><span class=\"string\"> =========|_|==============|___/=/_/_/_/</span></span><br><span class=\"line\"><span class=\"string\"> :: Spring Boot ::                (v2.5.0)</span></span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<h1 id=\"最简单方式改写banner输出的图案\"><a href=\"#最简单方式改写banner输出的图案\" class=\"headerlink\" title=\"最简单方式改写banner输出的图案\"></a>最简单方式改写banner输出的图案</h1><ol>\n<li>在src/main/resources目录下新建banner.txt</li>\n<li>在banner.txt上加上图案，可以在这个网站-<a href=\"http://patorjk.com/software/taag/\">一个ASCII图案网站</a>-上获得自己想要的ASCII图案</li>\n</ol>\n<p>这样在启动项目时控制台就可以打印出自己的图案了。</p>\n<p>也可以使用jpg、png甚至gif，都命名为banner。</p>\n<p>或者通过设置<code>banner.image.location</code>属性来作为banner信息，这些图片会被转换为有艺术感的ASCII，并且打印在文本的顶部。</p>\n<h1 id=\"对banner做配置\"><a href=\"#对banner做配置\" class=\"headerlink\" title=\"对banner做配置\"></a>对banner做配置</h1><ol>\n<li><p>在启动类上设置</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// SpringApplication.run(TestApplication.class, args);</span></span><br><span class=\"line\">    SpringApplication springApplication = <span class=\"keyword\">new</span> SpringApplication(TestApplication.class);</span><br><span class=\"line\">    springApplication.setBannerMode(Banner.Mode.CONSOLE);</span><br><span class=\"line\">    springApplication.run(args);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>在properties文件中做配置</p>\n <figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打印到控制台</span></span><br><span class=\"line\"><span class=\"meta\">spring.main.banner-mode</span>=<span class=\"string\">console</span></span><br><span class=\"line\"><span class=\"comment\"># 打印到日志文件</span></span><br><span class=\"line\"><span class=\"meta\">spring.main.banner-mode</span>=<span class=\"string\">log</span></span><br><span class=\"line\"><span class=\"comment\"># 不打印</span></span><br><span class=\"line\"><span class=\"meta\">spring.main.banner-mode</span>=<span class=\"string\">off</span></span><br></pre></td></tr></table></figure></li>\n<li><p>banner配置解析</p>\n<ul>\n<li><p>模式</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OFF\t\t\t\t\t<span class=\"comment\">// 关闭banner</span></span><br><span class=\"line\">CONSOLE\t\t\t<span class=\"comment\">// 在控制台输出banner图案</span></span><br><span class=\"line\">LOG\t\t\t\t\t<span class=\"comment\">// 应为在日志中打印图案，控制台也有</span></span><br></pre></td></tr></table></figure></li>\n<li><p>打印样式</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AnsiColor         <span class=\"comment\">// 用来设定字符的前景色</span></span><br><span class=\"line\">AnsiBackground    <span class=\"comment\">// 用来设定字符的背景色</span></span><br><span class=\"line\">AnsiStyle         <span class=\"comment\">// 用来控制加粗、斜体、下划线等等。</span></span><br></pre></td></tr></table></figure></li>\n<li><p>可以加上文件版本号等</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&#123;application.title&#125;                    <span class=\"comment\">// MANIFEST.MF文件中的应用名称</span></span><br><span class=\"line\"></span><br><span class=\"line\">$&#123;application.version&#125;                  <span class=\"comment\">//  这个是MANIFEST.MF文件中的版本号  </span></span><br><span class=\"line\"></span><br><span class=\"line\">$&#123;application.formatted-version&#125;        <span class=\"comment\">// 这个是上面的的版本号前面加v后上括号  </span></span><br><span class=\"line\"></span><br><span class=\"line\">$&#123;spring-boot.version&#125;                  <span class=\"comment\">// 这个是springboot的版本号  </span></span><br><span class=\"line\"></span><br><span class=\"line\">$&#123;spring-boot.formatted-version&#125;\t\t\t\t<span class=\"comment\">// 同上</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>示例</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$&#123;AnsiColor.BRIGHT_MAGENTA&#125;</span></span><br><span class=\"line\">    ______       ___</span><br><span class=\"line\">    /\\__  _\\     /\\_ \\</span><br><span class=\"line\">    \\/_/\\ \\/     \\//\\ \\     ___   __  __     __       __  __    ___   __  __</span><br><span class=\"line\">    \\ \\ \\       \\ \\ \\   / __`\\/\\ \\/\\ \\  /<span class=\"string\">&#x27;__`\\    /\\ \\/\\ \\  / __`\\/\\ \\/\\ \\</span></span><br><span class=\"line\"><span class=\"string\">        \\_\\ \\__     \\_\\ \\_/\\ \\\\ \\ \\ \\_/ |/\\  __/    \\ \\ \\_\\ \\/\\ \\\\ \\ \\ \\_\\ \\ \\</span></span><br><span class=\"line\"><span class=\"string\">        /\\_____\\    /\\____\\ \\____/\\ \\___/ \\ \\____\\    \\/`____ \\ \\____/\\ \\____/</span></span><br><span class=\"line\"><span class=\"string\">        \\/_____/    \\/____/\\/___/  \\/__/   \\/____/     `/___/&gt; \\/___/  \\/___/</span></span><br><span class=\"line\"><span class=\"string\">                                                        /\\___/</span></span><br><span class=\"line\"><span class=\"string\">                                                        \\/__/</span></span><br><span class=\"line\"><span class=\"string\">                :: Spring Boot ::\t\t\t\t\t\t\t$&#123;spring-boot.version&#125;   </span></span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>Spring Boot 启动时，控制台输出的图案叫 <em>banner</em>，如下所示的Spring图案。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  .   ____          _            __ _ _</span><br><span class=\"line\"> /\\\\ / ___<span class=\"string\">&#x27;_ __ _ _(_)_ __  __ _ \\ \\ \\ \\</span></span><br><span class=\"line\"><span class=\"string\">( ( )\\___ | &#x27;</span>_ | <span class=\"string\">&#x27;_| | &#x27;</span>_ \\/ _` | \\ \\ \\ \\</span><br><span class=\"line\"> \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )</span><br><span class=\"line\">  <span class=\"string\">&#x27;  |____| .__|_| |_|_| |_\\__, | / / / /</span></span><br><span class=\"line\"><span class=\"string\"> =========|_|==============|___/=/_/_/_/</span></span><br><span class=\"line\"><span class=\"string\"> :: Spring Boot ::                (v2.5.0)</span></span><br></pre></td></tr></table></figure>","more":"<h1 id=\"最简单方式改写banner输出的图案\"><a href=\"#最简单方式改写banner输出的图案\" class=\"headerlink\" title=\"最简单方式改写banner输出的图案\"></a>最简单方式改写banner输出的图案</h1><ol>\n<li>在src/main/resources目录下新建banner.txt</li>\n<li>在banner.txt上加上图案，可以在这个网站-<a href=\"http://patorjk.com/software/taag/\">一个ASCII图案网站</a>-上获得自己想要的ASCII图案</li>\n</ol>\n<p>这样在启动项目时控制台就可以打印出自己的图案了。</p>\n<p>也可以使用jpg、png甚至gif，都命名为banner。</p>\n<p>或者通过设置<code>banner.image.location</code>属性来作为banner信息，这些图片会被转换为有艺术感的ASCII，并且打印在文本的顶部。</p>\n<h1 id=\"对banner做配置\"><a href=\"#对banner做配置\" class=\"headerlink\" title=\"对banner做配置\"></a>对banner做配置</h1><ol>\n<li><p>在启动类上设置</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// SpringApplication.run(TestApplication.class, args);</span></span><br><span class=\"line\">    SpringApplication springApplication = <span class=\"keyword\">new</span> SpringApplication(TestApplication.class);</span><br><span class=\"line\">    springApplication.setBannerMode(Banner.Mode.CONSOLE);</span><br><span class=\"line\">    springApplication.run(args);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>在properties文件中做配置</p>\n <figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打印到控制台</span></span><br><span class=\"line\"><span class=\"meta\">spring.main.banner-mode</span>=<span class=\"string\">console</span></span><br><span class=\"line\"><span class=\"comment\"># 打印到日志文件</span></span><br><span class=\"line\"><span class=\"meta\">spring.main.banner-mode</span>=<span class=\"string\">log</span></span><br><span class=\"line\"><span class=\"comment\"># 不打印</span></span><br><span class=\"line\"><span class=\"meta\">spring.main.banner-mode</span>=<span class=\"string\">off</span></span><br></pre></td></tr></table></figure></li>\n<li><p>banner配置解析</p>\n<ul>\n<li><p>模式</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">OFF\t\t\t\t\t<span class=\"comment\">// 关闭banner</span></span><br><span class=\"line\">CONSOLE\t\t\t<span class=\"comment\">// 在控制台输出banner图案</span></span><br><span class=\"line\">LOG\t\t\t\t\t<span class=\"comment\">// 应为在日志中打印图案，控制台也有</span></span><br></pre></td></tr></table></figure></li>\n<li><p>打印样式</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AnsiColor         <span class=\"comment\">// 用来设定字符的前景色</span></span><br><span class=\"line\">AnsiBackground    <span class=\"comment\">// 用来设定字符的背景色</span></span><br><span class=\"line\">AnsiStyle         <span class=\"comment\">// 用来控制加粗、斜体、下划线等等。</span></span><br></pre></td></tr></table></figure></li>\n<li><p>可以加上文件版本号等</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&#123;application.title&#125;                    <span class=\"comment\">// MANIFEST.MF文件中的应用名称</span></span><br><span class=\"line\"></span><br><span class=\"line\">$&#123;application.version&#125;                  <span class=\"comment\">//  这个是MANIFEST.MF文件中的版本号  </span></span><br><span class=\"line\"></span><br><span class=\"line\">$&#123;application.formatted-version&#125;        <span class=\"comment\">// 这个是上面的的版本号前面加v后上括号  </span></span><br><span class=\"line\"></span><br><span class=\"line\">$&#123;spring-boot.version&#125;                  <span class=\"comment\">// 这个是springboot的版本号  </span></span><br><span class=\"line\"></span><br><span class=\"line\">$&#123;spring-boot.formatted-version&#125;\t\t\t\t<span class=\"comment\">// 同上</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>示例</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$&#123;AnsiColor.BRIGHT_MAGENTA&#125;</span></span><br><span class=\"line\">    ______       ___</span><br><span class=\"line\">    /\\__  _\\     /\\_ \\</span><br><span class=\"line\">    \\/_/\\ \\/     \\//\\ \\     ___   __  __     __       __  __    ___   __  __</span><br><span class=\"line\">    \\ \\ \\       \\ \\ \\   / __`\\/\\ \\/\\ \\  /<span class=\"string\">&#x27;__`\\    /\\ \\/\\ \\  / __`\\/\\ \\/\\ \\</span></span><br><span class=\"line\"><span class=\"string\">        \\_\\ \\__     \\_\\ \\_/\\ \\\\ \\ \\ \\_/ |/\\  __/    \\ \\ \\_\\ \\/\\ \\\\ \\ \\ \\_\\ \\ \\</span></span><br><span class=\"line\"><span class=\"string\">        /\\_____\\    /\\____\\ \\____/\\ \\___/ \\ \\____\\    \\/`____ \\ \\____/\\ \\____/</span></span><br><span class=\"line\"><span class=\"string\">        \\/_____/    \\/____/\\/___/  \\/__/   \\/____/     `/___/&gt; \\/___/  \\/___/</span></span><br><span class=\"line\"><span class=\"string\">                                                        /\\___/</span></span><br><span class=\"line\"><span class=\"string\">                                                        \\/__/</span></span><br><span class=\"line\"><span class=\"string\">                :: Spring Boot ::\t\t\t\t\t\t\t$&#123;spring-boot.version&#125;   </span></span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"TiDB学习记录","date":"2021-06-22T08:00:00.000Z","_content":"\n先上TiDB官方文档链接，[TiDB 简介 - PingCAP Docs](https://docs.pingcap.com/zh/tidb/stable/overview)\n\n<!--more-->\n\n# 在macOS上部署本地测试环境\n\n1. 下载安装 TiUP：\n\n   ```bash\n   curl --proto '=https' --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh | sh\n   ```\n\n2. 声明全局环境变量：\n\n   ```bash\n   source .bash_profile\n   ```\n\n3. 启动集群：\n\n   * 直接执行 `tiup playground` 命令会运行最新版本的 TiDB 集群，其中 TiDB、TiKV、PD 和 TiFlash 实例各 1 个：\n\n     ```bash\n     tiup playground\n     ```\n\n   * 可以指定 TiDB 版本以及各组件实例个数，命令类似于：\n\n     ```bash\n     tiup playground v5.0.2 --db 2 --pd 3 --kv 3 --monitor\n     ```\n\n   > 以这种方式执行的 playground，在结束部署测试后 TiUP 会清理掉原集群数据，重新执行该命令后会得到一个全新的集群。\n   >\n   > 若希望持久化数据，可以执行 TiUP 的 `--tag` 参数：\n   >\n   > ```bash\n   > tiup --tag <your-tag> playground\n   > ```\n\n4. 访问 TiDB 数据库：\n\n   * 使用 TiUP `client` 连接 TiDB：\n\n     ```bash\n     tiup client\n     ```\n\n   * 使用 MySQL 客户端连接 TiDB：\n\n     ```bash\n     # 此连接地址会在启动集群时在终端提示\n     mysql --host 127.0.0.1 --port 4000 -u root\n     ```\n\n5. 通过 `http://127.0.0.1:9090` 访问 TiDB 的 Prometheus 管理界面。\n\n6. 通过 `http://127.0.0.1:2379/dashboard` 访问 [TiDB Dashboard](https://docs.pingcap.com/zh/tidb/stable/dashboard-intro) 页面，默认用户名为 `root`，密码为空。\n\n7. 清理集群：\n\n   * ctrl+c 终止进程。\n\n   * 执行以下命令清理所有集群：\n\n     ```bash\n     tiup clean --all\n     ```","source":"_posts/TiDB学习记录.md","raw":"---\ntitle: TiDB学习记录\ndate: 2021-06-22 16:00:00\ntags: \n    - SQL\ncategories:\n    - SQL\n    - TiDB\n---\n\n先上TiDB官方文档链接，[TiDB 简介 - PingCAP Docs](https://docs.pingcap.com/zh/tidb/stable/overview)\n\n<!--more-->\n\n# 在macOS上部署本地测试环境\n\n1. 下载安装 TiUP：\n\n   ```bash\n   curl --proto '=https' --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh | sh\n   ```\n\n2. 声明全局环境变量：\n\n   ```bash\n   source .bash_profile\n   ```\n\n3. 启动集群：\n\n   * 直接执行 `tiup playground` 命令会运行最新版本的 TiDB 集群，其中 TiDB、TiKV、PD 和 TiFlash 实例各 1 个：\n\n     ```bash\n     tiup playground\n     ```\n\n   * 可以指定 TiDB 版本以及各组件实例个数，命令类似于：\n\n     ```bash\n     tiup playground v5.0.2 --db 2 --pd 3 --kv 3 --monitor\n     ```\n\n   > 以这种方式执行的 playground，在结束部署测试后 TiUP 会清理掉原集群数据，重新执行该命令后会得到一个全新的集群。\n   >\n   > 若希望持久化数据，可以执行 TiUP 的 `--tag` 参数：\n   >\n   > ```bash\n   > tiup --tag <your-tag> playground\n   > ```\n\n4. 访问 TiDB 数据库：\n\n   * 使用 TiUP `client` 连接 TiDB：\n\n     ```bash\n     tiup client\n     ```\n\n   * 使用 MySQL 客户端连接 TiDB：\n\n     ```bash\n     # 此连接地址会在启动集群时在终端提示\n     mysql --host 127.0.0.1 --port 4000 -u root\n     ```\n\n5. 通过 `http://127.0.0.1:9090` 访问 TiDB 的 Prometheus 管理界面。\n\n6. 通过 `http://127.0.0.1:2379/dashboard` 访问 [TiDB Dashboard](https://docs.pingcap.com/zh/tidb/stable/dashboard-intro) 页面，默认用户名为 `root`，密码为空。\n\n7. 清理集群：\n\n   * ctrl+c 终止进程。\n\n   * 执行以下命令清理所有集群：\n\n     ```bash\n     tiup clean --all\n     ```","slug":"TiDB学习记录","published":1,"updated":"2021-08-26T06:20:56.458Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmaz000dfa58294s3crf","content":"<p>先上TiDB官方文档链接，<a href=\"https://docs.pingcap.com/zh/tidb/stable/overview\">TiDB 简介 - PingCAP Docs</a></p>\n<span id=\"more\"></span>\n\n<h1 id=\"在macOS上部署本地测试环境\"><a href=\"#在macOS上部署本地测试环境\" class=\"headerlink\" title=\"在macOS上部署本地测试环境\"></a>在macOS上部署本地测试环境</h1><ol>\n<li><p>下载安装 TiUP：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl --proto <span class=\"string\">&#x27;=https&#x27;</span> --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh | sh</span><br></pre></td></tr></table></figure></li>\n<li><p>声明全局环境变量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> .bash_profile</span><br></pre></td></tr></table></figure></li>\n<li><p>启动集群：</p>\n<ul>\n<li><p>直接执行 <code>tiup playground</code> 命令会运行最新版本的 TiDB 集群，其中 TiDB、TiKV、PD 和 TiFlash 实例各 1 个：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tiup playground</span><br></pre></td></tr></table></figure></li>\n<li><p>可以指定 TiDB 版本以及各组件实例个数，命令类似于：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tiup playground v5.0.2 --db 2 --pd 3 --kv 3 --monitor</span><br></pre></td></tr></table></figure></li>\n</ul>\n<blockquote>\n<p>以这种方式执行的 playground，在结束部署测试后 TiUP 会清理掉原集群数据，重新执行该命令后会得到一个全新的集群。</p>\n<p>若希望持久化数据，可以执行 TiUP 的 <code>--tag</code> 参数：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tiup --tag &lt;your-tag&gt; playground</span><br></pre></td></tr></table></figure></blockquote>\n</li>\n<li><p>访问 TiDB 数据库：</p>\n<ul>\n<li><p>使用 TiUP <code>client</code> 连接 TiDB：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tiup client</span><br></pre></td></tr></table></figure></li>\n<li><p>使用 MySQL 客户端连接 TiDB：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 此连接地址会在启动集群时在终端提示</span></span><br><span class=\"line\">mysql --host 127.0.0.1 --port 4000 -u root</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>通过 <code>http://127.0.0.1:9090</code> 访问 TiDB 的 Prometheus 管理界面。</p>\n</li>\n<li><p>通过 <code>http://127.0.0.1:2379/dashboard</code> 访问 <a href=\"https://docs.pingcap.com/zh/tidb/stable/dashboard-intro\">TiDB Dashboard</a> 页面，默认用户名为 <code>root</code>，密码为空。</p>\n</li>\n<li><p>清理集群：</p>\n<ul>\n<li><p>ctrl+c 终止进程。</p>\n</li>\n<li><p>执行以下命令清理所有集群：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tiup clean --all</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>先上TiDB官方文档链接，<a href=\"https://docs.pingcap.com/zh/tidb/stable/overview\">TiDB 简介 - PingCAP Docs</a></p>","more":"<h1 id=\"在macOS上部署本地测试环境\"><a href=\"#在macOS上部署本地测试环境\" class=\"headerlink\" title=\"在macOS上部署本地测试环境\"></a>在macOS上部署本地测试环境</h1><ol>\n<li><p>下载安装 TiUP：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl --proto <span class=\"string\">&#x27;=https&#x27;</span> --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh | sh</span><br></pre></td></tr></table></figure></li>\n<li><p>声明全局环境变量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> .bash_profile</span><br></pre></td></tr></table></figure></li>\n<li><p>启动集群：</p>\n<ul>\n<li><p>直接执行 <code>tiup playground</code> 命令会运行最新版本的 TiDB 集群，其中 TiDB、TiKV、PD 和 TiFlash 实例各 1 个：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tiup playground</span><br></pre></td></tr></table></figure></li>\n<li><p>可以指定 TiDB 版本以及各组件实例个数，命令类似于：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tiup playground v5.0.2 --db 2 --pd 3 --kv 3 --monitor</span><br></pre></td></tr></table></figure></li>\n</ul>\n<blockquote>\n<p>以这种方式执行的 playground，在结束部署测试后 TiUP 会清理掉原集群数据，重新执行该命令后会得到一个全新的集群。</p>\n<p>若希望持久化数据，可以执行 TiUP 的 <code>--tag</code> 参数：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tiup --tag &lt;your-tag&gt; playground</span><br></pre></td></tr></table></figure></blockquote>\n</li>\n<li><p>访问 TiDB 数据库：</p>\n<ul>\n<li><p>使用 TiUP <code>client</code> 连接 TiDB：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tiup client</span><br></pre></td></tr></table></figure></li>\n<li><p>使用 MySQL 客户端连接 TiDB：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 此连接地址会在启动集群时在终端提示</span></span><br><span class=\"line\">mysql --host 127.0.0.1 --port 4000 -u root</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>通过 <code>http://127.0.0.1:9090</code> 访问 TiDB 的 Prometheus 管理界面。</p>\n</li>\n<li><p>通过 <code>http://127.0.0.1:2379/dashboard</code> 访问 <a href=\"https://docs.pingcap.com/zh/tidb/stable/dashboard-intro\">TiDB Dashboard</a> 页面，默认用户名为 <code>root</code>，密码为空。</p>\n</li>\n<li><p>清理集群：</p>\n<ul>\n<li><p>ctrl+c 终止进程。</p>\n</li>\n<li><p>执行以下命令清理所有集群：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tiup clean --all</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>"},{"title":"TypeScript学习记录","date":"2021-06-22T10:00:00.000Z","_content":"\n按照惯例，先上官方文档\n\n[TypeScript中文手册](https://typescript.bootcss.com)\n\n<!--more-->\n\n# 参考文章\n\n* [优雅的在vue中使用TypeScript](https://zhuanlan.zhihu.com/p/99343202)","source":"_posts/TypeScript学习记录.md","raw":"---\ntitle: TypeScript学习记录\ndate: 2021-06-22 18:00:00\ntags: \n    - TypeScript\ncategories:\n    - 前端\n    - TypeScript\n---\n\n按照惯例，先上官方文档\n\n[TypeScript中文手册](https://typescript.bootcss.com)\n\n<!--more-->\n\n# 参考文章\n\n* [优雅的在vue中使用TypeScript](https://zhuanlan.zhihu.com/p/99343202)","slug":"TypeScript学习记录","published":1,"updated":"2021-08-26T06:20:56.458Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmb0000ffa58b08v8z61","content":"<p>按照惯例，先上官方文档</p>\n<p><a href=\"https://typescript.bootcss.com/\">TypeScript中文手册</a></p>\n<span id=\"more\"></span>\n\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/99343202\">优雅的在vue中使用TypeScript</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>按照惯例，先上官方文档</p>\n<p><a href=\"https://typescript.bootcss.com/\">TypeScript中文手册</a></p>","more":"<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/99343202\">优雅的在vue中使用TypeScript</a></li>\n</ul>"},{"title":"Windows10 安装 Scoop","date":"2021-08-23T13:50:00.000Z","_content":"\nScoop是可用于windows的一款包管理工具，可以下载程序并自动配置环境变量等，记录一下安装方法。\n\n<!--more-->\n\n# 安装条件\n\n* 用户名不含中文字符\n* Windows 7 SP1+ / Windows Server 2008+\n* PowerShell 3+\n* .NET Framework 4.5+\n\n可在PowerShell运行以下代码获取版本信息：\n\n```powershell\n#查看Powershell版本\n$PSVersionTable.PSVersion.Major\n#查看.NET Framework版本\n$PSVersionTable.CLRVersion.Major\n```\n\n\n先输入以下代码，保证后面的脚本有运行权限：\n\n```powershell\nset-executionpolicy remotesigned -scope currentuser\n\n执行策略更改\n执行策略可帮助你防止执行不信任的脚本。更改执行策略可能会产生安全风险，如 https:/go.microsoft.com/fwlink/?LinkID=135170\n中的 about_Execution_Policies 帮助主题所述。是否要更改执行策略?\n[Y] 是(Y)  [A] 全是(A)  [N] 否(N)  [L] 全否(L)  [S] 暂停(S)  [?] 帮助 (默认值为“N”): y\n```\n\n# 开始安装\n\n在PowerShell输入以下代码下载Scoop：\n\n```powershell\niwr -useb get.scoop.sh | iex\n# or\niex (new-object net.webclient).downloadstring('https://get.scoop.sh')\n```\n\n## 下载出现错误\n\n1. 若下载中断，重新下载之前请先删除 `C:\\Users\\username\\scoop` 文件夹。\n\n2. 需要安全策略错误，如下所示\n  \n  ```powershell\n  PowerShell requires an execution policy in [Unrestricted, RemoteSigned, ByPass] to run Scoop.\n  For example, to set the execution policy to 'RemoteSigned' please run :\n  'Set-ExecutionPolicy RemoteSigned -scope CurrentUser'\n  ```\n\n  修改PowerShell的安全策略：\n\n  ```powershell\n  Set-ExecutionPolicy RemoteSigned -Scope CurrentUser\n  ```\n  \n3. 无法连接到远程服务器\n\n  ```powershell\n  使用“1”个参数调用“DownloadString”时发生异常:“无法连接到远程服务器”\n  所在位置 行:1 字符: 1\n  + iex (new-object net.webclient).downloadstring('https://get.scoop.sh')\n  + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\n      + FullyQualifiedErrorId : WebException\n  ```\n\n  这个错误还有可能出现的 **“基础连接已经关闭：发送时发生错误“** 或 **“操作超时”** ；原因可能是 https://get.scoop.sh 无法访问，或者网络不稳定或者和谐，用以下命令再下载，还是不行的话可多试几次、更换网络或者用梯子\n\n  ```powershell\n  iex (new-object net.webclient).downloadstring('https://raw.githubusercontent.com/lukesampson/scoop/master/bin/install.ps1')\n  ```\n4. 未能创建 SSL/TLS 安全通道\n\n  ```powershell\n  iex : 使用“2”个参数调用“DownloadFile”是发生异常:“请求被中止: 未能创建 SSL/TLS 安全通道。”\n  所在位置 行:1 字符: 1\n  + iex (new-object net.webclient).downloadstring('https://get.scoop.sh')\n  + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      + CategoryInfo          : NotSpecified: (:) [Invoke-Expression], MethodInvocationException\n      + FullyQualifiedErrorId : WebException, Microsoft.PowreShell.Commands.InvokeExpressionCommand\n  ```\n\n  执行以下命令：\n\n  ```powershell\n  [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n  ```\n\n# 安装成功\n\n输入 `scoop help` 验证是否安装成功。\n\n```powershell\nUsage: scoop <command> [<args>]\n\nSome useful commands are:\n\nalias       Manage scoop aliases\nbucket      Manage Scoop buckets\ncache       Show or clear the download cache\ncheckup     Check for potential problems\ncleanup     Cleanup apps by removing old versions\nconfig      Get or set configuration values\ncreate      Create a custom app manifest\ndepends     List dependencies for an app\nexport      Exports (an importable) list of installed apps\nhelp        Show help for a command\nhome        Opens the app homepage\ninfo        Display information about an app\ninstall     Install apps\nlist        List installed apps\nprefix      Returns the path to the specified app\nreset       Reset an app to resolve conflicts\nsearch      Search available apps\nstatus      Show status and check for new app versions\nuninstall   Uninstall an app\nupdate      Update apps, or Scoop itself\nvirustotal  Look for app's hash on virustotal.com\nwhich       Locate a shim/executable (similar to 'which' on Linux)\n\nType 'scoop help <command>' to get help for a specific command.\n```\n\n常用命令：\n\n```powershell\n# 查找软件\nscoop search apps\n# 下载软件\nscoop install apps\n# 卸载软件\nscoop uninstall apps\n```\n\n# 提升下载速度\n\nscoop下载软件大多是从外部链接下载的，网速较慢且容易失败，可以安装aria2来提升下载速度：\n\n```powershell\nscoop install aria2\n```\n\naria2安装成功后再下载其他软件时会自动调用进行多线程下载，所以推荐先安装这个软件提升下载体验。\n\n可以设置下载下载线程数（默认为16线程）\n\n```powershell\nscoop config aria2-max-connection-per-server 16\nscoop config aria2-split 16\nscoop config aria2-min-split-size 1M\n```\n\n# 添加仓库\n\nscoop自带的main bucket软件过少，我们需要添加官方维护的extras bucket：\n\n```powershell\nscoop bucket add extras\n```\n\n也可以添加其他的第三方bucket:\n\n```powershell\nscoop bucket add bucketname bucketaddress\n```\n\n例如添加scoopbucket并安装cajviewer：\n\n```powershell\n# add scoopbucket\nscoop bucket add scoopbucket https://github.com/yuanying1199/scoopbucket\n# install cajviewer\nscoop install scoopbucket/cajviewerlite\n```\n\n# 参考文章\n\n[Scoop安装详解](https://boyinthesun.cn/post/scoop/)\n\n[scoop——强大的Windows命令行包管理工具](https://www.jianshu.com/p/50993df76b1c)","source":"_posts/Windows安装Scoop.md","raw":"---\ntitle: Windows10 安装 Scoop\ndate: 2021-08-23 21:50:00\ntags: \n    - 配置\ncategories:\n    - 配置\n---\n\nScoop是可用于windows的一款包管理工具，可以下载程序并自动配置环境变量等，记录一下安装方法。\n\n<!--more-->\n\n# 安装条件\n\n* 用户名不含中文字符\n* Windows 7 SP1+ / Windows Server 2008+\n* PowerShell 3+\n* .NET Framework 4.5+\n\n可在PowerShell运行以下代码获取版本信息：\n\n```powershell\n#查看Powershell版本\n$PSVersionTable.PSVersion.Major\n#查看.NET Framework版本\n$PSVersionTable.CLRVersion.Major\n```\n\n\n先输入以下代码，保证后面的脚本有运行权限：\n\n```powershell\nset-executionpolicy remotesigned -scope currentuser\n\n执行策略更改\n执行策略可帮助你防止执行不信任的脚本。更改执行策略可能会产生安全风险，如 https:/go.microsoft.com/fwlink/?LinkID=135170\n中的 about_Execution_Policies 帮助主题所述。是否要更改执行策略?\n[Y] 是(Y)  [A] 全是(A)  [N] 否(N)  [L] 全否(L)  [S] 暂停(S)  [?] 帮助 (默认值为“N”): y\n```\n\n# 开始安装\n\n在PowerShell输入以下代码下载Scoop：\n\n```powershell\niwr -useb get.scoop.sh | iex\n# or\niex (new-object net.webclient).downloadstring('https://get.scoop.sh')\n```\n\n## 下载出现错误\n\n1. 若下载中断，重新下载之前请先删除 `C:\\Users\\username\\scoop` 文件夹。\n\n2. 需要安全策略错误，如下所示\n  \n  ```powershell\n  PowerShell requires an execution policy in [Unrestricted, RemoteSigned, ByPass] to run Scoop.\n  For example, to set the execution policy to 'RemoteSigned' please run :\n  'Set-ExecutionPolicy RemoteSigned -scope CurrentUser'\n  ```\n\n  修改PowerShell的安全策略：\n\n  ```powershell\n  Set-ExecutionPolicy RemoteSigned -Scope CurrentUser\n  ```\n  \n3. 无法连接到远程服务器\n\n  ```powershell\n  使用“1”个参数调用“DownloadString”时发生异常:“无法连接到远程服务器”\n  所在位置 行:1 字符: 1\n  + iex (new-object net.webclient).downloadstring('https://get.scoop.sh')\n  + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\n      + FullyQualifiedErrorId : WebException\n  ```\n\n  这个错误还有可能出现的 **“基础连接已经关闭：发送时发生错误“** 或 **“操作超时”** ；原因可能是 https://get.scoop.sh 无法访问，或者网络不稳定或者和谐，用以下命令再下载，还是不行的话可多试几次、更换网络或者用梯子\n\n  ```powershell\n  iex (new-object net.webclient).downloadstring('https://raw.githubusercontent.com/lukesampson/scoop/master/bin/install.ps1')\n  ```\n4. 未能创建 SSL/TLS 安全通道\n\n  ```powershell\n  iex : 使用“2”个参数调用“DownloadFile”是发生异常:“请求被中止: 未能创建 SSL/TLS 安全通道。”\n  所在位置 行:1 字符: 1\n  + iex (new-object net.webclient).downloadstring('https://get.scoop.sh')\n  + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      + CategoryInfo          : NotSpecified: (:) [Invoke-Expression], MethodInvocationException\n      + FullyQualifiedErrorId : WebException, Microsoft.PowreShell.Commands.InvokeExpressionCommand\n  ```\n\n  执行以下命令：\n\n  ```powershell\n  [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n  ```\n\n# 安装成功\n\n输入 `scoop help` 验证是否安装成功。\n\n```powershell\nUsage: scoop <command> [<args>]\n\nSome useful commands are:\n\nalias       Manage scoop aliases\nbucket      Manage Scoop buckets\ncache       Show or clear the download cache\ncheckup     Check for potential problems\ncleanup     Cleanup apps by removing old versions\nconfig      Get or set configuration values\ncreate      Create a custom app manifest\ndepends     List dependencies for an app\nexport      Exports (an importable) list of installed apps\nhelp        Show help for a command\nhome        Opens the app homepage\ninfo        Display information about an app\ninstall     Install apps\nlist        List installed apps\nprefix      Returns the path to the specified app\nreset       Reset an app to resolve conflicts\nsearch      Search available apps\nstatus      Show status and check for new app versions\nuninstall   Uninstall an app\nupdate      Update apps, or Scoop itself\nvirustotal  Look for app's hash on virustotal.com\nwhich       Locate a shim/executable (similar to 'which' on Linux)\n\nType 'scoop help <command>' to get help for a specific command.\n```\n\n常用命令：\n\n```powershell\n# 查找软件\nscoop search apps\n# 下载软件\nscoop install apps\n# 卸载软件\nscoop uninstall apps\n```\n\n# 提升下载速度\n\nscoop下载软件大多是从外部链接下载的，网速较慢且容易失败，可以安装aria2来提升下载速度：\n\n```powershell\nscoop install aria2\n```\n\naria2安装成功后再下载其他软件时会自动调用进行多线程下载，所以推荐先安装这个软件提升下载体验。\n\n可以设置下载下载线程数（默认为16线程）\n\n```powershell\nscoop config aria2-max-connection-per-server 16\nscoop config aria2-split 16\nscoop config aria2-min-split-size 1M\n```\n\n# 添加仓库\n\nscoop自带的main bucket软件过少，我们需要添加官方维护的extras bucket：\n\n```powershell\nscoop bucket add extras\n```\n\n也可以添加其他的第三方bucket:\n\n```powershell\nscoop bucket add bucketname bucketaddress\n```\n\n例如添加scoopbucket并安装cajviewer：\n\n```powershell\n# add scoopbucket\nscoop bucket add scoopbucket https://github.com/yuanying1199/scoopbucket\n# install cajviewer\nscoop install scoopbucket/cajviewerlite\n```\n\n# 参考文章\n\n[Scoop安装详解](https://boyinthesun.cn/post/scoop/)\n\n[scoop——强大的Windows命令行包管理工具](https://www.jianshu.com/p/50993df76b1c)","slug":"Windows安装Scoop","published":1,"updated":"2021-08-26T06:20:56.458Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmb1000ifa580v5o4z3r","content":"<p>Scoop是可用于windows的一款包管理工具，可以下载程序并自动配置环境变量等，记录一下安装方法。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"安装条件\"><a href=\"#安装条件\" class=\"headerlink\" title=\"安装条件\"></a>安装条件</h1><ul>\n<li>用户名不含中文字符</li>\n<li>Windows 7 SP1+ / Windows Server 2008+</li>\n<li>PowerShell 3+</li>\n<li>.NET Framework 4.5+</li>\n</ul>\n<p>可在PowerShell运行以下代码获取版本信息：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查看Powershell版本</span></span><br><span class=\"line\"><span class=\"variable\">$PSVersionTable</span>.PSVersion.Major</span><br><span class=\"line\"><span class=\"comment\">#查看.NET Framework版本</span></span><br><span class=\"line\"><span class=\"variable\">$PSVersionTable</span>.CLRVersion.Major</span><br></pre></td></tr></table></figure>\n\n\n<p>先输入以下代码，保证后面的脚本有运行权限：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set-executionpolicy</span> remotesigned <span class=\"literal\">-scope</span> currentuser</span><br><span class=\"line\"></span><br><span class=\"line\">执行策略更改</span><br><span class=\"line\">执行策略可帮助你防止执行不信任的脚本。更改执行策略可能会产生安全风险，如 https:/go.microsoft.com/fwlink/?LinkID=<span class=\"number\">135170</span></span><br><span class=\"line\">中的 about_Execution_Policies 帮助主题所述。是否要更改执行策略?</span><br><span class=\"line\">[<span class=\"type\">Y</span>] 是(Y)  [<span class=\"type\">A</span>] 全是(A)  [<span class=\"type\">N</span>] 否(N)  [<span class=\"type\">L</span>] 全否(L)  [<span class=\"type\">S</span>] 暂停(S)  [?] 帮助 (默认值为“N”): y</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"开始安装\"><a href=\"#开始安装\" class=\"headerlink\" title=\"开始安装\"></a>开始安装</h1><p>在PowerShell输入以下代码下载Scoop：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">iwr</span> <span class=\"literal\">-useb</span> get.scoop.sh | <span class=\"built_in\">iex</span></span><br><span class=\"line\"><span class=\"comment\"># or</span></span><br><span class=\"line\"><span class=\"built_in\">iex</span> (<span class=\"built_in\">new-object</span> net.webclient).downloadstring(<span class=\"string\">&#x27;https://get.scoop.sh&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"下载出现错误\"><a href=\"#下载出现错误\" class=\"headerlink\" title=\"下载出现错误\"></a>下载出现错误</h2><ol>\n<li><p>若下载中断，重新下载之前请先删除 <code>C:\\Users\\username\\scoop</code> 文件夹。</p>\n</li>\n<li><p>需要安全策略错误，如下所示</p>\n</li>\n</ol>\n  <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PowerShell requires an execution policy <span class=\"keyword\">in</span> [<span class=\"type\">Unrestricted</span>, <span class=\"type\">RemoteSigned</span>, <span class=\"type\">ByPass</span>] to run Scoop.</span><br><span class=\"line\"><span class=\"keyword\">For</span> example, to <span class=\"built_in\">set</span> the execution policy to <span class=\"string\">&#x27;RemoteSigned&#x27;</span> please run :</span><br><span class=\"line\"><span class=\"string\">&#x27;Set-ExecutionPolicy RemoteSigned -scope CurrentUser&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>  修改PowerShell的安全策略：</p>\n  <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Set-ExecutionPolicy</span> RemoteSigned <span class=\"literal\">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>无法连接到远程服务器</li>\n</ol>\n  <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用“<span class=\"number\">1</span>”个参数调用“DownloadString”时发生异常:“无法连接到远程服务器”</span><br><span class=\"line\">所在位置 行:<span class=\"number\">1</span> 字符: <span class=\"number\">1</span></span><br><span class=\"line\">+ <span class=\"built_in\">iex</span> (<span class=\"built_in\">new-object</span> net.webclient).downloadstring(<span class=\"string\">&#x27;https://get.scoop.sh&#x27;</span>)</span><br><span class=\"line\">+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class=\"line\">    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException</span><br><span class=\"line\">    + FullyQualifiedErrorId : WebException</span><br></pre></td></tr></table></figure>\n\n<p>  这个错误还有可能出现的 <strong>“基础连接已经关闭：发送时发生错误“</strong> 或 <strong>“操作超时”</strong> ；原因可能是 <a href=\"https://get.scoop.sh/\">https://get.scoop.sh</a> 无法访问，或者网络不稳定或者和谐，用以下命令再下载，还是不行的话可多试几次、更换网络或者用梯子</p>\n  <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">iex</span> (<span class=\"built_in\">new-object</span> net.webclient).downloadstring(<span class=\"string\">&#x27;https://raw.githubusercontent.com/lukesampson/scoop/master/bin/install.ps1&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>未能创建 SSL/TLS 安全通道</li>\n</ol>\n  <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">iex</span> : 使用“<span class=\"number\">2</span>”个参数调用“DownloadFile”是发生异常:“请求被中止: 未能创建 SSL/TLS 安全通道。”</span><br><span class=\"line\">所在位置 行:<span class=\"number\">1</span> 字符: <span class=\"number\">1</span></span><br><span class=\"line\">+ <span class=\"built_in\">iex</span> (<span class=\"built_in\">new-object</span> net.webclient).downloadstring(<span class=\"string\">&#x27;https://get.scoop.sh&#x27;</span>)</span><br><span class=\"line\">+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class=\"line\">    + CategoryInfo          : NotSpecified: (:) [<span class=\"built_in\">Invoke-Expression</span>], MethodInvocationException</span><br><span class=\"line\">    + FullyQualifiedErrorId : WebException, Microsoft.PowreShell.Commands.InvokeExpressionCommand</span><br></pre></td></tr></table></figure>\n\n<p>  执行以下命令：</p>\n  <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"type\">Net.ServicePointManager</span>]::SecurityProtocol = [<span class=\"type\">Net.SecurityProtocolType</span>]::Tls12</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装成功\"><a href=\"#安装成功\" class=\"headerlink\" title=\"安装成功\"></a>安装成功</h1><p>输入 <code>scoop help</code> 验证是否安装成功。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: scoop &lt;command&gt; [&lt;<span class=\"type\">args</span>&gt;]</span><br><span class=\"line\"></span><br><span class=\"line\">Some useful commands are:</span><br><span class=\"line\"></span><br><span class=\"line\">alias       Manage scoop aliases</span><br><span class=\"line\">bucket      Manage Scoop buckets</span><br><span class=\"line\">cache       Show or <span class=\"built_in\">clear</span> the download cache</span><br><span class=\"line\">checkup     Check <span class=\"keyword\">for</span> potential problems</span><br><span class=\"line\">cleanup     Cleanup apps by removing old versions</span><br><span class=\"line\">config      Get or <span class=\"built_in\">set</span> configuration values</span><br><span class=\"line\">create      Create a custom app manifest</span><br><span class=\"line\">depends     List dependencies <span class=\"keyword\">for</span> an app</span><br><span class=\"line\">export      Exports (an importable) list of installed apps</span><br><span class=\"line\">help        Show help <span class=\"keyword\">for</span> a command</span><br><span class=\"line\">home        Opens the app homepage</span><br><span class=\"line\">info        Display information about an app</span><br><span class=\"line\">install     Install apps</span><br><span class=\"line\">list        List installed apps</span><br><span class=\"line\">prefix      Returns the path to the specified app</span><br><span class=\"line\">reset       Reset an app to resolve conflicts</span><br><span class=\"line\">search      Search available apps</span><br><span class=\"line\">status      Show status and check <span class=\"keyword\">for</span> new app versions</span><br><span class=\"line\">uninstall   Uninstall an app</span><br><span class=\"line\">update      Update apps, or Scoop itself</span><br><span class=\"line\">virustotal  Look <span class=\"keyword\">for</span> app<span class=\"string\">&#x27;s hash on virustotal.com</span></span><br><span class=\"line\"><span class=\"string\">which       Locate a shim/executable (similar to &#x27;</span>which<span class=\"string\">&#x27; on Linux)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Type &#x27;</span>scoop help &lt;command&gt;<span class=\"string\">&#x27; to get help for a specific command.</span></span><br></pre></td></tr></table></figure>\n\n<p>常用命令：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查找软件</span></span><br><span class=\"line\">scoop search apps</span><br><span class=\"line\"><span class=\"comment\"># 下载软件</span></span><br><span class=\"line\">scoop install apps</span><br><span class=\"line\"><span class=\"comment\"># 卸载软件</span></span><br><span class=\"line\">scoop uninstall apps</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"提升下载速度\"><a href=\"#提升下载速度\" class=\"headerlink\" title=\"提升下载速度\"></a>提升下载速度</h1><p>scoop下载软件大多是从外部链接下载的，网速较慢且容易失败，可以安装aria2来提升下载速度：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop install aria2</span><br></pre></td></tr></table></figure>\n\n<p>aria2安装成功后再下载其他软件时会自动调用进行多线程下载，所以推荐先安装这个软件提升下载体验。</p>\n<p>可以设置下载下载线程数（默认为16线程）</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop config aria2<span class=\"literal\">-max</span><span class=\"literal\">-connection</span><span class=\"literal\">-per</span><span class=\"literal\">-server</span> <span class=\"number\">16</span></span><br><span class=\"line\">scoop config aria2<span class=\"operator\">-split</span> <span class=\"number\">16</span></span><br><span class=\"line\">scoop config aria2<span class=\"literal\">-min</span><span class=\"operator\">-split</span><span class=\"literal\">-size</span> <span class=\"number\">1</span>M</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"添加仓库\"><a href=\"#添加仓库\" class=\"headerlink\" title=\"添加仓库\"></a>添加仓库</h1><p>scoop自带的main bucket软件过少，我们需要添加官方维护的extras bucket：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop bucket add extras</span><br></pre></td></tr></table></figure>\n\n<p>也可以添加其他的第三方bucket:</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop bucket add bucketname bucketaddress</span><br></pre></td></tr></table></figure>\n\n<p>例如添加scoopbucket并安装cajviewer：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># add scoopbucket</span></span><br><span class=\"line\">scoop bucket add scoopbucket https://github.com/yuanying1199/scoopbucket</span><br><span class=\"line\"><span class=\"comment\"># install cajviewer</span></span><br><span class=\"line\">scoop install scoopbucket/cajviewerlite</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://boyinthesun.cn/post/scoop/\">Scoop安装详解</a></p>\n<p><a href=\"https://www.jianshu.com/p/50993df76b1c\">scoop——强大的Windows命令行包管理工具</a></p>\n","site":{"data":{}},"excerpt":"<p>Scoop是可用于windows的一款包管理工具，可以下载程序并自动配置环境变量等，记录一下安装方法。</p>","more":"<h1 id=\"安装条件\"><a href=\"#安装条件\" class=\"headerlink\" title=\"安装条件\"></a>安装条件</h1><ul>\n<li>用户名不含中文字符</li>\n<li>Windows 7 SP1+ / Windows Server 2008+</li>\n<li>PowerShell 3+</li>\n<li>.NET Framework 4.5+</li>\n</ul>\n<p>可在PowerShell运行以下代码获取版本信息：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查看Powershell版本</span></span><br><span class=\"line\"><span class=\"variable\">$PSVersionTable</span>.PSVersion.Major</span><br><span class=\"line\"><span class=\"comment\">#查看.NET Framework版本</span></span><br><span class=\"line\"><span class=\"variable\">$PSVersionTable</span>.CLRVersion.Major</span><br></pre></td></tr></table></figure>\n\n\n<p>先输入以下代码，保证后面的脚本有运行权限：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set-executionpolicy</span> remotesigned <span class=\"literal\">-scope</span> currentuser</span><br><span class=\"line\"></span><br><span class=\"line\">执行策略更改</span><br><span class=\"line\">执行策略可帮助你防止执行不信任的脚本。更改执行策略可能会产生安全风险，如 https:/go.microsoft.com/fwlink/?LinkID=<span class=\"number\">135170</span></span><br><span class=\"line\">中的 about_Execution_Policies 帮助主题所述。是否要更改执行策略?</span><br><span class=\"line\">[<span class=\"type\">Y</span>] 是(Y)  [<span class=\"type\">A</span>] 全是(A)  [<span class=\"type\">N</span>] 否(N)  [<span class=\"type\">L</span>] 全否(L)  [<span class=\"type\">S</span>] 暂停(S)  [?] 帮助 (默认值为“N”): y</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"开始安装\"><a href=\"#开始安装\" class=\"headerlink\" title=\"开始安装\"></a>开始安装</h1><p>在PowerShell输入以下代码下载Scoop：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">iwr</span> <span class=\"literal\">-useb</span> get.scoop.sh | <span class=\"built_in\">iex</span></span><br><span class=\"line\"><span class=\"comment\"># or</span></span><br><span class=\"line\"><span class=\"built_in\">iex</span> (<span class=\"built_in\">new-object</span> net.webclient).downloadstring(<span class=\"string\">&#x27;https://get.scoop.sh&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"下载出现错误\"><a href=\"#下载出现错误\" class=\"headerlink\" title=\"下载出现错误\"></a>下载出现错误</h2><ol>\n<li><p>若下载中断，重新下载之前请先删除 <code>C:\\Users\\username\\scoop</code> 文件夹。</p>\n</li>\n<li><p>需要安全策略错误，如下所示</p>\n</li>\n</ol>\n  <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PowerShell requires an execution policy <span class=\"keyword\">in</span> [<span class=\"type\">Unrestricted</span>, <span class=\"type\">RemoteSigned</span>, <span class=\"type\">ByPass</span>] to run Scoop.</span><br><span class=\"line\"><span class=\"keyword\">For</span> example, to <span class=\"built_in\">set</span> the execution policy to <span class=\"string\">&#x27;RemoteSigned&#x27;</span> please run :</span><br><span class=\"line\"><span class=\"string\">&#x27;Set-ExecutionPolicy RemoteSigned -scope CurrentUser&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>  修改PowerShell的安全策略：</p>\n  <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Set-ExecutionPolicy</span> RemoteSigned <span class=\"literal\">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>无法连接到远程服务器</li>\n</ol>\n  <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用“<span class=\"number\">1</span>”个参数调用“DownloadString”时发生异常:“无法连接到远程服务器”</span><br><span class=\"line\">所在位置 行:<span class=\"number\">1</span> 字符: <span class=\"number\">1</span></span><br><span class=\"line\">+ <span class=\"built_in\">iex</span> (<span class=\"built_in\">new-object</span> net.webclient).downloadstring(<span class=\"string\">&#x27;https://get.scoop.sh&#x27;</span>)</span><br><span class=\"line\">+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class=\"line\">    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException</span><br><span class=\"line\">    + FullyQualifiedErrorId : WebException</span><br></pre></td></tr></table></figure>\n\n<p>  这个错误还有可能出现的 <strong>“基础连接已经关闭：发送时发生错误“</strong> 或 <strong>“操作超时”</strong> ；原因可能是 <a href=\"https://get.scoop.sh/\">https://get.scoop.sh</a> 无法访问，或者网络不稳定或者和谐，用以下命令再下载，还是不行的话可多试几次、更换网络或者用梯子</p>\n  <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">iex</span> (<span class=\"built_in\">new-object</span> net.webclient).downloadstring(<span class=\"string\">&#x27;https://raw.githubusercontent.com/lukesampson/scoop/master/bin/install.ps1&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>未能创建 SSL/TLS 安全通道</li>\n</ol>\n  <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">iex</span> : 使用“<span class=\"number\">2</span>”个参数调用“DownloadFile”是发生异常:“请求被中止: 未能创建 SSL/TLS 安全通道。”</span><br><span class=\"line\">所在位置 行:<span class=\"number\">1</span> 字符: <span class=\"number\">1</span></span><br><span class=\"line\">+ <span class=\"built_in\">iex</span> (<span class=\"built_in\">new-object</span> net.webclient).downloadstring(<span class=\"string\">&#x27;https://get.scoop.sh&#x27;</span>)</span><br><span class=\"line\">+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class=\"line\">    + CategoryInfo          : NotSpecified: (:) [<span class=\"built_in\">Invoke-Expression</span>], MethodInvocationException</span><br><span class=\"line\">    + FullyQualifiedErrorId : WebException, Microsoft.PowreShell.Commands.InvokeExpressionCommand</span><br></pre></td></tr></table></figure>\n\n<p>  执行以下命令：</p>\n  <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"type\">Net.ServicePointManager</span>]::SecurityProtocol = [<span class=\"type\">Net.SecurityProtocolType</span>]::Tls12</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装成功\"><a href=\"#安装成功\" class=\"headerlink\" title=\"安装成功\"></a>安装成功</h1><p>输入 <code>scoop help</code> 验证是否安装成功。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: scoop &lt;command&gt; [&lt;<span class=\"type\">args</span>&gt;]</span><br><span class=\"line\"></span><br><span class=\"line\">Some useful commands are:</span><br><span class=\"line\"></span><br><span class=\"line\">alias       Manage scoop aliases</span><br><span class=\"line\">bucket      Manage Scoop buckets</span><br><span class=\"line\">cache       Show or <span class=\"built_in\">clear</span> the download cache</span><br><span class=\"line\">checkup     Check <span class=\"keyword\">for</span> potential problems</span><br><span class=\"line\">cleanup     Cleanup apps by removing old versions</span><br><span class=\"line\">config      Get or <span class=\"built_in\">set</span> configuration values</span><br><span class=\"line\">create      Create a custom app manifest</span><br><span class=\"line\">depends     List dependencies <span class=\"keyword\">for</span> an app</span><br><span class=\"line\">export      Exports (an importable) list of installed apps</span><br><span class=\"line\">help        Show help <span class=\"keyword\">for</span> a command</span><br><span class=\"line\">home        Opens the app homepage</span><br><span class=\"line\">info        Display information about an app</span><br><span class=\"line\">install     Install apps</span><br><span class=\"line\">list        List installed apps</span><br><span class=\"line\">prefix      Returns the path to the specified app</span><br><span class=\"line\">reset       Reset an app to resolve conflicts</span><br><span class=\"line\">search      Search available apps</span><br><span class=\"line\">status      Show status and check <span class=\"keyword\">for</span> new app versions</span><br><span class=\"line\">uninstall   Uninstall an app</span><br><span class=\"line\">update      Update apps, or Scoop itself</span><br><span class=\"line\">virustotal  Look <span class=\"keyword\">for</span> app<span class=\"string\">&#x27;s hash on virustotal.com</span></span><br><span class=\"line\"><span class=\"string\">which       Locate a shim/executable (similar to &#x27;</span>which<span class=\"string\">&#x27; on Linux)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Type &#x27;</span>scoop help &lt;command&gt;<span class=\"string\">&#x27; to get help for a specific command.</span></span><br></pre></td></tr></table></figure>\n\n<p>常用命令：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查找软件</span></span><br><span class=\"line\">scoop search apps</span><br><span class=\"line\"><span class=\"comment\"># 下载软件</span></span><br><span class=\"line\">scoop install apps</span><br><span class=\"line\"><span class=\"comment\"># 卸载软件</span></span><br><span class=\"line\">scoop uninstall apps</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"提升下载速度\"><a href=\"#提升下载速度\" class=\"headerlink\" title=\"提升下载速度\"></a>提升下载速度</h1><p>scoop下载软件大多是从外部链接下载的，网速较慢且容易失败，可以安装aria2来提升下载速度：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop install aria2</span><br></pre></td></tr></table></figure>\n\n<p>aria2安装成功后再下载其他软件时会自动调用进行多线程下载，所以推荐先安装这个软件提升下载体验。</p>\n<p>可以设置下载下载线程数（默认为16线程）</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop config aria2<span class=\"literal\">-max</span><span class=\"literal\">-connection</span><span class=\"literal\">-per</span><span class=\"literal\">-server</span> <span class=\"number\">16</span></span><br><span class=\"line\">scoop config aria2<span class=\"operator\">-split</span> <span class=\"number\">16</span></span><br><span class=\"line\">scoop config aria2<span class=\"literal\">-min</span><span class=\"operator\">-split</span><span class=\"literal\">-size</span> <span class=\"number\">1</span>M</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"添加仓库\"><a href=\"#添加仓库\" class=\"headerlink\" title=\"添加仓库\"></a>添加仓库</h1><p>scoop自带的main bucket软件过少，我们需要添加官方维护的extras bucket：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop bucket add extras</span><br></pre></td></tr></table></figure>\n\n<p>也可以添加其他的第三方bucket:</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop bucket add bucketname bucketaddress</span><br></pre></td></tr></table></figure>\n\n<p>例如添加scoopbucket并安装cajviewer：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># add scoopbucket</span></span><br><span class=\"line\">scoop bucket add scoopbucket https://github.com/yuanying1199/scoopbucket</span><br><span class=\"line\"><span class=\"comment\"># install cajviewer</span></span><br><span class=\"line\">scoop install scoopbucket/cajviewerlite</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://boyinthesun.cn/post/scoop/\">Scoop安装详解</a></p>\n<p><a href=\"https://www.jianshu.com/p/50993df76b1c\">scoop——强大的Windows命令行包管理工具</a></p>"},{"title":"DIY屏幕","date":"2021-03-28T11:00:00.000Z","_content":"\n# 前言\n\n我本来是想买一个屏幕的，也一直在看买哪种屏幕好，主要是我买了一个SWITCH，想用来放大一点玩游戏，也为以后自主装机时不用再去买一块屏幕，一举多得。但后来仔细一想，宿舍里我桌面上没什么空间放东西，也没插座，想了想就暂时算了，还是以后自己租房攒机时再买。但机缘巧合下我看到了DIY屏幕的教程，看了下效果很不错，于是我想来想去还是下单买了需要的材料，话不多说，DIY开始！\n\n<!--more-->\n\n# 说明\n\n没什么可说的，就照着教程做就行了。\n\n我的屏幕是14寸 2k 100色域的，驱动板配套买的，花了￥500元，这是占大头的部分，\n\n积木我由于不确定要多少所以照着上面链接买的，￥120元，结果因为他是15.6寸屏幕，而且我没有把按键板放在边框，所以剩下10包白色积木2包橙色积木，不过我自觉成品是比他薄一点的（也相对减少了工作量）。\n\n~~东西是这周到的，人是今天走的。~~\n\n建议自己想尝试并且手上有屏幕的去淘宝买个驱动板，没有的就看自己意愿咯。\n\n文章说了，本人也亲自体验过了，真的真的是非常需要耐心，而且积木拼多了手指头痛死了，大拇指和食指指缝的肉分离了一点点，痛了两天，而且估计还要痛下去，十指连心啊。。。\n\n![手指](diy-screen/DIYScreen_my_hand.png \"被摧残过的手\")\n\n# 过程记录\n\n一小时的成果（由于刚拼积木不熟练），就拼了一个角。\n\n![一小时](diy-screen/DIYScreen_1hour.png \"耐心\")\n\n一早上的成果，龙猫。\n\n![一早上](diy-screen/DIYScreen_1morning.png \"耐心\")\n\n一天的成果，背板。\n\n![一天](diy-screen/DIYScreen_1day.png \"耐心\")\n\n期间自己拼了一下自己的名字，由于黑色拼白色有点不好看而且黑色积木可能不够遂放弃，改用橙色。\n\n![名字](diy-screen/DIYScreen_my_name.png \"黑色积木确实不够\")\n\n开始放驱动板，往上叠边框，还得压实，太难了。\n\n![快好了](diy-screen/DIYScreen_closing1.png \"耐心\")\n\n叠好边框放屏幕，前背板本来不想剪的结果试了一下会压到屏幕，还是乖乖剪吧（手好酸）。\n\n![差一点了](diy-screen/DIYScreen_closing2.png \"耐心\")\n\n# 成果展示\n\n终于终于在第二天完成了，也有空写下这篇文章记录了。\n\n前面\n\n![前面](diy-screen/DIYScreen_finish1.png \"Yay!\")\n\n后面\n\n![后面](diy-screen/DIYScreen_finish2.png \"Yay!\")\n\n开机\n\n![开机](diy-screen/DIYScreen_finish3.png \"Yay!\")\n\n哈哈哈，我的动手能力还是可以的嘛，咱今儿那叫一个高兴！\n\n\n# 参考文章\n\n* [如何低价DIY一个便携式显示器](https://zhuanlan.zhihu.com/p/143726050)","source":"_posts/diy-screen.md","raw":"---\ntitle: DIY屏幕\ndate: 2021-03-28 19:00:00\ntags: \n    - DIY\ncategories:\n    - DIY\n    - 硬件\n---\n\n# 前言\n\n我本来是想买一个屏幕的，也一直在看买哪种屏幕好，主要是我买了一个SWITCH，想用来放大一点玩游戏，也为以后自主装机时不用再去买一块屏幕，一举多得。但后来仔细一想，宿舍里我桌面上没什么空间放东西，也没插座，想了想就暂时算了，还是以后自己租房攒机时再买。但机缘巧合下我看到了DIY屏幕的教程，看了下效果很不错，于是我想来想去还是下单买了需要的材料，话不多说，DIY开始！\n\n<!--more-->\n\n# 说明\n\n没什么可说的，就照着教程做就行了。\n\n我的屏幕是14寸 2k 100色域的，驱动板配套买的，花了￥500元，这是占大头的部分，\n\n积木我由于不确定要多少所以照着上面链接买的，￥120元，结果因为他是15.6寸屏幕，而且我没有把按键板放在边框，所以剩下10包白色积木2包橙色积木，不过我自觉成品是比他薄一点的（也相对减少了工作量）。\n\n~~东西是这周到的，人是今天走的。~~\n\n建议自己想尝试并且手上有屏幕的去淘宝买个驱动板，没有的就看自己意愿咯。\n\n文章说了，本人也亲自体验过了，真的真的是非常需要耐心，而且积木拼多了手指头痛死了，大拇指和食指指缝的肉分离了一点点，痛了两天，而且估计还要痛下去，十指连心啊。。。\n\n![手指](diy-screen/DIYScreen_my_hand.png \"被摧残过的手\")\n\n# 过程记录\n\n一小时的成果（由于刚拼积木不熟练），就拼了一个角。\n\n![一小时](diy-screen/DIYScreen_1hour.png \"耐心\")\n\n一早上的成果，龙猫。\n\n![一早上](diy-screen/DIYScreen_1morning.png \"耐心\")\n\n一天的成果，背板。\n\n![一天](diy-screen/DIYScreen_1day.png \"耐心\")\n\n期间自己拼了一下自己的名字，由于黑色拼白色有点不好看而且黑色积木可能不够遂放弃，改用橙色。\n\n![名字](diy-screen/DIYScreen_my_name.png \"黑色积木确实不够\")\n\n开始放驱动板，往上叠边框，还得压实，太难了。\n\n![快好了](diy-screen/DIYScreen_closing1.png \"耐心\")\n\n叠好边框放屏幕，前背板本来不想剪的结果试了一下会压到屏幕，还是乖乖剪吧（手好酸）。\n\n![差一点了](diy-screen/DIYScreen_closing2.png \"耐心\")\n\n# 成果展示\n\n终于终于在第二天完成了，也有空写下这篇文章记录了。\n\n前面\n\n![前面](diy-screen/DIYScreen_finish1.png \"Yay!\")\n\n后面\n\n![后面](diy-screen/DIYScreen_finish2.png \"Yay!\")\n\n开机\n\n![开机](diy-screen/DIYScreen_finish3.png \"Yay!\")\n\n哈哈哈，我的动手能力还是可以的嘛，咱今儿那叫一个高兴！\n\n\n# 参考文章\n\n* [如何低价DIY一个便携式显示器](https://zhuanlan.zhihu.com/p/143726050)","slug":"diy-screen","published":1,"updated":"2021-08-26T06:20:56.458Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmb1000kfa581m81eq0p","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>我本来是想买一个屏幕的，也一直在看买哪种屏幕好，主要是我买了一个SWITCH，想用来放大一点玩游戏，也为以后自主装机时不用再去买一块屏幕，一举多得。但后来仔细一想，宿舍里我桌面上没什么空间放东西，也没插座，想了想就暂时算了，还是以后自己租房攒机时再买。但机缘巧合下我看到了DIY屏幕的教程，看了下效果很不错，于是我想来想去还是下单买了需要的材料，话不多说，DIY开始！</p>\n<span id=\"more\"></span>\n\n<h1 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h1><p>没什么可说的，就照着教程做就行了。</p>\n<p>我的屏幕是14寸 2k 100色域的，驱动板配套买的，花了￥500元，这是占大头的部分，</p>\n<p>积木我由于不确定要多少所以照着上面链接买的，￥120元，结果因为他是15.6寸屏幕，而且我没有把按键板放在边框，所以剩下10包白色积木2包橙色积木，不过我自觉成品是比他薄一点的（也相对减少了工作量）。</p>\n<p><del>东西是这周到的，人是今天走的。</del></p>\n<p>建议自己想尝试并且手上有屏幕的去淘宝买个驱动板，没有的就看自己意愿咯。</p>\n<p>文章说了，本人也亲自体验过了，真的真的是非常需要耐心，而且积木拼多了手指头痛死了，大拇指和食指指缝的肉分离了一点点，痛了两天，而且估计还要痛下去，十指连心啊。。。</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_my_hand.png\" alt=\"手指\" title=\"被摧残过的手\"></p>\n<h1 id=\"过程记录\"><a href=\"#过程记录\" class=\"headerlink\" title=\"过程记录\"></a>过程记录</h1><p>一小时的成果（由于刚拼积木不熟练），就拼了一个角。</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_1hour.png\" alt=\"一小时\" title=\"耐心\"></p>\n<p>一早上的成果，龙猫。</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_1morning.png\" alt=\"一早上\" title=\"耐心\"></p>\n<p>一天的成果，背板。</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_1day.png\" alt=\"一天\" title=\"耐心\"></p>\n<p>期间自己拼了一下自己的名字，由于黑色拼白色有点不好看而且黑色积木可能不够遂放弃，改用橙色。</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_my_name.png\" alt=\"名字\" title=\"黑色积木确实不够\"></p>\n<p>开始放驱动板，往上叠边框，还得压实，太难了。</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_closing1.png\" alt=\"快好了\" title=\"耐心\"></p>\n<p>叠好边框放屏幕，前背板本来不想剪的结果试了一下会压到屏幕，还是乖乖剪吧（手好酸）。</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_closing2.png\" alt=\"差一点了\" title=\"耐心\"></p>\n<h1 id=\"成果展示\"><a href=\"#成果展示\" class=\"headerlink\" title=\"成果展示\"></a>成果展示</h1><p>终于终于在第二天完成了，也有空写下这篇文章记录了。</p>\n<p>前面</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_finish1.png\" alt=\"前面\" title=\"Yay!\"></p>\n<p>后面</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_finish2.png\" alt=\"后面\" title=\"Yay!\"></p>\n<p>开机</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_finish3.png\" alt=\"开机\" title=\"Yay!\"></p>\n<p>哈哈哈，我的动手能力还是可以的嘛，咱今儿那叫一个高兴！</p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/143726050\">如何低价DIY一个便携式显示器</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>我本来是想买一个屏幕的，也一直在看买哪种屏幕好，主要是我买了一个SWITCH，想用来放大一点玩游戏，也为以后自主装机时不用再去买一块屏幕，一举多得。但后来仔细一想，宿舍里我桌面上没什么空间放东西，也没插座，想了想就暂时算了，还是以后自己租房攒机时再买。但机缘巧合下我看到了DIY屏幕的教程，看了下效果很不错，于是我想来想去还是下单买了需要的材料，话不多说，DIY开始！</p>","more":"<h1 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h1><p>没什么可说的，就照着教程做就行了。</p>\n<p>我的屏幕是14寸 2k 100色域的，驱动板配套买的，花了￥500元，这是占大头的部分，</p>\n<p>积木我由于不确定要多少所以照着上面链接买的，￥120元，结果因为他是15.6寸屏幕，而且我没有把按键板放在边框，所以剩下10包白色积木2包橙色积木，不过我自觉成品是比他薄一点的（也相对减少了工作量）。</p>\n<p><del>东西是这周到的，人是今天走的。</del></p>\n<p>建议自己想尝试并且手上有屏幕的去淘宝买个驱动板，没有的就看自己意愿咯。</p>\n<p>文章说了，本人也亲自体验过了，真的真的是非常需要耐心，而且积木拼多了手指头痛死了，大拇指和食指指缝的肉分离了一点点，痛了两天，而且估计还要痛下去，十指连心啊。。。</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_my_hand.png\" alt=\"手指\" title=\"被摧残过的手\"></p>\n<h1 id=\"过程记录\"><a href=\"#过程记录\" class=\"headerlink\" title=\"过程记录\"></a>过程记录</h1><p>一小时的成果（由于刚拼积木不熟练），就拼了一个角。</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_1hour.png\" alt=\"一小时\" title=\"耐心\"></p>\n<p>一早上的成果，龙猫。</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_1morning.png\" alt=\"一早上\" title=\"耐心\"></p>\n<p>一天的成果，背板。</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_1day.png\" alt=\"一天\" title=\"耐心\"></p>\n<p>期间自己拼了一下自己的名字，由于黑色拼白色有点不好看而且黑色积木可能不够遂放弃，改用橙色。</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_my_name.png\" alt=\"名字\" title=\"黑色积木确实不够\"></p>\n<p>开始放驱动板，往上叠边框，还得压实，太难了。</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_closing1.png\" alt=\"快好了\" title=\"耐心\"></p>\n<p>叠好边框放屏幕，前背板本来不想剪的结果试了一下会压到屏幕，还是乖乖剪吧（手好酸）。</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_closing2.png\" alt=\"差一点了\" title=\"耐心\"></p>\n<h1 id=\"成果展示\"><a href=\"#成果展示\" class=\"headerlink\" title=\"成果展示\"></a>成果展示</h1><p>终于终于在第二天完成了，也有空写下这篇文章记录了。</p>\n<p>前面</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_finish1.png\" alt=\"前面\" title=\"Yay!\"></p>\n<p>后面</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_finish2.png\" alt=\"后面\" title=\"Yay!\"></p>\n<p>开机</p>\n<p><img src=\"/2021/03/28/diy-screen/DIYScreen_finish3.png\" alt=\"开机\" title=\"Yay!\"></p>\n<p>哈哈哈，我的动手能力还是可以的嘛，咱今儿那叫一个高兴！</p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/143726050\">如何低价DIY一个便携式显示器</a></li>\n</ul>"},{"title":"Hexo 博客美化","date":"2021-08-20T11:33:34.000Z","_content":"\n前面已经可以开始写博客了，但如果还是对界面不怎么满意，那还可以做些小修改，下面记录一下我在next主题上做的配置。\n\n<!--more-->\n\n# Next主题风格\n\nNext中提供了四种主题风格，可以在主题配置文件`your_blog/themes/next/_config.yml`中进行选择，分别是Muse、Mist、Pisces、Gemini\n\n我选择的是Mist风格\n\n```yml\n# Schemes\n#scheme: Muse\nscheme: Mist\n#scheme: Pisces\n#scheme: Gemini\n```\n\n在 `_config.yml` 文件中有博客主题的相关配置文件，基本的配置都有写明，不懂的可以设置后看看效果或者搜索\n\n# 添加博客自定义图标\n\nHexo博客的默认图标是`H`，支持自定义图标，可在[bitbug](https://www.bitbug.net/)网站选择图片生成，[iconfont](https://www.iconfont.cn/plus/user/detail?uid=41718)下载，在 `themes/next/_config.yml` 如下地方进行设置：\n\n```yml\nfavicon:\n  small: /images/16x16.png\n  medium: /images/32x32.png\n  apple_touch_icon: /images/128x128.png\n  safari_pinned_tab: /images/logo2.svg\n```\n\n\n# 鼠标点击特效\n\n在界面中添加点击特效，这里提供两种\n\n1. 红心特效\n   * 在 `/themes/next/source/js/` 下新建文件 `clicklove.js` ，接着把下面的代码拷贝粘贴到 `clicklove.js` 文件中：\n        ```javascript\n        !function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n        ```\n   * 在 `themes/next/layout/_layout.swig` 文件末尾添加：\n        ```javascript\n        <!-- 页面点击小红心 -->\n        <script type=\"text/javascript\" src=\"/js/clicklove.js\"></script>\n        ```\n2. 烟火特效\n    * 在 `themes/next/source/js/` 里面建一个叫 `fireworks.js` 的文件，复制代码如下：\n        ```javascript\n        \"use strict\";function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color=\"#F00\",a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t<e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i<numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:\"easeOutExpo\",update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:\"linear\",duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:\"easeOutExpo\",update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(\".fireworks\");if(canvasEl){var ctx=canvasEl.getContext(\"2d\"),numberOfParticules=30,pointerX=0,pointerY=0,tap=\"mousedown\",colors=[\"#FF1461\",\"#18FF92\",\"#5A87FF\",\"#FBF38C\"],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+\"px\",canvasEl.style.height=window.innerHeight+\"px\",canvasEl.getContext(\"2d\").scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){\"sidebar\"!==e.target.id&&\"toggle-sidebar\"!==e.target.id&&\"A\"!==e.target.nodeName&&\"IMG\"!==e.target.nodeName&&(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener(\"resize\",setCanvasSize,!1)}\"use strict\";function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color=\"#F00\",a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t<e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i<numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:\"easeOutExpo\",update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:\"linear\",duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:\"easeOutExpo\",update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(\".fireworks\");if(canvasEl){var ctx=canvasEl.getContext(\"2d\"),numberOfParticules=30,pointerX=0,pointerY=0,tap=\"mousedown\",colors=[\"#FF1461\",\"#18FF92\",\"#5A87FF\",\"#FBF38C\"],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+\"px\",canvasEl.style.height=window.innerHeight+\"px\",canvasEl.getContext(\"2d\").scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){\"sidebar\"!==e.target.id&&\"toggle-sidebar\"!==e.target.id&&\"A\"!==e.target.nodeName&&\"IMG\"!==e.target.nodeName&&(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener(\"resize\",setCanvasSize,!1)};\n        ```\n    * 在 `themes/next/layout/_layout.swig` 文件末尾添加：\n        ```javascript\n        <!-- 页面点击小红心 -->\n        <script type=\"text/javascript\" src=\"/js/clicklove.js\"></script>\n        ```\n打开 `themes/next/_config.yml` 文件，在末尾添加如下标识：\n```yml\n# Fireworks\nfireworks: true\n```\n重新编译后就有鼠标点击特效啦\n\n# 添加页面人物\n\n在博客目录下执行：\n```bash\nnpm install -save hexo-helper-live2d\n```\n在 [lived2d](https://github.com/xiazeyu/live2d-widget-models)中选择自己想要的人物形象，例子可在作者网站中查看，[Author's original Blog](https://huaji8.top/post/live2d-plugin-2.0/)。下载命令如下：\n```bash\nnpm install live2d-widget-model-wanko\n```\n\n在 `your_blog/_config.yml` 或者 `themes/next/_config.yml` 文件下添加如下配置：\n```yml\n# Live2D\n## https://github.com/xiazeyu/live2d-widget.js\n## https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init\nlive2d:\n  enable: true\n  scriptFrom: local\n  pluginRootPath: live2dw/\n  pluginJsPath: lib/\n  pluginModelPath: assets/\n  tagMode: false\n  model:\n    use: live2d-widget-model-wanko  #选择下载过的模型\n  display: #放置位置和大小\n    position: right\n    width: 150\n    height: 300\n  mobile:\n    show: false #是否在手机端显示\n```\n\n# 添加网易云音乐播放\n\n在[网易云音乐](https://music.163.com/)网站搜索自己想添加的音乐，点击生成外链，得到外链html代码\n```html\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1471724841&auto=1&height=66\"></iframe>\n```\n将代码放到自己想要的地方就行啦，如放在侧边栏 `themes/next/layout/_macro/sidebar.swig` 中\n\n# 参考资料\n* [Hexo博客NexT主题下添加分类、标签、关于菜单项](https://blog.csdn.net/mqdxiaoxiao/article/details/93644533)\n* [Hexo博客优化之Next主题美化](https://blog.csdn.net/nightmare_dimple/article/details/86661502)\n* [hexo的next主题个性化教程:打造炫酷网站](http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html)\n* [Hexo博客第三方主题next进阶教程](https://www.jianshu.com/p/1ff2fcbdd155)\n* [Hexo（sakura）添加live2d看板动画（可对话，换装互动）](https://blog.csdn.net/cungudafa/article/details/104282643)\n* [Hexo-Next主题美化](https://zouhua.top/archives/e635378a.html)","source":"_posts/hexo-beautify.md","raw":"---\ntitle: Hexo 博客美化\ndate: 2021-08-20 19:33:34\ntags: \n    - 博客\ncategories:\n    - 博客\n    - Hexo\n---\n\n前面已经可以开始写博客了，但如果还是对界面不怎么满意，那还可以做些小修改，下面记录一下我在next主题上做的配置。\n\n<!--more-->\n\n# Next主题风格\n\nNext中提供了四种主题风格，可以在主题配置文件`your_blog/themes/next/_config.yml`中进行选择，分别是Muse、Mist、Pisces、Gemini\n\n我选择的是Mist风格\n\n```yml\n# Schemes\n#scheme: Muse\nscheme: Mist\n#scheme: Pisces\n#scheme: Gemini\n```\n\n在 `_config.yml` 文件中有博客主题的相关配置文件，基本的配置都有写明，不懂的可以设置后看看效果或者搜索\n\n# 添加博客自定义图标\n\nHexo博客的默认图标是`H`，支持自定义图标，可在[bitbug](https://www.bitbug.net/)网站选择图片生成，[iconfont](https://www.iconfont.cn/plus/user/detail?uid=41718)下载，在 `themes/next/_config.yml` 如下地方进行设置：\n\n```yml\nfavicon:\n  small: /images/16x16.png\n  medium: /images/32x32.png\n  apple_touch_icon: /images/128x128.png\n  safari_pinned_tab: /images/logo2.svg\n```\n\n\n# 鼠标点击特效\n\n在界面中添加点击特效，这里提供两种\n\n1. 红心特效\n   * 在 `/themes/next/source/js/` 下新建文件 `clicklove.js` ，接着把下面的代码拷贝粘贴到 `clicklove.js` 文件中：\n        ```javascript\n        !function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n        ```\n   * 在 `themes/next/layout/_layout.swig` 文件末尾添加：\n        ```javascript\n        <!-- 页面点击小红心 -->\n        <script type=\"text/javascript\" src=\"/js/clicklove.js\"></script>\n        ```\n2. 烟火特效\n    * 在 `themes/next/source/js/` 里面建一个叫 `fireworks.js` 的文件，复制代码如下：\n        ```javascript\n        \"use strict\";function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color=\"#F00\",a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t<e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i<numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:\"easeOutExpo\",update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:\"linear\",duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:\"easeOutExpo\",update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(\".fireworks\");if(canvasEl){var ctx=canvasEl.getContext(\"2d\"),numberOfParticules=30,pointerX=0,pointerY=0,tap=\"mousedown\",colors=[\"#FF1461\",\"#18FF92\",\"#5A87FF\",\"#FBF38C\"],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+\"px\",canvasEl.style.height=window.innerHeight+\"px\",canvasEl.getContext(\"2d\").scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){\"sidebar\"!==e.target.id&&\"toggle-sidebar\"!==e.target.id&&\"A\"!==e.target.nodeName&&\"IMG\"!==e.target.nodeName&&(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener(\"resize\",setCanvasSize,!1)}\"use strict\";function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color=\"#F00\",a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t<e.animatables.length;t++){e.animatables[t].target.draw()}}function animateParticules(e,t){for(var a=createCircle(e,t),n=[],i=0;i<numberOfParticules;i++){n.push(createParticule(e,t))}anime.timeline().add({targets:n,x:function(e){return e.endPos.x},y:function(e){return e.endPos.y},radius:0.1,duration:anime.random(1200,1800),easing:\"easeOutExpo\",update:renderParticule}).add({targets:a,radius:anime.random(80,160),lineWidth:0,alpha:{value:0,easing:\"linear\",duration:anime.random(600,800)},duration:anime.random(1200,1800),easing:\"easeOutExpo\",update:renderParticule,offset:0})}function debounce(e,t){var a;return function(){var n=this,i=arguments;clearTimeout(a),a=setTimeout(function(){e.apply(n,i)},t)}}var canvasEl=document.querySelector(\".fireworks\");if(canvasEl){var ctx=canvasEl.getContext(\"2d\"),numberOfParticules=30,pointerX=0,pointerY=0,tap=\"mousedown\",colors=[\"#FF1461\",\"#18FF92\",\"#5A87FF\",\"#FBF38C\"],setCanvasSize=debounce(function(){canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+\"px\",canvasEl.style.height=window.innerHeight+\"px\",canvasEl.getContext(\"2d\").scale(2,2)},500),render=anime({duration:1/0,update:function(){ctx.clearRect(0,0,canvasEl.width,canvasEl.height)}});document.addEventListener(tap,function(e){\"sidebar\"!==e.target.id&&\"toggle-sidebar\"!==e.target.id&&\"A\"!==e.target.nodeName&&\"IMG\"!==e.target.nodeName&&(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))},!1),setCanvasSize(),window.addEventListener(\"resize\",setCanvasSize,!1)};\n        ```\n    * 在 `themes/next/layout/_layout.swig` 文件末尾添加：\n        ```javascript\n        <!-- 页面点击小红心 -->\n        <script type=\"text/javascript\" src=\"/js/clicklove.js\"></script>\n        ```\n打开 `themes/next/_config.yml` 文件，在末尾添加如下标识：\n```yml\n# Fireworks\nfireworks: true\n```\n重新编译后就有鼠标点击特效啦\n\n# 添加页面人物\n\n在博客目录下执行：\n```bash\nnpm install -save hexo-helper-live2d\n```\n在 [lived2d](https://github.com/xiazeyu/live2d-widget-models)中选择自己想要的人物形象，例子可在作者网站中查看，[Author's original Blog](https://huaji8.top/post/live2d-plugin-2.0/)。下载命令如下：\n```bash\nnpm install live2d-widget-model-wanko\n```\n\n在 `your_blog/_config.yml` 或者 `themes/next/_config.yml` 文件下添加如下配置：\n```yml\n# Live2D\n## https://github.com/xiazeyu/live2d-widget.js\n## https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init\nlive2d:\n  enable: true\n  scriptFrom: local\n  pluginRootPath: live2dw/\n  pluginJsPath: lib/\n  pluginModelPath: assets/\n  tagMode: false\n  model:\n    use: live2d-widget-model-wanko  #选择下载过的模型\n  display: #放置位置和大小\n    position: right\n    width: 150\n    height: 300\n  mobile:\n    show: false #是否在手机端显示\n```\n\n# 添加网易云音乐播放\n\n在[网易云音乐](https://music.163.com/)网站搜索自己想添加的音乐，点击生成外链，得到外链html代码\n```html\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1471724841&auto=1&height=66\"></iframe>\n```\n将代码放到自己想要的地方就行啦，如放在侧边栏 `themes/next/layout/_macro/sidebar.swig` 中\n\n# 参考资料\n* [Hexo博客NexT主题下添加分类、标签、关于菜单项](https://blog.csdn.net/mqdxiaoxiao/article/details/93644533)\n* [Hexo博客优化之Next主题美化](https://blog.csdn.net/nightmare_dimple/article/details/86661502)\n* [hexo的next主题个性化教程:打造炫酷网站](http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html)\n* [Hexo博客第三方主题next进阶教程](https://www.jianshu.com/p/1ff2fcbdd155)\n* [Hexo（sakura）添加live2d看板动画（可对话，换装互动）](https://blog.csdn.net/cungudafa/article/details/104282643)\n* [Hexo-Next主题美化](https://zouhua.top/archives/e635378a.html)","slug":"hexo-beautify","published":1,"updated":"2021-08-26T06:20:56.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmb3000pfa58f2vkc5nk","content":"<p>前面已经可以开始写博客了，但如果还是对界面不怎么满意，那还可以做些小修改，下面记录一下我在next主题上做的配置。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"Next主题风格\"><a href=\"#Next主题风格\" class=\"headerlink\" title=\"Next主题风格\"></a>Next主题风格</h1><p>Next中提供了四种主题风格，可以在主题配置文件<code>your_blog/themes/next/_config.yml</code>中进行选择，分别是Muse、Mist、Pisces、Gemini</p>\n<p>我选择的是Mist风格</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Schemes</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Muse</span></span><br><span class=\"line\"><span class=\"attr\">scheme:</span> <span class=\"string\">Mist</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Pisces</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Gemini</span></span><br></pre></td></tr></table></figure>\n\n<p>在 <code>_config.yml</code> 文件中有博客主题的相关配置文件，基本的配置都有写明，不懂的可以设置后看看效果或者搜索</p>\n<h1 id=\"添加博客自定义图标\"><a href=\"#添加博客自定义图标\" class=\"headerlink\" title=\"添加博客自定义图标\"></a>添加博客自定义图标</h1><p>Hexo博客的默认图标是<code>H</code>，支持自定义图标，可在<a href=\"https://www.bitbug.net/\">bitbug</a>网站选择图片生成，<a href=\"https://www.iconfont.cn/plus/user/detail?uid=41718\">iconfont</a>下载，在 <code>themes/next/_config.yml</code> 如下地方进行设置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">favicon:</span></span><br><span class=\"line\">  <span class=\"attr\">small:</span> <span class=\"string\">/images/16x16.png</span></span><br><span class=\"line\">  <span class=\"attr\">medium:</span> <span class=\"string\">/images/32x32.png</span></span><br><span class=\"line\">  <span class=\"attr\">apple_touch_icon:</span> <span class=\"string\">/images/128x128.png</span></span><br><span class=\"line\">  <span class=\"attr\">safari_pinned_tab:</span> <span class=\"string\">/images/logo2.svg</span></span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"鼠标点击特效\"><a href=\"#鼠标点击特效\" class=\"headerlink\" title=\"鼠标点击特效\"></a>鼠标点击特效</h1><p>在界面中添加点击特效，这里提供两种</p>\n<ol>\n<li>红心特效<ul>\n<li>在 <code>/themes/next/source/js/</code> 下新建文件 <code>clicklove.js</code> ，接着把下面的代码拷贝粘贴到 <code>clicklove.js</code> 文件中：   <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e,t,a</span>)</span>&#123;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">n</span>(<span class=\"params\"></span>)</span>&#123;c(<span class=\"string\">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),o(),r()&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">r</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> e=<span class=\"number\">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class=\"number\">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class=\"number\">1</span>)):(d[e].y--,d[e].scale+=<span class=\"number\">.004</span>,d[e].alpha-=<span class=\"number\">.013</span>,d[e].el.style.cssText=<span class=\"string\">&quot;left:&quot;</span>+d[e].x+<span class=\"string\">&quot;px;top:&quot;</span>+d[e].y+<span class=\"string\">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class=\"string\">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class=\"string\">&quot;,&quot;</span>+d[e].scale+<span class=\"string\">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class=\"string\">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">o</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">var</span> t=<span class=\"string\">&quot;function&quot;</span>==<span class=\"keyword\">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">i</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">var</span> a=t.createElement(<span class=\"string\">&quot;div&quot;</span>);a.className=<span class=\"string\">&quot;heart&quot;</span>,d.push(&#123;<span class=\"attr\">el</span>:a,<span class=\"attr\">x</span>:e.clientX-<span class=\"number\">5</span>,<span class=\"attr\">y</span>:e.clientY-<span class=\"number\">5</span>,<span class=\"attr\">scale</span>:<span class=\"number\">1</span>,<span class=\"attr\">alpha</span>:<span class=\"number\">1</span>,<span class=\"attr\">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">c</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">var</span> a=t.createElement(<span class=\"string\">&quot;style&quot;</span>);a.type=<span class=\"string\">&quot;text/css&quot;</span>;<span class=\"keyword\">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class=\"keyword\">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class=\"string\">&quot;head&quot;</span>)[<span class=\"number\">0</span>].appendChild(a)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">s</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span><span class=\"string\">&quot;rgb(&quot;</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">&quot;,&quot;</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">&quot;,&quot;</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">&quot;)&quot;</span>&#125;<span class=\"keyword\">var</span> d=[];e.requestAnimationFrame=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"built_in\">setTimeout</span>(e,<span class=\"number\">1e3</span>/<span class=\"number\">60</span>)&#125;&#125;(),n()&#125;(<span class=\"built_in\">window</span>,<span class=\"built_in\">document</span>);</span><br></pre></td></tr></table></figure></li>\n<li>在 <code>themes/next/layout/_layout.swig</code> 文件末尾添加：   <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面点击小红心 --&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/js/clicklove.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>烟火特效<ul>\n<li>在 <code>themes/next/source/js/</code> 里面建一个叫 <code>fireworks.js</code> 的文件，复制代码如下：  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&quot;use strict&quot;</span>;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateCoords</span>(<span class=\"params\">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class=\"number\">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class=\"number\">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setParticuleDirection</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">var</span> t=anime.random(<span class=\"number\">0</span>,<span class=\"number\">360</span>)*<span class=\"built_in\">Math</span>.PI/<span class=\"number\">180</span>,a=anime.random(<span class=\"number\">50</span>,<span class=\"number\">180</span>),n=[-<span class=\"number\">1</span>,<span class=\"number\">1</span>][anime.random(<span class=\"number\">0</span>,<span class=\"number\">1</span>)]*a;<span class=\"keyword\">return</span>&#123;<span class=\"attr\">x</span>:e.x+n*<span class=\"built_in\">Math</span>.cos(t),<span class=\"attr\">y</span>:e.y+n*<span class=\"built_in\">Math</span>.sin(t)&#125;&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createParticule</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">var</span> a=&#123;&#125;;<span class=\"keyword\">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class=\"number\">0</span>,colors.length-<span class=\"number\">1</span>)],a.radius=anime.random(<span class=\"number\">16</span>,<span class=\"number\">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class=\"number\">0</span>,<span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI,!<span class=\"number\">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createCircle</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">var</span> a=&#123;&#125;;<span class=\"keyword\">return</span> a.x=e,a.y=t,a.color=<span class=\"string\">&quot;#F00&quot;</span>,a.radius=<span class=\"number\">0.1</span>,a.alpha=<span class=\"number\">0.5</span>,a.lineWidth=<span class=\"number\">6</span>,a.draw=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class=\"number\">0</span>,<span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI,!<span class=\"number\">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class=\"number\">1</span>&#125;,a&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">renderParticule</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> t=<span class=\"number\">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">animateParticules</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> a=createCircle(e,t),n=[],i=<span class=\"number\">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class=\"attr\">targets</span>:n,<span class=\"attr\">x</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">return</span> e.endPos.x&#125;,<span class=\"attr\">y</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">return</span> e.endPos.y&#125;,<span class=\"attr\">radius</span>:<span class=\"number\">0.1</span>,<span class=\"attr\">duration</span>:anime.random(<span class=\"number\">1200</span>,<span class=\"number\">1800</span>),<span class=\"attr\">easing</span>:<span class=\"string\">&quot;easeOutExpo&quot;</span>,<span class=\"attr\">update</span>:renderParticule&#125;).add(&#123;<span class=\"attr\">targets</span>:a,<span class=\"attr\">radius</span>:anime.random(<span class=\"number\">80</span>,<span class=\"number\">160</span>),<span class=\"attr\">lineWidth</span>:<span class=\"number\">0</span>,<span class=\"attr\">alpha</span>:&#123;<span class=\"attr\">value</span>:<span class=\"number\">0</span>,<span class=\"attr\">easing</span>:<span class=\"string\">&quot;linear&quot;</span>,<span class=\"attr\">duration</span>:anime.random(<span class=\"number\">600</span>,<span class=\"number\">800</span>)&#125;,<span class=\"attr\">duration</span>:anime.random(<span class=\"number\">1200</span>,<span class=\"number\">1800</span>),<span class=\"attr\">easing</span>:<span class=\"string\">&quot;easeOutExpo&quot;</span>,<span class=\"attr\">update</span>:renderParticule,<span class=\"attr\">offset</span>:<span class=\"number\">0</span>&#125;)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">debounce</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">var</span> a;<span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">var</span> n=<span class=\"built_in\">this</span>,i=<span class=\"built_in\">arguments</span>;<span class=\"built_in\">clearTimeout</span>(a),a=<span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class=\"keyword\">var</span> canvasEl=<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;.fireworks&quot;</span>);<span class=\"keyword\">if</span>(canvasEl)&#123;<span class=\"keyword\">var</span> ctx=canvasEl.getContext(<span class=\"string\">&quot;2d&quot;</span>),numberOfParticules=<span class=\"number\">30</span>,pointerX=<span class=\"number\">0</span>,pointerY=<span class=\"number\">0</span>,tap=<span class=\"string\">&quot;mousedown&quot;</span>,colors=[<span class=\"string\">&quot;#FF1461&quot;</span>,<span class=\"string\">&quot;#18FF92&quot;</span>,<span class=\"string\">&quot;#5A87FF&quot;</span>,<span class=\"string\">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;canvasEl.width=<span class=\"number\">2</span>*<span class=\"built_in\">window</span>.innerWidth,canvasEl.height=<span class=\"number\">2</span>*<span class=\"built_in\">window</span>.innerHeight,canvasEl.style.width=<span class=\"built_in\">window</span>.innerWidth+<span class=\"string\">&quot;px&quot;</span>,canvasEl.style.height=<span class=\"built_in\">window</span>.innerHeight+<span class=\"string\">&quot;px&quot;</span>,canvasEl.getContext(<span class=\"string\">&quot;2d&quot;</span>).scale(<span class=\"number\">2</span>,<span class=\"number\">2</span>)&#125;,<span class=\"number\">500</span>),render=anime(&#123;<span class=\"attr\">duration</span>:<span class=\"number\">1</span>/<span class=\"number\">0</span>,<span class=\"attr\">update</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;ctx.clearRect(<span class=\"number\">0</span>,<span class=\"number\">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class=\"built_in\">document</span>.addEventListener(tap,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"string\">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class=\"string\">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class=\"string\">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class=\"string\">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class=\"number\">1</span>),setCanvasSize(),<span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">&quot;resize&quot;</span>,setCanvasSize,!<span class=\"number\">1</span>)&#125;<span class=\"string\">&quot;use strict&quot;</span>;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateCoords</span>(<span class=\"params\">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class=\"number\">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class=\"number\">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setParticuleDirection</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">var</span> t=anime.random(<span class=\"number\">0</span>,<span class=\"number\">360</span>)*<span class=\"built_in\">Math</span>.PI/<span class=\"number\">180</span>,a=anime.random(<span class=\"number\">50</span>,<span class=\"number\">180</span>),n=[-<span class=\"number\">1</span>,<span class=\"number\">1</span>][anime.random(<span class=\"number\">0</span>,<span class=\"number\">1</span>)]*a;<span class=\"keyword\">return</span>&#123;<span class=\"attr\">x</span>:e.x+n*<span class=\"built_in\">Math</span>.cos(t),<span class=\"attr\">y</span>:e.y+n*<span class=\"built_in\">Math</span>.sin(t)&#125;&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createParticule</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">var</span> a=&#123;&#125;;<span class=\"keyword\">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class=\"number\">0</span>,colors.length-<span class=\"number\">1</span>)],a.radius=anime.random(<span class=\"number\">16</span>,<span class=\"number\">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class=\"number\">0</span>,<span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI,!<span class=\"number\">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createCircle</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">var</span> a=&#123;&#125;;<span class=\"keyword\">return</span> a.x=e,a.y=t,a.color=<span class=\"string\">&quot;#F00&quot;</span>,a.radius=<span class=\"number\">0.1</span>,a.alpha=<span class=\"number\">0.5</span>,a.lineWidth=<span class=\"number\">6</span>,a.draw=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class=\"number\">0</span>,<span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI,!<span class=\"number\">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class=\"number\">1</span>&#125;,a&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">renderParticule</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> t=<span class=\"number\">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">animateParticules</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> a=createCircle(e,t),n=[],i=<span class=\"number\">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class=\"attr\">targets</span>:n,<span class=\"attr\">x</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">return</span> e.endPos.x&#125;,<span class=\"attr\">y</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">return</span> e.endPos.y&#125;,<span class=\"attr\">radius</span>:<span class=\"number\">0.1</span>,<span class=\"attr\">duration</span>:anime.random(<span class=\"number\">1200</span>,<span class=\"number\">1800</span>),<span class=\"attr\">easing</span>:<span class=\"string\">&quot;easeOutExpo&quot;</span>,<span class=\"attr\">update</span>:renderParticule&#125;).add(&#123;<span class=\"attr\">targets</span>:a,<span class=\"attr\">radius</span>:anime.random(<span class=\"number\">80</span>,<span class=\"number\">160</span>),<span class=\"attr\">lineWidth</span>:<span class=\"number\">0</span>,<span class=\"attr\">alpha</span>:&#123;<span class=\"attr\">value</span>:<span class=\"number\">0</span>,<span class=\"attr\">easing</span>:<span class=\"string\">&quot;linear&quot;</span>,<span class=\"attr\">duration</span>:anime.random(<span class=\"number\">600</span>,<span class=\"number\">800</span>)&#125;,<span class=\"attr\">duration</span>:anime.random(<span class=\"number\">1200</span>,<span class=\"number\">1800</span>),<span class=\"attr\">easing</span>:<span class=\"string\">&quot;easeOutExpo&quot;</span>,<span class=\"attr\">update</span>:renderParticule,<span class=\"attr\">offset</span>:<span class=\"number\">0</span>&#125;)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">debounce</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">var</span> a;<span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">var</span> n=<span class=\"built_in\">this</span>,i=<span class=\"built_in\">arguments</span>;<span class=\"built_in\">clearTimeout</span>(a),a=<span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class=\"keyword\">var</span> canvasEl=<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;.fireworks&quot;</span>);<span class=\"keyword\">if</span>(canvasEl)&#123;<span class=\"keyword\">var</span> ctx=canvasEl.getContext(<span class=\"string\">&quot;2d&quot;</span>),numberOfParticules=<span class=\"number\">30</span>,pointerX=<span class=\"number\">0</span>,pointerY=<span class=\"number\">0</span>,tap=<span class=\"string\">&quot;mousedown&quot;</span>,colors=[<span class=\"string\">&quot;#FF1461&quot;</span>,<span class=\"string\">&quot;#18FF92&quot;</span>,<span class=\"string\">&quot;#5A87FF&quot;</span>,<span class=\"string\">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;canvasEl.width=<span class=\"number\">2</span>*<span class=\"built_in\">window</span>.innerWidth,canvasEl.height=<span class=\"number\">2</span>*<span class=\"built_in\">window</span>.innerHeight,canvasEl.style.width=<span class=\"built_in\">window</span>.innerWidth+<span class=\"string\">&quot;px&quot;</span>,canvasEl.style.height=<span class=\"built_in\">window</span>.innerHeight+<span class=\"string\">&quot;px&quot;</span>,canvasEl.getContext(<span class=\"string\">&quot;2d&quot;</span>).scale(<span class=\"number\">2</span>,<span class=\"number\">2</span>)&#125;,<span class=\"number\">500</span>),render=anime(&#123;<span class=\"attr\">duration</span>:<span class=\"number\">1</span>/<span class=\"number\">0</span>,<span class=\"attr\">update</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;ctx.clearRect(<span class=\"number\">0</span>,<span class=\"number\">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class=\"built_in\">document</span>.addEventListener(tap,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"string\">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class=\"string\">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class=\"string\">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class=\"string\">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class=\"number\">1</span>),setCanvasSize(),<span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">&quot;resize&quot;</span>,setCanvasSize,!<span class=\"number\">1</span>)&#125;;</span><br></pre></td></tr></table></figure></li>\n<li>在 <code>themes/next/layout/_layout.swig</code> 文件末尾添加：  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面点击小红心 --&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/js/clicklove.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n打开 <code>themes/next/_config.yml</code> 文件，在末尾添加如下标识：<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Fireworks</span></span><br><span class=\"line\"><span class=\"attr\">fireworks:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n重新编译后就有鼠标点击特效啦</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"添加页面人物\"><a href=\"#添加页面人物\" class=\"headerlink\" title=\"添加页面人物\"></a>添加页面人物</h1><p>在博客目录下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -save hexo-helper-live2d</span><br></pre></td></tr></table></figure>\n<p>在 <a href=\"https://github.com/xiazeyu/live2d-widget-models\">lived2d</a>中选择自己想要的人物形象，例子可在作者网站中查看，<a href=\"https://huaji8.top/post/live2d-plugin-2.0/\">Author’s original Blog</a>。下载命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install live2d-widget-model-wanko</span><br></pre></td></tr></table></figure>\n\n<p>在 <code>your_blog/_config.yml</code> 或者 <code>themes/next/_config.yml</code> 文件下添加如下配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Live2D</span></span><br><span class=\"line\"><span class=\"comment\">## https://github.com/xiazeyu/live2d-widget.js</span></span><br><span class=\"line\"><span class=\"comment\">## https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init</span></span><br><span class=\"line\"><span class=\"attr\">live2d:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">scriptFrom:</span> <span class=\"string\">local</span></span><br><span class=\"line\">  <span class=\"attr\">pluginRootPath:</span> <span class=\"string\">live2dw/</span></span><br><span class=\"line\">  <span class=\"attr\">pluginJsPath:</span> <span class=\"string\">lib/</span></span><br><span class=\"line\">  <span class=\"attr\">pluginModelPath:</span> <span class=\"string\">assets/</span></span><br><span class=\"line\">  <span class=\"attr\">tagMode:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">model:</span></span><br><span class=\"line\">    <span class=\"attr\">use:</span> <span class=\"string\">live2d-widget-model-wanko</span>  <span class=\"comment\">#选择下载过的模型</span></span><br><span class=\"line\">  <span class=\"attr\">display:</span> <span class=\"comment\">#放置位置和大小</span></span><br><span class=\"line\">    <span class=\"attr\">position:</span> <span class=\"string\">right</span></span><br><span class=\"line\">    <span class=\"attr\">width:</span> <span class=\"number\">150</span></span><br><span class=\"line\">    <span class=\"attr\">height:</span> <span class=\"number\">300</span></span><br><span class=\"line\">  <span class=\"attr\">mobile:</span></span><br><span class=\"line\">    <span class=\"attr\">show:</span> <span class=\"literal\">false</span> <span class=\"comment\">#是否在手机端显示</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"添加网易云音乐播放\"><a href=\"#添加网易云音乐播放\" class=\"headerlink\" title=\"添加网易云音乐播放\"></a>添加网易云音乐播放</h1><p>在<a href=\"https://music.163.com/\">网易云音乐</a>网站搜索自己想添加的音乐，点击生成外链，得到外链html代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;no&quot;</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">marginwidth</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">marginheight</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">330</span> <span class=\"attr\">height</span>=<span class=\"string\">86</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//music.163.com/outchain/player?type=2&amp;id=1471724841&amp;auto=1&amp;height=66&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>将代码放到自己想要的地方就行啦，如放在侧边栏 <code>themes/next/layout/_macro/sidebar.swig</code> 中</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://blog.csdn.net/mqdxiaoxiao/article/details/93644533\">Hexo博客NexT主题下添加分类、标签、关于菜单项</a></li>\n<li><a href=\"https://blog.csdn.net/nightmare_dimple/article/details/86661502\">Hexo博客优化之Next主题美化</a></li>\n<li><a href=\"http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html\">hexo的next主题个性化教程:打造炫酷网站</a></li>\n<li><a href=\"https://www.jianshu.com/p/1ff2fcbdd155\">Hexo博客第三方主题next进阶教程</a></li>\n<li><a href=\"https://blog.csdn.net/cungudafa/article/details/104282643\">Hexo（sakura）添加live2d看板动画（可对话，换装互动）</a></li>\n<li><a href=\"https://zouhua.top/archives/e635378a.html\">Hexo-Next主题美化</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>前面已经可以开始写博客了，但如果还是对界面不怎么满意，那还可以做些小修改，下面记录一下我在next主题上做的配置。</p>","more":"<h1 id=\"Next主题风格\"><a href=\"#Next主题风格\" class=\"headerlink\" title=\"Next主题风格\"></a>Next主题风格</h1><p>Next中提供了四种主题风格，可以在主题配置文件<code>your_blog/themes/next/_config.yml</code>中进行选择，分别是Muse、Mist、Pisces、Gemini</p>\n<p>我选择的是Mist风格</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Schemes</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Muse</span></span><br><span class=\"line\"><span class=\"attr\">scheme:</span> <span class=\"string\">Mist</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Pisces</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Gemini</span></span><br></pre></td></tr></table></figure>\n\n<p>在 <code>_config.yml</code> 文件中有博客主题的相关配置文件，基本的配置都有写明，不懂的可以设置后看看效果或者搜索</p>\n<h1 id=\"添加博客自定义图标\"><a href=\"#添加博客自定义图标\" class=\"headerlink\" title=\"添加博客自定义图标\"></a>添加博客自定义图标</h1><p>Hexo博客的默认图标是<code>H</code>，支持自定义图标，可在<a href=\"https://www.bitbug.net/\">bitbug</a>网站选择图片生成，<a href=\"https://www.iconfont.cn/plus/user/detail?uid=41718\">iconfont</a>下载，在 <code>themes/next/_config.yml</code> 如下地方进行设置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">favicon:</span></span><br><span class=\"line\">  <span class=\"attr\">small:</span> <span class=\"string\">/images/16x16.png</span></span><br><span class=\"line\">  <span class=\"attr\">medium:</span> <span class=\"string\">/images/32x32.png</span></span><br><span class=\"line\">  <span class=\"attr\">apple_touch_icon:</span> <span class=\"string\">/images/128x128.png</span></span><br><span class=\"line\">  <span class=\"attr\">safari_pinned_tab:</span> <span class=\"string\">/images/logo2.svg</span></span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"鼠标点击特效\"><a href=\"#鼠标点击特效\" class=\"headerlink\" title=\"鼠标点击特效\"></a>鼠标点击特效</h1><p>在界面中添加点击特效，这里提供两种</p>\n<ol>\n<li>红心特效<ul>\n<li>在 <code>/themes/next/source/js/</code> 下新建文件 <code>clicklove.js</code> ，接着把下面的代码拷贝粘贴到 <code>clicklove.js</code> 文件中：   <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e,t,a</span>)</span>&#123;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">n</span>(<span class=\"params\"></span>)</span>&#123;c(<span class=\"string\">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),o(),r()&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">r</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> e=<span class=\"number\">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class=\"number\">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class=\"number\">1</span>)):(d[e].y--,d[e].scale+=<span class=\"number\">.004</span>,d[e].alpha-=<span class=\"number\">.013</span>,d[e].el.style.cssText=<span class=\"string\">&quot;left:&quot;</span>+d[e].x+<span class=\"string\">&quot;px;top:&quot;</span>+d[e].y+<span class=\"string\">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class=\"string\">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class=\"string\">&quot;,&quot;</span>+d[e].scale+<span class=\"string\">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class=\"string\">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">o</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">var</span> t=<span class=\"string\">&quot;function&quot;</span>==<span class=\"keyword\">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">i</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">var</span> a=t.createElement(<span class=\"string\">&quot;div&quot;</span>);a.className=<span class=\"string\">&quot;heart&quot;</span>,d.push(&#123;<span class=\"attr\">el</span>:a,<span class=\"attr\">x</span>:e.clientX-<span class=\"number\">5</span>,<span class=\"attr\">y</span>:e.clientY-<span class=\"number\">5</span>,<span class=\"attr\">scale</span>:<span class=\"number\">1</span>,<span class=\"attr\">alpha</span>:<span class=\"number\">1</span>,<span class=\"attr\">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">c</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">var</span> a=t.createElement(<span class=\"string\">&quot;style&quot;</span>);a.type=<span class=\"string\">&quot;text/css&quot;</span>;<span class=\"keyword\">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class=\"keyword\">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class=\"string\">&quot;head&quot;</span>)[<span class=\"number\">0</span>].appendChild(a)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">s</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span><span class=\"string\">&quot;rgb(&quot;</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">&quot;,&quot;</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">&quot;,&quot;</span>+~~(<span class=\"number\">255</span>*<span class=\"built_in\">Math</span>.random())+<span class=\"string\">&quot;)&quot;</span>&#125;<span class=\"keyword\">var</span> d=[];e.requestAnimationFrame=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"built_in\">setTimeout</span>(e,<span class=\"number\">1e3</span>/<span class=\"number\">60</span>)&#125;&#125;(),n()&#125;(<span class=\"built_in\">window</span>,<span class=\"built_in\">document</span>);</span><br></pre></td></tr></table></figure></li>\n<li>在 <code>themes/next/layout/_layout.swig</code> 文件末尾添加：   <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面点击小红心 --&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/js/clicklove.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>烟火特效<ul>\n<li>在 <code>themes/next/source/js/</code> 里面建一个叫 <code>fireworks.js</code> 的文件，复制代码如下：  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&quot;use strict&quot;</span>;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateCoords</span>(<span class=\"params\">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class=\"number\">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class=\"number\">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setParticuleDirection</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">var</span> t=anime.random(<span class=\"number\">0</span>,<span class=\"number\">360</span>)*<span class=\"built_in\">Math</span>.PI/<span class=\"number\">180</span>,a=anime.random(<span class=\"number\">50</span>,<span class=\"number\">180</span>),n=[-<span class=\"number\">1</span>,<span class=\"number\">1</span>][anime.random(<span class=\"number\">0</span>,<span class=\"number\">1</span>)]*a;<span class=\"keyword\">return</span>&#123;<span class=\"attr\">x</span>:e.x+n*<span class=\"built_in\">Math</span>.cos(t),<span class=\"attr\">y</span>:e.y+n*<span class=\"built_in\">Math</span>.sin(t)&#125;&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createParticule</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">var</span> a=&#123;&#125;;<span class=\"keyword\">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class=\"number\">0</span>,colors.length-<span class=\"number\">1</span>)],a.radius=anime.random(<span class=\"number\">16</span>,<span class=\"number\">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class=\"number\">0</span>,<span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI,!<span class=\"number\">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createCircle</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">var</span> a=&#123;&#125;;<span class=\"keyword\">return</span> a.x=e,a.y=t,a.color=<span class=\"string\">&quot;#F00&quot;</span>,a.radius=<span class=\"number\">0.1</span>,a.alpha=<span class=\"number\">0.5</span>,a.lineWidth=<span class=\"number\">6</span>,a.draw=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class=\"number\">0</span>,<span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI,!<span class=\"number\">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class=\"number\">1</span>&#125;,a&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">renderParticule</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> t=<span class=\"number\">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">animateParticules</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> a=createCircle(e,t),n=[],i=<span class=\"number\">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class=\"attr\">targets</span>:n,<span class=\"attr\">x</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">return</span> e.endPos.x&#125;,<span class=\"attr\">y</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">return</span> e.endPos.y&#125;,<span class=\"attr\">radius</span>:<span class=\"number\">0.1</span>,<span class=\"attr\">duration</span>:anime.random(<span class=\"number\">1200</span>,<span class=\"number\">1800</span>),<span class=\"attr\">easing</span>:<span class=\"string\">&quot;easeOutExpo&quot;</span>,<span class=\"attr\">update</span>:renderParticule&#125;).add(&#123;<span class=\"attr\">targets</span>:a,<span class=\"attr\">radius</span>:anime.random(<span class=\"number\">80</span>,<span class=\"number\">160</span>),<span class=\"attr\">lineWidth</span>:<span class=\"number\">0</span>,<span class=\"attr\">alpha</span>:&#123;<span class=\"attr\">value</span>:<span class=\"number\">0</span>,<span class=\"attr\">easing</span>:<span class=\"string\">&quot;linear&quot;</span>,<span class=\"attr\">duration</span>:anime.random(<span class=\"number\">600</span>,<span class=\"number\">800</span>)&#125;,<span class=\"attr\">duration</span>:anime.random(<span class=\"number\">1200</span>,<span class=\"number\">1800</span>),<span class=\"attr\">easing</span>:<span class=\"string\">&quot;easeOutExpo&quot;</span>,<span class=\"attr\">update</span>:renderParticule,<span class=\"attr\">offset</span>:<span class=\"number\">0</span>&#125;)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">debounce</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">var</span> a;<span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">var</span> n=<span class=\"built_in\">this</span>,i=<span class=\"built_in\">arguments</span>;<span class=\"built_in\">clearTimeout</span>(a),a=<span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class=\"keyword\">var</span> canvasEl=<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;.fireworks&quot;</span>);<span class=\"keyword\">if</span>(canvasEl)&#123;<span class=\"keyword\">var</span> ctx=canvasEl.getContext(<span class=\"string\">&quot;2d&quot;</span>),numberOfParticules=<span class=\"number\">30</span>,pointerX=<span class=\"number\">0</span>,pointerY=<span class=\"number\">0</span>,tap=<span class=\"string\">&quot;mousedown&quot;</span>,colors=[<span class=\"string\">&quot;#FF1461&quot;</span>,<span class=\"string\">&quot;#18FF92&quot;</span>,<span class=\"string\">&quot;#5A87FF&quot;</span>,<span class=\"string\">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;canvasEl.width=<span class=\"number\">2</span>*<span class=\"built_in\">window</span>.innerWidth,canvasEl.height=<span class=\"number\">2</span>*<span class=\"built_in\">window</span>.innerHeight,canvasEl.style.width=<span class=\"built_in\">window</span>.innerWidth+<span class=\"string\">&quot;px&quot;</span>,canvasEl.style.height=<span class=\"built_in\">window</span>.innerHeight+<span class=\"string\">&quot;px&quot;</span>,canvasEl.getContext(<span class=\"string\">&quot;2d&quot;</span>).scale(<span class=\"number\">2</span>,<span class=\"number\">2</span>)&#125;,<span class=\"number\">500</span>),render=anime(&#123;<span class=\"attr\">duration</span>:<span class=\"number\">1</span>/<span class=\"number\">0</span>,<span class=\"attr\">update</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;ctx.clearRect(<span class=\"number\">0</span>,<span class=\"number\">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class=\"built_in\">document</span>.addEventListener(tap,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"string\">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class=\"string\">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class=\"string\">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class=\"string\">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class=\"number\">1</span>),setCanvasSize(),<span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">&quot;resize&quot;</span>,setCanvasSize,!<span class=\"number\">1</span>)&#125;<span class=\"string\">&quot;use strict&quot;</span>;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateCoords</span>(<span class=\"params\">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class=\"number\">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class=\"number\">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setParticuleDirection</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">var</span> t=anime.random(<span class=\"number\">0</span>,<span class=\"number\">360</span>)*<span class=\"built_in\">Math</span>.PI/<span class=\"number\">180</span>,a=anime.random(<span class=\"number\">50</span>,<span class=\"number\">180</span>),n=[-<span class=\"number\">1</span>,<span class=\"number\">1</span>][anime.random(<span class=\"number\">0</span>,<span class=\"number\">1</span>)]*a;<span class=\"keyword\">return</span>&#123;<span class=\"attr\">x</span>:e.x+n*<span class=\"built_in\">Math</span>.cos(t),<span class=\"attr\">y</span>:e.y+n*<span class=\"built_in\">Math</span>.sin(t)&#125;&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createParticule</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">var</span> a=&#123;&#125;;<span class=\"keyword\">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class=\"number\">0</span>,colors.length-<span class=\"number\">1</span>)],a.radius=anime.random(<span class=\"number\">16</span>,<span class=\"number\">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class=\"number\">0</span>,<span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI,!<span class=\"number\">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createCircle</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">var</span> a=&#123;&#125;;<span class=\"keyword\">return</span> a.x=e,a.y=t,a.color=<span class=\"string\">&quot;#F00&quot;</span>,a.radius=<span class=\"number\">0.1</span>,a.alpha=<span class=\"number\">0.5</span>,a.lineWidth=<span class=\"number\">6</span>,a.draw=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class=\"number\">0</span>,<span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI,!<span class=\"number\">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class=\"number\">1</span>&#125;,a&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">renderParticule</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> t=<span class=\"number\">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">animateParticules</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> a=createCircle(e,t),n=[],i=<span class=\"number\">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class=\"attr\">targets</span>:n,<span class=\"attr\">x</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">return</span> e.endPos.x&#125;,<span class=\"attr\">y</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"keyword\">return</span> e.endPos.y&#125;,<span class=\"attr\">radius</span>:<span class=\"number\">0.1</span>,<span class=\"attr\">duration</span>:anime.random(<span class=\"number\">1200</span>,<span class=\"number\">1800</span>),<span class=\"attr\">easing</span>:<span class=\"string\">&quot;easeOutExpo&quot;</span>,<span class=\"attr\">update</span>:renderParticule&#125;).add(&#123;<span class=\"attr\">targets</span>:a,<span class=\"attr\">radius</span>:anime.random(<span class=\"number\">80</span>,<span class=\"number\">160</span>),<span class=\"attr\">lineWidth</span>:<span class=\"number\">0</span>,<span class=\"attr\">alpha</span>:&#123;<span class=\"attr\">value</span>:<span class=\"number\">0</span>,<span class=\"attr\">easing</span>:<span class=\"string\">&quot;linear&quot;</span>,<span class=\"attr\">duration</span>:anime.random(<span class=\"number\">600</span>,<span class=\"number\">800</span>)&#125;,<span class=\"attr\">duration</span>:anime.random(<span class=\"number\">1200</span>,<span class=\"number\">1800</span>),<span class=\"attr\">easing</span>:<span class=\"string\">&quot;easeOutExpo&quot;</span>,<span class=\"attr\">update</span>:renderParticule,<span class=\"attr\">offset</span>:<span class=\"number\">0</span>&#125;)&#125;<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">debounce</span>(<span class=\"params\">e,t</span>)</span>&#123;<span class=\"keyword\">var</span> a;<span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">var</span> n=<span class=\"built_in\">this</span>,i=<span class=\"built_in\">arguments</span>;<span class=\"built_in\">clearTimeout</span>(a),a=<span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class=\"keyword\">var</span> canvasEl=<span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;.fireworks&quot;</span>);<span class=\"keyword\">if</span>(canvasEl)&#123;<span class=\"keyword\">var</span> ctx=canvasEl.getContext(<span class=\"string\">&quot;2d&quot;</span>),numberOfParticules=<span class=\"number\">30</span>,pointerX=<span class=\"number\">0</span>,pointerY=<span class=\"number\">0</span>,tap=<span class=\"string\">&quot;mousedown&quot;</span>,colors=[<span class=\"string\">&quot;#FF1461&quot;</span>,<span class=\"string\">&quot;#18FF92&quot;</span>,<span class=\"string\">&quot;#5A87FF&quot;</span>,<span class=\"string\">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;canvasEl.width=<span class=\"number\">2</span>*<span class=\"built_in\">window</span>.innerWidth,canvasEl.height=<span class=\"number\">2</span>*<span class=\"built_in\">window</span>.innerHeight,canvasEl.style.width=<span class=\"built_in\">window</span>.innerWidth+<span class=\"string\">&quot;px&quot;</span>,canvasEl.style.height=<span class=\"built_in\">window</span>.innerHeight+<span class=\"string\">&quot;px&quot;</span>,canvasEl.getContext(<span class=\"string\">&quot;2d&quot;</span>).scale(<span class=\"number\">2</span>,<span class=\"number\">2</span>)&#125;,<span class=\"number\">500</span>),render=anime(&#123;<span class=\"attr\">duration</span>:<span class=\"number\">1</span>/<span class=\"number\">0</span>,<span class=\"attr\">update</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;ctx.clearRect(<span class=\"number\">0</span>,<span class=\"number\">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class=\"built_in\">document</span>.addEventListener(tap,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;<span class=\"string\">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class=\"string\">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class=\"string\">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class=\"string\">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class=\"number\">1</span>),setCanvasSize(),<span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">&quot;resize&quot;</span>,setCanvasSize,!<span class=\"number\">1</span>)&#125;;</span><br></pre></td></tr></table></figure></li>\n<li>在 <code>themes/next/layout/_layout.swig</code> 文件末尾添加：  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面点击小红心 --&gt;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/js/clicklove.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n打开 <code>themes/next/_config.yml</code> 文件，在末尾添加如下标识：<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Fireworks</span></span><br><span class=\"line\"><span class=\"attr\">fireworks:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n重新编译后就有鼠标点击特效啦</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"添加页面人物\"><a href=\"#添加页面人物\" class=\"headerlink\" title=\"添加页面人物\"></a>添加页面人物</h1><p>在博客目录下执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -save hexo-helper-live2d</span><br></pre></td></tr></table></figure>\n<p>在 <a href=\"https://github.com/xiazeyu/live2d-widget-models\">lived2d</a>中选择自己想要的人物形象，例子可在作者网站中查看，<a href=\"https://huaji8.top/post/live2d-plugin-2.0/\">Author’s original Blog</a>。下载命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install live2d-widget-model-wanko</span><br></pre></td></tr></table></figure>\n\n<p>在 <code>your_blog/_config.yml</code> 或者 <code>themes/next/_config.yml</code> 文件下添加如下配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Live2D</span></span><br><span class=\"line\"><span class=\"comment\">## https://github.com/xiazeyu/live2d-widget.js</span></span><br><span class=\"line\"><span class=\"comment\">## https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init</span></span><br><span class=\"line\"><span class=\"attr\">live2d:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">scriptFrom:</span> <span class=\"string\">local</span></span><br><span class=\"line\">  <span class=\"attr\">pluginRootPath:</span> <span class=\"string\">live2dw/</span></span><br><span class=\"line\">  <span class=\"attr\">pluginJsPath:</span> <span class=\"string\">lib/</span></span><br><span class=\"line\">  <span class=\"attr\">pluginModelPath:</span> <span class=\"string\">assets/</span></span><br><span class=\"line\">  <span class=\"attr\">tagMode:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">model:</span></span><br><span class=\"line\">    <span class=\"attr\">use:</span> <span class=\"string\">live2d-widget-model-wanko</span>  <span class=\"comment\">#选择下载过的模型</span></span><br><span class=\"line\">  <span class=\"attr\">display:</span> <span class=\"comment\">#放置位置和大小</span></span><br><span class=\"line\">    <span class=\"attr\">position:</span> <span class=\"string\">right</span></span><br><span class=\"line\">    <span class=\"attr\">width:</span> <span class=\"number\">150</span></span><br><span class=\"line\">    <span class=\"attr\">height:</span> <span class=\"number\">300</span></span><br><span class=\"line\">  <span class=\"attr\">mobile:</span></span><br><span class=\"line\">    <span class=\"attr\">show:</span> <span class=\"literal\">false</span> <span class=\"comment\">#是否在手机端显示</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"添加网易云音乐播放\"><a href=\"#添加网易云音乐播放\" class=\"headerlink\" title=\"添加网易云音乐播放\"></a>添加网易云音乐播放</h1><p>在<a href=\"https://music.163.com/\">网易云音乐</a>网站搜索自己想添加的音乐，点击生成外链，得到外链html代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;no&quot;</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">marginwidth</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">marginheight</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">330</span> <span class=\"attr\">height</span>=<span class=\"string\">86</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//music.163.com/outchain/player?type=2&amp;id=1471724841&amp;auto=1&amp;height=66&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>将代码放到自己想要的地方就行啦，如放在侧边栏 <code>themes/next/layout/_macro/sidebar.swig</code> 中</p>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"https://blog.csdn.net/mqdxiaoxiao/article/details/93644533\">Hexo博客NexT主题下添加分类、标签、关于菜单项</a></li>\n<li><a href=\"https://blog.csdn.net/nightmare_dimple/article/details/86661502\">Hexo博客优化之Next主题美化</a></li>\n<li><a href=\"http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html\">hexo的next主题个性化教程:打造炫酷网站</a></li>\n<li><a href=\"https://www.jianshu.com/p/1ff2fcbdd155\">Hexo博客第三方主题next进阶教程</a></li>\n<li><a href=\"https://blog.csdn.net/cungudafa/article/details/104282643\">Hexo（sakura）添加live2d看板动画（可对话，换装互动）</a></li>\n<li><a href=\"https://zouhua.top/archives/e635378a.html\">Hexo-Next主题美化</a></li>\n</ul>"},{"title":"Hexo 本地图片显示问题","date":"2021-08-21T12:30:00.000Z","_content":"\n# 前言\n\n在之前的博客描述中我提到了使用本地图片的方法（第二种），但实际应用还是无法显示，所以在网上搜索得到新的解决方案(详见参考文章)\n\n<!--more-->\n\n# 解决方案\n\n1. 确认 `hexo_project/_config.yml` 中配置好 `post_asset_folder: true`\n2. 在 `hexo_project` 目录执行如下命令下载插件\n    \n    ```bash\n    npm install https://github.com/CodeFalling/hexo-asset-image --save\n    ```\n\n3. 假设文章目录中有如下结构\n\n    ```bash\n    # folder\n    your_post\n    |-picture.jpg\n    # article\n    your_post.md\n    ```\n\n    在 `your_post.md` 中使用 `![pic](your_post/picture.jpg)` 插入图片，编译生成的文章目录结构会是\n\n    ```bash\n    public/year/month/date/your_post\n    |-picture.jpg\n    |-index.html\n    ```\n\n    同时index.html中的图片路径会修改为 `<img src=\"/year/month/date/your_post/picture.jpg\" alt=\"pic\">` 而不是写markdown时的 `<img src=\"your_post/picture.jpg\" alt=\"pic\">` 路径。\n\n    问题解决。\n\n# 参考文章\n\n[在 hexo 中无痛使用本地图片](https://www.cnblogs.com/lmf-techniques/articles/6911051.html)","source":"_posts/hexo本地图片显示问题.md","raw":"---\ntitle: Hexo 本地图片显示问题\ndate: 2021-08-21 20:30:00\ntags: \n    - 博客\ncategories:\n    - 博客\n    - Hexo\n---\n\n# 前言\n\n在之前的博客描述中我提到了使用本地图片的方法（第二种），但实际应用还是无法显示，所以在网上搜索得到新的解决方案(详见参考文章)\n\n<!--more-->\n\n# 解决方案\n\n1. 确认 `hexo_project/_config.yml` 中配置好 `post_asset_folder: true`\n2. 在 `hexo_project` 目录执行如下命令下载插件\n    \n    ```bash\n    npm install https://github.com/CodeFalling/hexo-asset-image --save\n    ```\n\n3. 假设文章目录中有如下结构\n\n    ```bash\n    # folder\n    your_post\n    |-picture.jpg\n    # article\n    your_post.md\n    ```\n\n    在 `your_post.md` 中使用 `![pic](your_post/picture.jpg)` 插入图片，编译生成的文章目录结构会是\n\n    ```bash\n    public/year/month/date/your_post\n    |-picture.jpg\n    |-index.html\n    ```\n\n    同时index.html中的图片路径会修改为 `<img src=\"/year/month/date/your_post/picture.jpg\" alt=\"pic\">` 而不是写markdown时的 `<img src=\"your_post/picture.jpg\" alt=\"pic\">` 路径。\n\n    问题解决。\n\n# 参考文章\n\n[在 hexo 中无痛使用本地图片](https://www.cnblogs.com/lmf-techniques/articles/6911051.html)","slug":"hexo本地图片显示问题","published":1,"updated":"2021-08-26T06:20:56.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmb5000rfa58d6utco5c","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>在之前的博客描述中我提到了使用本地图片的方法（第二种），但实际应用还是无法显示，所以在网上搜索得到新的解决方案(详见参考文章)</p>\n<span id=\"more\"></span>\n\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><ol>\n<li><p>确认 <code>hexo_project/_config.yml</code> 中配置好 <code>post_asset_folder: true</code></p>\n</li>\n<li><p>在 <code>hexo_project</code> 目录执行如下命令下载插件</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure></li>\n<li><p>假设文章目录中有如下结构</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># folder</span></span><br><span class=\"line\">your_post</span><br><span class=\"line\">|-picture.jpg</span><br><span class=\"line\"><span class=\"comment\"># article</span></span><br><span class=\"line\">your_post.md</span><br></pre></td></tr></table></figure>\n\n<p> 在 <code>your_post.md</code> 中使用 <code>![pic](your_post/picture.jpg)</code> 插入图片，编译生成的文章目录结构会是</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public/year/month/date/your_post</span><br><span class=\"line\">|-picture.jpg</span><br><span class=\"line\">|-index.html</span><br></pre></td></tr></table></figure>\n\n<p> 同时index.html中的图片路径会修改为 <code>&lt;img src=&quot;/year/month/date/your_post/picture.jpg&quot; alt=&quot;pic&quot;&gt;</code> 而不是写markdown时的 <code>&lt;img src=&quot;your_post/picture.jpg&quot; alt=&quot;pic&quot;&gt;</code> 路径。</p>\n<p> 问题解决。</p>\n</li>\n</ol>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://www.cnblogs.com/lmf-techniques/articles/6911051.html\">在 hexo 中无痛使用本地图片</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>在之前的博客描述中我提到了使用本地图片的方法（第二种），但实际应用还是无法显示，所以在网上搜索得到新的解决方案(详见参考文章)</p>","more":"<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><ol>\n<li><p>确认 <code>hexo_project/_config.yml</code> 中配置好 <code>post_asset_folder: true</code></p>\n</li>\n<li><p>在 <code>hexo_project</code> 目录执行如下命令下载插件</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure></li>\n<li><p>假设文章目录中有如下结构</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># folder</span></span><br><span class=\"line\">your_post</span><br><span class=\"line\">|-picture.jpg</span><br><span class=\"line\"><span class=\"comment\"># article</span></span><br><span class=\"line\">your_post.md</span><br></pre></td></tr></table></figure>\n\n<p> 在 <code>your_post.md</code> 中使用 <code>![pic](your_post/picture.jpg)</code> 插入图片，编译生成的文章目录结构会是</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public/year/month/date/your_post</span><br><span class=\"line\">|-picture.jpg</span><br><span class=\"line\">|-index.html</span><br></pre></td></tr></table></figure>\n\n<p> 同时index.html中的图片路径会修改为 <code>&lt;img src=&quot;/year/month/date/your_post/picture.jpg&quot; alt=&quot;pic&quot;&gt;</code> 而不是写markdown时的 <code>&lt;img src=&quot;your_post/picture.jpg&quot; alt=&quot;pic&quot;&gt;</code> 路径。</p>\n<p> 问题解决。</p>\n</li>\n</ol>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://www.cnblogs.com/lmf-techniques/articles/6911051.html\">在 hexo 中无痛使用本地图片</a></p>"},{"title":"Hexo Blog","date":"2021-08-15T11:53:45.000Z","_content":"\n# 前言\n\n前面我用 `jkell` 弄了个Github博客，虽然能凑活着用，但还是对效果不是很满意。后面看到别人都在用Hexo的Next主题界面，看起来简洁又好看，于是在经过很长时间后（懒癌晚期），我终于下载了 `hexo cli`，尝试了一下，效果还成，这是写的第一篇博客，后面会将以前写的博客也更新上来。\n\n<!--more-->\n\n# hexo下载配置\n\n官网： http://hexo.io\n\ngithub: https://github.com/hexojs/hexo\n\n1. 安装\n    ```bash\n    npm install hexo-cli -g\n    ```\n2. 在本地新建一个文件夹存放代码\n3. 初始化\n    ```bash\n    hexo init\n    ```\n4. 启动博客\n    ```bash\n    hexo s\n    # or\n    hexo server\n    ```\n5. 根据提示在浏览器输入 `http://localhost:4000` 就可以访问到本地启动的博客了。\n6. 输入`hexo help`可以查看命令选项\n7. 写文章\n    ```bash\n    hexo new 'your_article_name'\n    ```\n    运行此命令会在 `hexo_project/source/_posts` 文件夹下建立一个新markdown文件，当然你可以不用命令，自己手动建新md文件，不过要注意最前面的标题前的格式与目前主题文章保持一致\n8. 编译发布新文章\n    ```bash\n    # 清除以前编译的文件\n    hexo clean\n\n    # 编译文章页面\n    hexo generate\n\n    # 方便写法\n    hexo clean && hexo generate\n    ```\n9. 修改主题（以Next主题为例）\n   1. 进入Hexo项目文件夹\n   2. 下载主题\n        ```bash\n        git clone https://github.com/theme-next/hexo-theme-next themes/next\n        ```\n   3. 修改站点配置文件 `_config.yml` 中的 `theme: landscape` ，改为 `theme: next`\n10. 将博客发布到代码仓库，例如GitHub\n   4. 安装插件\n        ```bash\n        npm install hexo-deployer-git --save\n        ```\n   5. 编辑项目的 `_config.yml` 文件，修改如下参数\n        ```bash\n        # Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\n        url: https://neonatal.gitee.io/\n\n        # 发布仓库\n        deploy:\n            type: git\n            repo: ssh地址 # 仓库的ssh地址\n            branch: website # 要推送到的分支\n        ```\n    1. 发布到代码库\n        ```bash\n        hexo d\n        # or\n        hexo delpoy\n        ```\n    2. 不出意外应该可以通过pages访问到博客界面了\n11. 注：`GitHub`建立`Github Pages`仓库命名应为`username.github.io`，而`Gitee`建立`Gitee Pages`仓库应为`username`，这样就可以通过 https://username.github.io 或 https://username.gitee.io 访问了。\n12. 再注：也可以将整个项目放到`GitHub`上，更推荐这样做。\n\n# 添加标签、分类等页面\n\n添加页面的过程是类似的，下面以添加标签页为例：\n\n1. 新建页面，用Hexo新建页面命令\n    ```bash\n    hexo new page \"tages\" \n    ```\n2. 打开 `/source/tages/index.md` ，设置其类型 `type` 值为“tages”\n    ```bash\n    title: 标签\n    date: 2021-08-20 20:14:27\n    type: \"tags\"\n    ```\n3. 打开 `themes/your_theme/_config.yml` ，将对应项取消注释即可，没有的话自己添加需要的页面名称\n    ```yml\n    menu:\n        home: / || fa fa-home\n        #about: /about/ || fa fa-user\n        tags: /tags/ || fa fa-tags\n        #categories: /categories/ || fa fa-th\n        archives: /archives/ || fa fa-archive\n    ```\n\n# 插入图片\n\n1. 绝对引用\n   * 少量使用图片时可用此方法，将图片文件放入 `your_blog/public/images` 文件夹下，使用 `![picture](/public/images/picture.jpg)` 方式直接引用。\n   * 存在问题：图片管理麻烦，删除文章时图片仍在，引用关系混乱\n2. 相对引用\n   * 在 `your_blog/_config.yml` 文件中配置 `post_asset_folder: true` ，新建文章的时候建立同名文件夹，将图片放入\n   * 使用 `![picture](article/picture.jpg)` 引用图片\n   * 优点：管理比较方便\n3. CDN或图床引用\n   * 所使用图片在网络图库上，直接使用图片链接即可，`![picture](https://website.com/picture.jpg)`\n   * 缺点：可能会失效，可自己使用图床网站上传自己的图片得到链接\n\n# 参考\n\n* [使用 Hexo+GitHub 搭建个人免费博客教程（小白向）](https://zhuanlan.zhihu.com/p/60578464#:~:text=%E4%BD%BF%E7%94%A8%20Hexo%2BGitHub%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%EF%BC%88%E5%B0%8F%E7%99%BD%E5%90%91%EF%BC%89%201%20%E5%87%86%E5%A4%87%202%20%E8%BF%9E%E6%8E%A5%20Github....,Hexo%20%E5%88%B0%20GitHub%20Pages%206%20%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89....%207%20%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8)\n* [Hexo新建标签、分类、归档等页面](https://blog.csdn.net/weixin_41287260/article/details/97758641)\n* [Hexo博客插入图片的方法](https://www.cnblogs.com/hugochen1024/p/12570656.html)","source":"_posts/hexo-blog.md","raw":"---\ntitle: Hexo Blog\ndate: 2021-08-15 19:53:45\ntags: \n    - 博客\ncategories:\n    - 博客\n    - Hexo\n---\n\n# 前言\n\n前面我用 `jkell` 弄了个Github博客，虽然能凑活着用，但还是对效果不是很满意。后面看到别人都在用Hexo的Next主题界面，看起来简洁又好看，于是在经过很长时间后（懒癌晚期），我终于下载了 `hexo cli`，尝试了一下，效果还成，这是写的第一篇博客，后面会将以前写的博客也更新上来。\n\n<!--more-->\n\n# hexo下载配置\n\n官网： http://hexo.io\n\ngithub: https://github.com/hexojs/hexo\n\n1. 安装\n    ```bash\n    npm install hexo-cli -g\n    ```\n2. 在本地新建一个文件夹存放代码\n3. 初始化\n    ```bash\n    hexo init\n    ```\n4. 启动博客\n    ```bash\n    hexo s\n    # or\n    hexo server\n    ```\n5. 根据提示在浏览器输入 `http://localhost:4000` 就可以访问到本地启动的博客了。\n6. 输入`hexo help`可以查看命令选项\n7. 写文章\n    ```bash\n    hexo new 'your_article_name'\n    ```\n    运行此命令会在 `hexo_project/source/_posts` 文件夹下建立一个新markdown文件，当然你可以不用命令，自己手动建新md文件，不过要注意最前面的标题前的格式与目前主题文章保持一致\n8. 编译发布新文章\n    ```bash\n    # 清除以前编译的文件\n    hexo clean\n\n    # 编译文章页面\n    hexo generate\n\n    # 方便写法\n    hexo clean && hexo generate\n    ```\n9. 修改主题（以Next主题为例）\n   1. 进入Hexo项目文件夹\n   2. 下载主题\n        ```bash\n        git clone https://github.com/theme-next/hexo-theme-next themes/next\n        ```\n   3. 修改站点配置文件 `_config.yml` 中的 `theme: landscape` ，改为 `theme: next`\n10. 将博客发布到代码仓库，例如GitHub\n   4. 安装插件\n        ```bash\n        npm install hexo-deployer-git --save\n        ```\n   5. 编辑项目的 `_config.yml` 文件，修改如下参数\n        ```bash\n        # Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\n        url: https://neonatal.gitee.io/\n\n        # 发布仓库\n        deploy:\n            type: git\n            repo: ssh地址 # 仓库的ssh地址\n            branch: website # 要推送到的分支\n        ```\n    1. 发布到代码库\n        ```bash\n        hexo d\n        # or\n        hexo delpoy\n        ```\n    2. 不出意外应该可以通过pages访问到博客界面了\n11. 注：`GitHub`建立`Github Pages`仓库命名应为`username.github.io`，而`Gitee`建立`Gitee Pages`仓库应为`username`，这样就可以通过 https://username.github.io 或 https://username.gitee.io 访问了。\n12. 再注：也可以将整个项目放到`GitHub`上，更推荐这样做。\n\n# 添加标签、分类等页面\n\n添加页面的过程是类似的，下面以添加标签页为例：\n\n1. 新建页面，用Hexo新建页面命令\n    ```bash\n    hexo new page \"tages\" \n    ```\n2. 打开 `/source/tages/index.md` ，设置其类型 `type` 值为“tages”\n    ```bash\n    title: 标签\n    date: 2021-08-20 20:14:27\n    type: \"tags\"\n    ```\n3. 打开 `themes/your_theme/_config.yml` ，将对应项取消注释即可，没有的话自己添加需要的页面名称\n    ```yml\n    menu:\n        home: / || fa fa-home\n        #about: /about/ || fa fa-user\n        tags: /tags/ || fa fa-tags\n        #categories: /categories/ || fa fa-th\n        archives: /archives/ || fa fa-archive\n    ```\n\n# 插入图片\n\n1. 绝对引用\n   * 少量使用图片时可用此方法，将图片文件放入 `your_blog/public/images` 文件夹下，使用 `![picture](/public/images/picture.jpg)` 方式直接引用。\n   * 存在问题：图片管理麻烦，删除文章时图片仍在，引用关系混乱\n2. 相对引用\n   * 在 `your_blog/_config.yml` 文件中配置 `post_asset_folder: true` ，新建文章的时候建立同名文件夹，将图片放入\n   * 使用 `![picture](article/picture.jpg)` 引用图片\n   * 优点：管理比较方便\n3. CDN或图床引用\n   * 所使用图片在网络图库上，直接使用图片链接即可，`![picture](https://website.com/picture.jpg)`\n   * 缺点：可能会失效，可自己使用图床网站上传自己的图片得到链接\n\n# 参考\n\n* [使用 Hexo+GitHub 搭建个人免费博客教程（小白向）](https://zhuanlan.zhihu.com/p/60578464#:~:text=%E4%BD%BF%E7%94%A8%20Hexo%2BGitHub%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%EF%BC%88%E5%B0%8F%E7%99%BD%E5%90%91%EF%BC%89%201%20%E5%87%86%E5%A4%87%202%20%E8%BF%9E%E6%8E%A5%20Github....,Hexo%20%E5%88%B0%20GitHub%20Pages%206%20%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89....%207%20%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8)\n* [Hexo新建标签、分类、归档等页面](https://blog.csdn.net/weixin_41287260/article/details/97758641)\n* [Hexo博客插入图片的方法](https://www.cnblogs.com/hugochen1024/p/12570656.html)","slug":"hexo-blog","published":1,"updated":"2021-08-26T06:20:56.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmb6000vfa5863m34hsm","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>前面我用 <code>jkell</code> 弄了个Github博客，虽然能凑活着用，但还是对效果不是很满意。后面看到别人都在用Hexo的Next主题界面，看起来简洁又好看，于是在经过很长时间后（懒癌晚期），我终于下载了 <code>hexo cli</code>，尝试了一下，效果还成，这是写的第一篇博客，后面会将以前写的博客也更新上来。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"hexo下载配置\"><a href=\"#hexo下载配置\" class=\"headerlink\" title=\"hexo下载配置\"></a>hexo下载配置</h1><p>官网： <a href=\"http://hexo.io/\">http://hexo.io</a></p>\n<p>github: <a href=\"https://github.com/hexojs/hexo\">https://github.com/hexojs/hexo</a></p>\n<ol>\n<li>安装 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></li>\n<li>在本地新建一个文件夹存放代码</li>\n<li>初始化 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure></li>\n<li>启动博客 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br><span class=\"line\"><span class=\"comment\"># or</span></span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure></li>\n<li>根据提示在浏览器输入 <code>http://localhost:4000</code> 就可以访问到本地启动的博客了。</li>\n<li>输入<code>hexo help</code>可以查看命令选项</li>\n<li>写文章 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&#x27;your_article_name&#x27;</span></span><br></pre></td></tr></table></figure>\n 运行此命令会在 <code>hexo_project/source/_posts</code> 文件夹下建立一个新markdown文件，当然你可以不用命令，自己手动建新md文件，不过要注意最前面的标题前的格式与目前主题文章保持一致</li>\n<li>编译发布新文章 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清除以前编译的文件</span></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编译文章页面</span></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方便写法</span></span><br><span class=\"line\">hexo clean &amp;&amp; hexo generate</span><br></pre></td></tr></table></figure></li>\n<li>修改主题（以Next主题为例）<ol>\n<li>进入Hexo项目文件夹</li>\n<li>下载主题  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li>\n<li>修改站点配置文件 <code>_config.yml</code> 中的 <code>theme: landscape</code> ，改为 <code>theme: next</code></li>\n</ol>\n</li>\n<li>将博客发布到代码仓库，例如GitHub</li>\n<li>安装插件  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>\n<li>编辑项目的 <code>_config.yml</code> 文件，修改如下参数  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class=\"line\">url: https://neonatal.gitee.io/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 发布仓库</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">    <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">    repo: ssh地址 <span class=\"comment\"># 仓库的ssh地址</span></span><br><span class=\"line\">    branch: website <span class=\"comment\"># 要推送到的分支</span></span><br></pre></td></tr></table></figure>    1. 发布到代码库\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br><span class=\"line\"><span class=\"comment\"># or</span></span><br><span class=\"line\">hexo delpoy</span><br></pre></td></tr></table></figure>    2. 不出意外应该可以通过pages访问到博客界面了</li>\n<li>注：<code>GitHub</code>建立<code>Github Pages</code>仓库命名应为<code>username.github.io</code>，而<code>Gitee</code>建立<code>Gitee Pages</code>仓库应为<code>username</code>，这样就可以通过 <a href=\"https://username.github.io/\">https://username.github.io</a> 或 <a href=\"https://username.gitee.io/\">https://username.gitee.io</a> 访问了。</li>\n<li>再注：也可以将整个项目放到<code>GitHub</code>上，更推荐这样做。</li>\n</ol>\n<h1 id=\"添加标签、分类等页面\"><a href=\"#添加标签、分类等页面\" class=\"headerlink\" title=\"添加标签、分类等页面\"></a>添加标签、分类等页面</h1><p>添加页面的过程是类似的，下面以添加标签页为例：</p>\n<ol>\n<li>新建页面，用Hexo新建页面命令 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page <span class=\"string\">&quot;tages&quot;</span> </span><br></pre></td></tr></table></figure></li>\n<li>打开 <code>/source/tages/index.md</code> ，设置其类型 <code>type</code> 值为“tages” <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2021-08-20 20:14:27</span><br><span class=\"line\"><span class=\"built_in\">type</span>: <span class=\"string\">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure></li>\n<li>打开 <code>themes/your_theme/_config.yml</code> ，将对应项取消注释即可，没有的话自己添加需要的页面名称 <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">    <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span></span><br><span class=\"line\">    <span class=\"comment\">#about: /about/ || fa fa-user</span></span><br><span class=\"line\">    <span class=\"attr\">tags:</span> <span class=\"string\">/tags/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-tags</span></span><br><span class=\"line\">    <span class=\"comment\">#categories: /categories/ || fa fa-th</span></span><br><span class=\"line\">    <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h1><ol>\n<li>绝对引用<ul>\n<li>少量使用图片时可用此方法，将图片文件放入 <code>your_blog/public/images</code> 文件夹下，使用 <code>![picture](/public/images/picture.jpg)</code> 方式直接引用。</li>\n<li>存在问题：图片管理麻烦，删除文章时图片仍在，引用关系混乱</li>\n</ul>\n</li>\n<li>相对引用<ul>\n<li>在 <code>your_blog/_config.yml</code> 文件中配置 <code>post_asset_folder: true</code> ，新建文章的时候建立同名文件夹，将图片放入</li>\n<li>使用 <code>![picture](article/picture.jpg)</code> 引用图片</li>\n<li>优点：管理比较方便</li>\n</ul>\n</li>\n<li>CDN或图床引用<ul>\n<li>所使用图片在网络图库上，直接使用图片链接即可，<code>![picture](https://website.com/picture.jpg)</code></li>\n<li>缺点：可能会失效，可自己使用图床网站上传自己的图片得到链接</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/60578464#:~:text=%E4%BD%BF%E7%94%A8%20Hexo%2BGitHub%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%EF%BC%88%E5%B0%8F%E7%99%BD%E5%90%91%EF%BC%89%201%20%E5%87%86%E5%A4%87%202%20%E8%BF%9E%E6%8E%A5%20Github....,Hexo%20%E5%88%B0%20GitHub%20Pages%206%20%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89....%207%20%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8\">使用 Hexo+GitHub 搭建个人免费博客教程（小白向）</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41287260/article/details/97758641\">Hexo新建标签、分类、归档等页面</a></li>\n<li><a href=\"https://www.cnblogs.com/hugochen1024/p/12570656.html\">Hexo博客插入图片的方法</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>前面我用 <code>jkell</code> 弄了个Github博客，虽然能凑活着用，但还是对效果不是很满意。后面看到别人都在用Hexo的Next主题界面，看起来简洁又好看，于是在经过很长时间后（懒癌晚期），我终于下载了 <code>hexo cli</code>，尝试了一下，效果还成，这是写的第一篇博客，后面会将以前写的博客也更新上来。</p>","more":"<h1 id=\"hexo下载配置\"><a href=\"#hexo下载配置\" class=\"headerlink\" title=\"hexo下载配置\"></a>hexo下载配置</h1><p>官网： <a href=\"http://hexo.io/\">http://hexo.io</a></p>\n<p>github: <a href=\"https://github.com/hexojs/hexo\">https://github.com/hexojs/hexo</a></p>\n<ol>\n<li>安装 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></li>\n<li>在本地新建一个文件夹存放代码</li>\n<li>初始化 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure></li>\n<li>启动博客 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br><span class=\"line\"><span class=\"comment\"># or</span></span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure></li>\n<li>根据提示在浏览器输入 <code>http://localhost:4000</code> 就可以访问到本地启动的博客了。</li>\n<li>输入<code>hexo help</code>可以查看命令选项</li>\n<li>写文章 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">&#x27;your_article_name&#x27;</span></span><br></pre></td></tr></table></figure>\n 运行此命令会在 <code>hexo_project/source/_posts</code> 文件夹下建立一个新markdown文件，当然你可以不用命令，自己手动建新md文件，不过要注意最前面的标题前的格式与目前主题文章保持一致</li>\n<li>编译发布新文章 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清除以前编译的文件</span></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编译文章页面</span></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方便写法</span></span><br><span class=\"line\">hexo clean &amp;&amp; hexo generate</span><br></pre></td></tr></table></figure></li>\n<li>修改主题（以Next主题为例）<ol>\n<li>进入Hexo项目文件夹</li>\n<li>下载主题  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li>\n<li>修改站点配置文件 <code>_config.yml</code> 中的 <code>theme: landscape</code> ，改为 <code>theme: next</code></li>\n</ol>\n</li>\n<li>将博客发布到代码仓库，例如GitHub</li>\n<li>安装插件  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>\n<li>编辑项目的 <code>_config.yml</code> 文件，修改如下参数  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class=\"line\">url: https://neonatal.gitee.io/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 发布仓库</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">    <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">    repo: ssh地址 <span class=\"comment\"># 仓库的ssh地址</span></span><br><span class=\"line\">    branch: website <span class=\"comment\"># 要推送到的分支</span></span><br></pre></td></tr></table></figure>    1. 发布到代码库\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br><span class=\"line\"><span class=\"comment\"># or</span></span><br><span class=\"line\">hexo delpoy</span><br></pre></td></tr></table></figure>    2. 不出意外应该可以通过pages访问到博客界面了</li>\n<li>注：<code>GitHub</code>建立<code>Github Pages</code>仓库命名应为<code>username.github.io</code>，而<code>Gitee</code>建立<code>Gitee Pages</code>仓库应为<code>username</code>，这样就可以通过 <a href=\"https://username.github.io/\">https://username.github.io</a> 或 <a href=\"https://username.gitee.io/\">https://username.gitee.io</a> 访问了。</li>\n<li>再注：也可以将整个项目放到<code>GitHub</code>上，更推荐这样做。</li>\n</ol>\n<h1 id=\"添加标签、分类等页面\"><a href=\"#添加标签、分类等页面\" class=\"headerlink\" title=\"添加标签、分类等页面\"></a>添加标签、分类等页面</h1><p>添加页面的过程是类似的，下面以添加标签页为例：</p>\n<ol>\n<li>新建页面，用Hexo新建页面命令 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page <span class=\"string\">&quot;tages&quot;</span> </span><br></pre></td></tr></table></figure></li>\n<li>打开 <code>/source/tages/index.md</code> ，设置其类型 <code>type</code> 值为“tages” <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2021-08-20 20:14:27</span><br><span class=\"line\"><span class=\"built_in\">type</span>: <span class=\"string\">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure></li>\n<li>打开 <code>themes/your_theme/_config.yml</code> ，将对应项取消注释即可，没有的话自己添加需要的页面名称 <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">    <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span></span><br><span class=\"line\">    <span class=\"comment\">#about: /about/ || fa fa-user</span></span><br><span class=\"line\">    <span class=\"attr\">tags:</span> <span class=\"string\">/tags/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-tags</span></span><br><span class=\"line\">    <span class=\"comment\">#categories: /categories/ || fa fa-th</span></span><br><span class=\"line\">    <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h1><ol>\n<li>绝对引用<ul>\n<li>少量使用图片时可用此方法，将图片文件放入 <code>your_blog/public/images</code> 文件夹下，使用 <code>![picture](/public/images/picture.jpg)</code> 方式直接引用。</li>\n<li>存在问题：图片管理麻烦，删除文章时图片仍在，引用关系混乱</li>\n</ul>\n</li>\n<li>相对引用<ul>\n<li>在 <code>your_blog/_config.yml</code> 文件中配置 <code>post_asset_folder: true</code> ，新建文章的时候建立同名文件夹，将图片放入</li>\n<li>使用 <code>![picture](article/picture.jpg)</code> 引用图片</li>\n<li>优点：管理比较方便</li>\n</ul>\n</li>\n<li>CDN或图床引用<ul>\n<li>所使用图片在网络图库上，直接使用图片链接即可，<code>![picture](https://website.com/picture.jpg)</code></li>\n<li>缺点：可能会失效，可自己使用图床网站上传自己的图片得到链接</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/60578464#:~:text=%E4%BD%BF%E7%94%A8%20Hexo%2BGitHub%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%EF%BC%88%E5%B0%8F%E7%99%BD%E5%90%91%EF%BC%89%201%20%E5%87%86%E5%A4%87%202%20%E8%BF%9E%E6%8E%A5%20Github....,Hexo%20%E5%88%B0%20GitHub%20Pages%206%20%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89....%207%20%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8\">使用 Hexo+GitHub 搭建个人免费博客教程（小白向）</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41287260/article/details/97758641\">Hexo新建标签、分类、归档等页面</a></li>\n<li><a href=\"https://www.cnblogs.com/hugochen1024/p/12570656.html\">Hexo博客插入图片的方法</a></li>\n</ul>"},{"title":"Jekyll Blog","date":"2021-03-21T01:00:00.000Z","_content":"\n# 在GitHub上创建个人博客\n\n使用Jekyll主题并启用Github Pages服务创建个人博客\n\n<!--more-->\n\n# 参考文章\n\n* [在github上搭建个人博客并在线更新](https://www.cnblogs.com/wxyww/p/xiaoshujiang.html)\n* [jekyll主题博客](http://jekyllthemes.org/)\n* \n* [三分钟在GitHub上搭建个人博客](https://zhuanlan.zhihu.com/p/28321740)\n* [用GitHub-Pages搭建博客及Jekyll主题设置](https://xienotes.net/2020/04/25/github-pages-and-jekyll.html)","source":"_posts/jekyll-blog.md","raw":"---\ntitle: Jekyll Blog\ndate: 2021-03-21 09:00:00\ntags: \n    - 博客\ncategories:\n    - 博客\n    - Jekyll\n---\n\n# 在GitHub上创建个人博客\n\n使用Jekyll主题并启用Github Pages服务创建个人博客\n\n<!--more-->\n\n# 参考文章\n\n* [在github上搭建个人博客并在线更新](https://www.cnblogs.com/wxyww/p/xiaoshujiang.html)\n* [jekyll主题博客](http://jekyllthemes.org/)\n* \n* [三分钟在GitHub上搭建个人博客](https://zhuanlan.zhihu.com/p/28321740)\n* [用GitHub-Pages搭建博客及Jekyll主题设置](https://xienotes.net/2020/04/25/github-pages-and-jekyll.html)","slug":"jekyll-blog","published":1,"updated":"2021-08-26T06:20:56.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmb7000yfa586bbxcyl8","content":"<h1 id=\"在GitHub上创建个人博客\"><a href=\"#在GitHub上创建个人博客\" class=\"headerlink\" title=\"在GitHub上创建个人博客\"></a>在GitHub上创建个人博客</h1><p>使用Jekyll主题并启用Github Pages服务创建个人博客</p>\n<span id=\"more\"></span>\n\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><ul>\n<li><a href=\"https://www.cnblogs.com/wxyww/p/xiaoshujiang.html\">在github上搭建个人博客并在线更新</a></li>\n<li><a href=\"http://jekyllthemes.org/\">jekyll主题博客</a></li>\n<li></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/28321740\">三分钟在GitHub上搭建个人博客</a></li>\n<li><a href=\"https://xienotes.net/2020/04/25/github-pages-and-jekyll.html\">用GitHub-Pages搭建博客及Jekyll主题设置</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"在GitHub上创建个人博客\"><a href=\"#在GitHub上创建个人博客\" class=\"headerlink\" title=\"在GitHub上创建个人博客\"></a>在GitHub上创建个人博客</h1><p>使用Jekyll主题并启用Github Pages服务创建个人博客</p>","more":"<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><ul>\n<li><a href=\"https://www.cnblogs.com/wxyww/p/xiaoshujiang.html\">在github上搭建个人博客并在线更新</a></li>\n<li><a href=\"http://jekyllthemes.org/\">jekyll主题博客</a></li>\n<li></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/28321740\">三分钟在GitHub上搭建个人博客</a></li>\n<li><a href=\"https://xienotes.net/2020/04/25/github-pages-and-jekyll.html\">用GitHub-Pages搭建博客及Jekyll主题设置</a></li>\n</ul>"},{"title":"macOS开发环境搭建","date":"2021-06-05T01:00:00.000Z","_content":"\n这里记录一些开发软件的安装配置，推荐先安装好Homebrew，简单省事。\n\n<!--more-->\n\n# Java 环境搭建\n\n1. 安装 AdoptOpenJDK 11\n   \n    ```bash\n    brew install AdoptOpenJDK/openjdk/adoptopenjdk11\n    ```\n\n2. 查看安装的JDK信息\n\n    ```bash\n    # 查看Java版本\n    java -version\n    # 查看JDK安装路径\n    /usr/libexec/java_home -V\n    ```\n\n    注：homebrew下载的openjdk安装目录是`/usr/local/opt/openjdk-xx`，AdoptOpenJDK安装目录是`/Library/Java/JavaVirtualMachines/adoptopenjdk-xx`\n\n3. 参考文章\n\n    [macOS 所有版本 JDK 安装指南 (with Homebrew)](https://www.cnblogs.com/imzhizi/p/macos-jdk-installation-homebrew.html)\n\n\n# Redis\n\n1. Homebrew安装Redis\n\n   ```bash\n   brew install redis\n   ```\n\n2. 查看安装及配置文件位置\n\n   > Homebrew安装的软件会默认在`/usr/local/Cellar/`路径下\n   >\n   > redis的配置文件`redis.conf`存放在`/usr/local/etc`路径下\n\n3. 启动redis\n\n   ```bash\n   # 方式一：使用brew帮助我们启动软件\n   brew services start redis\n   # 方式二：\n   redis-server\n   ## 使用某个配置文件启动\n   redis-server /usr/local/etc/redis.conf\n   ```\n\n4. 查看redis服务进程\n\n   ```bash\n   # 通过以下命令查看redis服务是否正在运行\n   ps axu | grep redis\n   ```\n\n5. redis-cli\n\n   ```bash\n   # 启动 redis 客户端，打开终端并输入输入以下命令即可连接本地的 redis 服务\n   redis-cli\n   # redis 默认端口号6379，默认 auth 为空，可用如下命令指定 host 和 port 连接 redis\n   redis-cli -h 127.0.0.1 -p 6379\n   ```\n\n   注：连接后可执行 **PING** 命令，该命令用于检测 redis 服务是否启动，返回 **PONG**\n\n6. 关闭 redis 服务\n\n   ```bash\n   # 发送 shutdown 命令关闭 redis --right way\n   redis-cli shutdown\n   # 强行终止 redis 服务\n   sudo pkill redis-server\n   ```\n\n\n# Node.js\n\n1. 安装\n\n    ```bash\n    # 安装 nodejs\n    brew install nodejs\n    ```\n\n2. 查看安装的node.js信息\n\n    ```bash\n    # 查看node版本\n    node -v\n    # 查看npm版本号\n    npm -v\n    # 更新npm版本(安装nodejs时自动安装，当有更新时需手动更新)\n    npm -g install npm\n    ```\n\n# Vue\n\n1. 安装vue\n\n    ```bash\n    # 全局安装vue-cli\n    npm install -g @vue/cli\n    ```\n\n2. uniapp 项目\n   \n    ```bash\n    # 创建uni-app 正式版\n    vue create -p dcloudio/uni-preset-vue my-project\n    # 创建uni-app alpha版\n    vue create -p dcloudio/uni-preset-vue#alpha my-alpha-project\n\n    # 运行、发布uni-app，%PLATFORM%取值：mp-weixin 为微信小程序，h5为H5，mp-alipay为支付宝小程序，更多请见官网\n    npm run dev:%PLATFORM%\n    npm run build:%PLATFORM%\n    ```\n\n    [uni-app官网 (dcloud.io)](https://uniapp.dcloud.io)","source":"_posts/macOS开发环境搭建.md","raw":"---\ntitle: macOS开发环境搭建\ndate: 2021-06-05 09:00:00\ntags: \n    - 配置\ncategories:\n    - 配置\n---\n\n这里记录一些开发软件的安装配置，推荐先安装好Homebrew，简单省事。\n\n<!--more-->\n\n# Java 环境搭建\n\n1. 安装 AdoptOpenJDK 11\n   \n    ```bash\n    brew install AdoptOpenJDK/openjdk/adoptopenjdk11\n    ```\n\n2. 查看安装的JDK信息\n\n    ```bash\n    # 查看Java版本\n    java -version\n    # 查看JDK安装路径\n    /usr/libexec/java_home -V\n    ```\n\n    注：homebrew下载的openjdk安装目录是`/usr/local/opt/openjdk-xx`，AdoptOpenJDK安装目录是`/Library/Java/JavaVirtualMachines/adoptopenjdk-xx`\n\n3. 参考文章\n\n    [macOS 所有版本 JDK 安装指南 (with Homebrew)](https://www.cnblogs.com/imzhizi/p/macos-jdk-installation-homebrew.html)\n\n\n# Redis\n\n1. Homebrew安装Redis\n\n   ```bash\n   brew install redis\n   ```\n\n2. 查看安装及配置文件位置\n\n   > Homebrew安装的软件会默认在`/usr/local/Cellar/`路径下\n   >\n   > redis的配置文件`redis.conf`存放在`/usr/local/etc`路径下\n\n3. 启动redis\n\n   ```bash\n   # 方式一：使用brew帮助我们启动软件\n   brew services start redis\n   # 方式二：\n   redis-server\n   ## 使用某个配置文件启动\n   redis-server /usr/local/etc/redis.conf\n   ```\n\n4. 查看redis服务进程\n\n   ```bash\n   # 通过以下命令查看redis服务是否正在运行\n   ps axu | grep redis\n   ```\n\n5. redis-cli\n\n   ```bash\n   # 启动 redis 客户端，打开终端并输入输入以下命令即可连接本地的 redis 服务\n   redis-cli\n   # redis 默认端口号6379，默认 auth 为空，可用如下命令指定 host 和 port 连接 redis\n   redis-cli -h 127.0.0.1 -p 6379\n   ```\n\n   注：连接后可执行 **PING** 命令，该命令用于检测 redis 服务是否启动，返回 **PONG**\n\n6. 关闭 redis 服务\n\n   ```bash\n   # 发送 shutdown 命令关闭 redis --right way\n   redis-cli shutdown\n   # 强行终止 redis 服务\n   sudo pkill redis-server\n   ```\n\n\n# Node.js\n\n1. 安装\n\n    ```bash\n    # 安装 nodejs\n    brew install nodejs\n    ```\n\n2. 查看安装的node.js信息\n\n    ```bash\n    # 查看node版本\n    node -v\n    # 查看npm版本号\n    npm -v\n    # 更新npm版本(安装nodejs时自动安装，当有更新时需手动更新)\n    npm -g install npm\n    ```\n\n# Vue\n\n1. 安装vue\n\n    ```bash\n    # 全局安装vue-cli\n    npm install -g @vue/cli\n    ```\n\n2. uniapp 项目\n   \n    ```bash\n    # 创建uni-app 正式版\n    vue create -p dcloudio/uni-preset-vue my-project\n    # 创建uni-app alpha版\n    vue create -p dcloudio/uni-preset-vue#alpha my-alpha-project\n\n    # 运行、发布uni-app，%PLATFORM%取值：mp-weixin 为微信小程序，h5为H5，mp-alipay为支付宝小程序，更多请见官网\n    npm run dev:%PLATFORM%\n    npm run build:%PLATFORM%\n    ```\n\n    [uni-app官网 (dcloud.io)](https://uniapp.dcloud.io)","slug":"macOS开发环境搭建","published":1,"updated":"2021-08-26T06:20:56.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmb80012fa583yafczvy","content":"<p>这里记录一些开发软件的安装配置，推荐先安装好Homebrew，简单省事。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"Java-环境搭建\"><a href=\"#Java-环境搭建\" class=\"headerlink\" title=\"Java 环境搭建\"></a>Java 环境搭建</h1><ol>\n<li><p>安装 AdoptOpenJDK 11</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install AdoptOpenJDK/openjdk/adoptopenjdk11</span><br></pre></td></tr></table></figure></li>\n<li><p>查看安装的JDK信息</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看Java版本</span></span><br><span class=\"line\">java -version</span><br><span class=\"line\"><span class=\"comment\"># 查看JDK安装路径</span></span><br><span class=\"line\">/usr/libexec/java_home -V</span><br></pre></td></tr></table></figure>\n\n<p> 注：homebrew下载的openjdk安装目录是<code>/usr/local/opt/openjdk-xx</code>，AdoptOpenJDK安装目录是<code>/Library/Java/JavaVirtualMachines/adoptopenjdk-xx</code></p>\n</li>\n<li><p>参考文章</p>\n<p> <a href=\"https://www.cnblogs.com/imzhizi/p/macos-jdk-installation-homebrew.html\">macOS 所有版本 JDK 安装指南 (with Homebrew)</a></p>\n</li>\n</ol>\n<h1 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h1><ol>\n<li><p>Homebrew安装Redis</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install redis</span><br></pre></td></tr></table></figure></li>\n<li><p>查看安装及配置文件位置</p>\n<blockquote>\n<p>Homebrew安装的软件会默认在<code>/usr/local/Cellar/</code>路径下</p>\n<p>redis的配置文件<code>redis.conf</code>存放在<code>/usr/local/etc</code>路径下</p>\n</blockquote>\n</li>\n<li><p>启动redis</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方式一：使用brew帮助我们启动软件</span></span><br><span class=\"line\">brew services start redis</span><br><span class=\"line\"><span class=\"comment\"># 方式二：</span></span><br><span class=\"line\">redis-server</span><br><span class=\"line\"><span class=\"comment\">## 使用某个配置文件启动</span></span><br><span class=\"line\">redis-server /usr/<span class=\"built_in\">local</span>/etc/redis.conf</span><br></pre></td></tr></table></figure></li>\n<li><p>查看redis服务进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过以下命令查看redis服务是否正在运行</span></span><br><span class=\"line\">ps axu | grep redis</span><br></pre></td></tr></table></figure></li>\n<li><p>redis-cli</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动 redis 客户端，打开终端并输入输入以下命令即可连接本地的 redis 服务</span></span><br><span class=\"line\">redis-cli</span><br><span class=\"line\"><span class=\"comment\"># redis 默认端口号6379，默认 auth 为空，可用如下命令指定 host 和 port 连接 redis</span></span><br><span class=\"line\">redis-cli -h 127.0.0.1 -p 6379</span><br></pre></td></tr></table></figure>\n\n<p>注：连接后可执行 <strong>PING</strong> 命令，该命令用于检测 redis 服务是否启动，返回 <strong>PONG</strong></p>\n</li>\n<li><p>关闭 redis 服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 发送 shutdown 命令关闭 redis --right way</span></span><br><span class=\"line\">redis-cli shutdown</span><br><span class=\"line\"><span class=\"comment\"># 强行终止 redis 服务</span></span><br><span class=\"line\">sudo pkill redis-server</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"Node-js\"><a href=\"#Node-js\" class=\"headerlink\" title=\"Node.js\"></a>Node.js</h1><ol>\n<li><p>安装</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 nodejs</span></span><br><span class=\"line\">brew install nodejs</span><br></pre></td></tr></table></figure></li>\n<li><p>查看安装的node.js信息</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看node版本</span></span><br><span class=\"line\">node -v</span><br><span class=\"line\"><span class=\"comment\"># 查看npm版本号</span></span><br><span class=\"line\">npm -v</span><br><span class=\"line\"><span class=\"comment\"># 更新npm版本(安装nodejs时自动安装，当有更新时需手动更新)</span></span><br><span class=\"line\">npm -g install npm</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h1><ol>\n<li><p>安装vue</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局安装vue-cli</span></span><br><span class=\"line\">npm install -g @vue/cli</span><br></pre></td></tr></table></figure></li>\n<li><p>uniapp 项目</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建uni-app 正式版</span></span><br><span class=\"line\">vue create -p dcloudio/uni-preset-vue my-project</span><br><span class=\"line\"><span class=\"comment\"># 创建uni-app alpha版</span></span><br><span class=\"line\">vue create -p dcloudio/uni-preset-vue<span class=\"comment\">#alpha my-alpha-project</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行、发布uni-app，%PLATFORM%取值：mp-weixin 为微信小程序，h5为H5，mp-alipay为支付宝小程序，更多请见官网</span></span><br><span class=\"line\">npm run dev:%PLATFORM%</span><br><span class=\"line\">npm run build:%PLATFORM%</span><br></pre></td></tr></table></figure>\n\n<p> <a href=\"https://uniapp.dcloud.io/\">uni-app官网 (dcloud.io)</a></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>这里记录一些开发软件的安装配置，推荐先安装好Homebrew，简单省事。</p>","more":"<h1 id=\"Java-环境搭建\"><a href=\"#Java-环境搭建\" class=\"headerlink\" title=\"Java 环境搭建\"></a>Java 环境搭建</h1><ol>\n<li><p>安装 AdoptOpenJDK 11</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install AdoptOpenJDK/openjdk/adoptopenjdk11</span><br></pre></td></tr></table></figure></li>\n<li><p>查看安装的JDK信息</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看Java版本</span></span><br><span class=\"line\">java -version</span><br><span class=\"line\"><span class=\"comment\"># 查看JDK安装路径</span></span><br><span class=\"line\">/usr/libexec/java_home -V</span><br></pre></td></tr></table></figure>\n\n<p> 注：homebrew下载的openjdk安装目录是<code>/usr/local/opt/openjdk-xx</code>，AdoptOpenJDK安装目录是<code>/Library/Java/JavaVirtualMachines/adoptopenjdk-xx</code></p>\n</li>\n<li><p>参考文章</p>\n<p> <a href=\"https://www.cnblogs.com/imzhizi/p/macos-jdk-installation-homebrew.html\">macOS 所有版本 JDK 安装指南 (with Homebrew)</a></p>\n</li>\n</ol>\n<h1 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h1><ol>\n<li><p>Homebrew安装Redis</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install redis</span><br></pre></td></tr></table></figure></li>\n<li><p>查看安装及配置文件位置</p>\n<blockquote>\n<p>Homebrew安装的软件会默认在<code>/usr/local/Cellar/</code>路径下</p>\n<p>redis的配置文件<code>redis.conf</code>存放在<code>/usr/local/etc</code>路径下</p>\n</blockquote>\n</li>\n<li><p>启动redis</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方式一：使用brew帮助我们启动软件</span></span><br><span class=\"line\">brew services start redis</span><br><span class=\"line\"><span class=\"comment\"># 方式二：</span></span><br><span class=\"line\">redis-server</span><br><span class=\"line\"><span class=\"comment\">## 使用某个配置文件启动</span></span><br><span class=\"line\">redis-server /usr/<span class=\"built_in\">local</span>/etc/redis.conf</span><br></pre></td></tr></table></figure></li>\n<li><p>查看redis服务进程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过以下命令查看redis服务是否正在运行</span></span><br><span class=\"line\">ps axu | grep redis</span><br></pre></td></tr></table></figure></li>\n<li><p>redis-cli</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动 redis 客户端，打开终端并输入输入以下命令即可连接本地的 redis 服务</span></span><br><span class=\"line\">redis-cli</span><br><span class=\"line\"><span class=\"comment\"># redis 默认端口号6379，默认 auth 为空，可用如下命令指定 host 和 port 连接 redis</span></span><br><span class=\"line\">redis-cli -h 127.0.0.1 -p 6379</span><br></pre></td></tr></table></figure>\n\n<p>注：连接后可执行 <strong>PING</strong> 命令，该命令用于检测 redis 服务是否启动，返回 <strong>PONG</strong></p>\n</li>\n<li><p>关闭 redis 服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 发送 shutdown 命令关闭 redis --right way</span></span><br><span class=\"line\">redis-cli shutdown</span><br><span class=\"line\"><span class=\"comment\"># 强行终止 redis 服务</span></span><br><span class=\"line\">sudo pkill redis-server</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"Node-js\"><a href=\"#Node-js\" class=\"headerlink\" title=\"Node.js\"></a>Node.js</h1><ol>\n<li><p>安装</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 nodejs</span></span><br><span class=\"line\">brew install nodejs</span><br></pre></td></tr></table></figure></li>\n<li><p>查看安装的node.js信息</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看node版本</span></span><br><span class=\"line\">node -v</span><br><span class=\"line\"><span class=\"comment\"># 查看npm版本号</span></span><br><span class=\"line\">npm -v</span><br><span class=\"line\"><span class=\"comment\"># 更新npm版本(安装nodejs时自动安装，当有更新时需手动更新)</span></span><br><span class=\"line\">npm -g install npm</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h1><ol>\n<li><p>安装vue</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局安装vue-cli</span></span><br><span class=\"line\">npm install -g @vue/cli</span><br></pre></td></tr></table></figure></li>\n<li><p>uniapp 项目</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建uni-app 正式版</span></span><br><span class=\"line\">vue create -p dcloudio/uni-preset-vue my-project</span><br><span class=\"line\"><span class=\"comment\"># 创建uni-app alpha版</span></span><br><span class=\"line\">vue create -p dcloudio/uni-preset-vue<span class=\"comment\">#alpha my-alpha-project</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行、发布uni-app，%PLATFORM%取值：mp-weixin 为微信小程序，h5为H5，mp-alipay为支付宝小程序，更多请见官网</span></span><br><span class=\"line\">npm run dev:%PLATFORM%</span><br><span class=\"line\">npm run build:%PLATFORM%</span><br></pre></td></tr></table></figure>\n\n<p> <a href=\"https://uniapp.dcloud.io/\">uni-app官网 (dcloud.io)</a></p>\n</li>\n</ol>"},{"title":"macOS配置","date":"2021-05-29T13:00:00.000Z","_content":"\n这里记录一下我使用macOS时做的一些配置。\n\n<!--more-->\n\n# Homebrew\n\n​\tHomebrew 是mac的包管理器，仅需执行相应的命令,就能下载安装需要的软件包，可以省掉自己去下载、解压、拖拽(安装)等繁琐的步骤。\n\n> Homebrew 官方文档 https://brew.sh/\n\n## 安装\n\n```bash\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"\n```\n\n可能会报 `bash curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused` 错误，建议换成 brew 镜像安装脚本。\n\n```bash\n/bin/bash -c \"$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install.sh)\"\n```\n\n## 配置\n\n​\tHomebrew 安装软件时非常慢。为了提升安装速度，需要更改 Homebrew 的安装源，将其替换成国内镜像。\n​\t这里用的是由中科大负责托管维护的 Homebrew 镜像。其中，前两个为必须配置的项目，后两个可按需配置。\n\n* 替换 brew.git ：\n\n  ```bash\n  git -C \"$(brew --repo)\" remote set-url origin https://mirrors.ustc.edu.cn/brew.git\n  ```\n\n* 替换 homebrew-core.git ：\n\n  ```bash\n  git -C \"$(brew --repo homebrew/core)\" remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git\n  ```\n\n* 替换 homebrew-cask.git ：\n\n  ```bash\n  git -C \"$(brew --repo homebrew/cask)\" remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git\n  ```\n\n* 替换 homebrew-bottles ：\n\n  根据使用的终端修改。\n\n  若是bash，则执行：\n\n  ```bash\n  echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' >> ~/.bash_profile\n  \n  source ~/.bash_profile\n  ```\n\n  若是zsh，则执行：\n\n  ```bash\n  echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' >> ~/.zshrc\n  \n  source ~/.zshrc\n  ```\n\n  这样Homebrew配置就完成了\n\n## 使用\n\n```bash\n// 查询：\nbrew search 软件名\n// 安装：\nbrew install 软件名\n// 卸载：\nbrew uninstall 软件名\n// 更新 Homebrew：\nbrew update \n// 查看 Homebrew 配置信息：\nbrew config \n```\n\n使用官方脚本同样会遇到uninstall地址无法访问问题，可以替换为下面脚本：\n\n```bash\n/bin/bash -c \"$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/uninstall)\"\n```\n\n# 配置使用zsh和oh-my-zsh\n\nMac 终端默认 shell 为 bash，可配置为其他，我更喜欢zsh一点。\n\n查看当前使用的shell\n\n```bash\necho $SHELL\n```\n\n查看安装的shell\n\n```bash\ncat /etc/shells\n```\n\n## 安装zsh\n\n执行：\n\n```bash\nbrew install zsh\n```\n\n切换终端为zsh：\n\n```\nchsh -s /bin/zsh\n```\n\n重启终端即可使用zsh\n\n## 安装oh-my-zsh\n\n执行：\n\n```bash\nsh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n```\n\n打开配置文件，可配置主题等\n\n```bash\nvim ~/.zshrc\n```\n\n更新配置\n\n```bash\nsource ~/.zshrc\n```\n\n查看zsh的主题，[oh-my-zsh Themes](https://github.com/ohmyzsh/ohmyzsh/wiki/Themes)\n\n```bash\ncd ~/.oh-my-zsh/themes && ls\n```\n\n查看当前使用主题名称（设置主题为random时可查看当前随机到的主题名称）\n\n```bash\necho $ZSH_THEME\n```\n\n查看自带插件\n\n```bash\ncd ~/.oh-my-zsh/plugins && ls\n```\n\n安装高亮语法插件\n\n```bash\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n\n# 在配置文件中添加 `plugins=(zsh-syntax-highlighting)`\n# zsh-syntax-highlighting 官方推荐放在最后面 各插件之间用空格隔开\n```\n\n安装根据历史输入指令的记录即时的提示的插件\n\n```bash\ngit clone git://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n\n# `plugins=(git zsh-autosuggestions)`\n```\n\n注：报 “Insecure completion-dependent directories detected“ 错误解决办法\n\n\n这是由于 `/usr/local/share/zsh` `/usr/local/share/zsh/site-functions` 这两个目录没有权限，给这个两个目录赋权就可以了。[issue](https://github.com/robbyrussell/oh-my-zsh/issues/6835)\n\n```bash\nchmod 755 /usr/local/share/zsh\n\nchmod 755 /usr/local/share/zsh/site-functions\n```\n\n# 配置使用Git\n\n查看用户名和邮箱\n\n```bash\ngit config user.name\n\ngit config user.email\n```\n\n配置用户名和邮箱\n\n```bash\ngit config --global user.name \"username\"\n\ngit config --global user.email \"email\"\n```\n\n查看配置文件的位置，Git会优先使用库级别的配置，再然后是global级别的配置，最后是system级别的配置\n\n```bash\n# /etc/gitconfig\n# 系统级别的配置，适用于所有的用户和所有的库，存储在Git安装目录下，可以使用如下开头指令指定和修改\ngit config --system\n```\n\n```bash\n# ~/.gitconfig\n# 用户级别的配置，适用于当前登录的用户，存储在用户目录下，可以使用如下开头指令指定和修改\ngit config --gloabal\n```\n\n```bash\n# .git/config\n# 库级别的配置，适用于某个具体的库，存储在具体的库隐藏的.git文件夹下，可以使用如下开头指令指定和修改\ngit config\n```\n\n# Tips\n\n* 取消更新小红点\n\n  1. 在配置中取消勾选自动检查更新\n\n  2. 终端执行如下两条指令\n\n     ```bash\n     defaults write com.apple.systempreferences AttentionPrefBundleIDs 0\n     \n     killall Dock\n     ```\n\n  3. 屏蔽网络访问，编辑host文件\n\n     ```bash\n     127.0.0.1 \tswscan.apple.com\n     127.0.0.1 \tswcdn.apple.com\n     127.0.0.1 \tswdist.apple.com\n     ```\n\n* 查看隐藏文件\n\n  1. 快捷键 command+shift+.\n\n  2. 命令行：\n    ```bash\n     # 显示文件夹\n     defaults write com.apple.finder AppleShowAllFiles TRUE\n     # 重启finder\n     killall Finder\n     \n     # 隐藏文件夹\n     defaults write com.apple.finder AppleShowAllFiles FALSE\n     # 重启finder\n     killall Finder\n     ```","source":"_posts/macOS配置.md","raw":"---\ntitle: macOS配置\ndate: 2021-05-29 21:00:00\ntags: \n    - 配置\ncategories:\n    - 配置\n---\n\n这里记录一下我使用macOS时做的一些配置。\n\n<!--more-->\n\n# Homebrew\n\n​\tHomebrew 是mac的包管理器，仅需执行相应的命令,就能下载安装需要的软件包，可以省掉自己去下载、解压、拖拽(安装)等繁琐的步骤。\n\n> Homebrew 官方文档 https://brew.sh/\n\n## 安装\n\n```bash\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"\n```\n\n可能会报 `bash curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused` 错误，建议换成 brew 镜像安装脚本。\n\n```bash\n/bin/bash -c \"$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install.sh)\"\n```\n\n## 配置\n\n​\tHomebrew 安装软件时非常慢。为了提升安装速度，需要更改 Homebrew 的安装源，将其替换成国内镜像。\n​\t这里用的是由中科大负责托管维护的 Homebrew 镜像。其中，前两个为必须配置的项目，后两个可按需配置。\n\n* 替换 brew.git ：\n\n  ```bash\n  git -C \"$(brew --repo)\" remote set-url origin https://mirrors.ustc.edu.cn/brew.git\n  ```\n\n* 替换 homebrew-core.git ：\n\n  ```bash\n  git -C \"$(brew --repo homebrew/core)\" remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git\n  ```\n\n* 替换 homebrew-cask.git ：\n\n  ```bash\n  git -C \"$(brew --repo homebrew/cask)\" remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git\n  ```\n\n* 替换 homebrew-bottles ：\n\n  根据使用的终端修改。\n\n  若是bash，则执行：\n\n  ```bash\n  echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' >> ~/.bash_profile\n  \n  source ~/.bash_profile\n  ```\n\n  若是zsh，则执行：\n\n  ```bash\n  echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' >> ~/.zshrc\n  \n  source ~/.zshrc\n  ```\n\n  这样Homebrew配置就完成了\n\n## 使用\n\n```bash\n// 查询：\nbrew search 软件名\n// 安装：\nbrew install 软件名\n// 卸载：\nbrew uninstall 软件名\n// 更新 Homebrew：\nbrew update \n// 查看 Homebrew 配置信息：\nbrew config \n```\n\n使用官方脚本同样会遇到uninstall地址无法访问问题，可以替换为下面脚本：\n\n```bash\n/bin/bash -c \"$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/uninstall)\"\n```\n\n# 配置使用zsh和oh-my-zsh\n\nMac 终端默认 shell 为 bash，可配置为其他，我更喜欢zsh一点。\n\n查看当前使用的shell\n\n```bash\necho $SHELL\n```\n\n查看安装的shell\n\n```bash\ncat /etc/shells\n```\n\n## 安装zsh\n\n执行：\n\n```bash\nbrew install zsh\n```\n\n切换终端为zsh：\n\n```\nchsh -s /bin/zsh\n```\n\n重启终端即可使用zsh\n\n## 安装oh-my-zsh\n\n执行：\n\n```bash\nsh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n```\n\n打开配置文件，可配置主题等\n\n```bash\nvim ~/.zshrc\n```\n\n更新配置\n\n```bash\nsource ~/.zshrc\n```\n\n查看zsh的主题，[oh-my-zsh Themes](https://github.com/ohmyzsh/ohmyzsh/wiki/Themes)\n\n```bash\ncd ~/.oh-my-zsh/themes && ls\n```\n\n查看当前使用主题名称（设置主题为random时可查看当前随机到的主题名称）\n\n```bash\necho $ZSH_THEME\n```\n\n查看自带插件\n\n```bash\ncd ~/.oh-my-zsh/plugins && ls\n```\n\n安装高亮语法插件\n\n```bash\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n\n# 在配置文件中添加 `plugins=(zsh-syntax-highlighting)`\n# zsh-syntax-highlighting 官方推荐放在最后面 各插件之间用空格隔开\n```\n\n安装根据历史输入指令的记录即时的提示的插件\n\n```bash\ngit clone git://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n\n# `plugins=(git zsh-autosuggestions)`\n```\n\n注：报 “Insecure completion-dependent directories detected“ 错误解决办法\n\n\n这是由于 `/usr/local/share/zsh` `/usr/local/share/zsh/site-functions` 这两个目录没有权限，给这个两个目录赋权就可以了。[issue](https://github.com/robbyrussell/oh-my-zsh/issues/6835)\n\n```bash\nchmod 755 /usr/local/share/zsh\n\nchmod 755 /usr/local/share/zsh/site-functions\n```\n\n# 配置使用Git\n\n查看用户名和邮箱\n\n```bash\ngit config user.name\n\ngit config user.email\n```\n\n配置用户名和邮箱\n\n```bash\ngit config --global user.name \"username\"\n\ngit config --global user.email \"email\"\n```\n\n查看配置文件的位置，Git会优先使用库级别的配置，再然后是global级别的配置，最后是system级别的配置\n\n```bash\n# /etc/gitconfig\n# 系统级别的配置，适用于所有的用户和所有的库，存储在Git安装目录下，可以使用如下开头指令指定和修改\ngit config --system\n```\n\n```bash\n# ~/.gitconfig\n# 用户级别的配置，适用于当前登录的用户，存储在用户目录下，可以使用如下开头指令指定和修改\ngit config --gloabal\n```\n\n```bash\n# .git/config\n# 库级别的配置，适用于某个具体的库，存储在具体的库隐藏的.git文件夹下，可以使用如下开头指令指定和修改\ngit config\n```\n\n# Tips\n\n* 取消更新小红点\n\n  1. 在配置中取消勾选自动检查更新\n\n  2. 终端执行如下两条指令\n\n     ```bash\n     defaults write com.apple.systempreferences AttentionPrefBundleIDs 0\n     \n     killall Dock\n     ```\n\n  3. 屏蔽网络访问，编辑host文件\n\n     ```bash\n     127.0.0.1 \tswscan.apple.com\n     127.0.0.1 \tswcdn.apple.com\n     127.0.0.1 \tswdist.apple.com\n     ```\n\n* 查看隐藏文件\n\n  1. 快捷键 command+shift+.\n\n  2. 命令行：\n    ```bash\n     # 显示文件夹\n     defaults write com.apple.finder AppleShowAllFiles TRUE\n     # 重启finder\n     killall Finder\n     \n     # 隐藏文件夹\n     defaults write com.apple.finder AppleShowAllFiles FALSE\n     # 重启finder\n     killall Finder\n     ```","slug":"macOS配置","published":1,"updated":"2021-08-26T06:20:56.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmb90014fa58a73sgv8y","content":"<p>这里记录一下我使用macOS时做的一些配置。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"Homebrew\"><a href=\"#Homebrew\" class=\"headerlink\" title=\"Homebrew\"></a>Homebrew</h1><p>​    Homebrew 是mac的包管理器，仅需执行相应的命令,就能下载安装需要的软件包，可以省掉自己去下载、解压、拖拽(安装)等繁琐的步骤。</p>\n<blockquote>\n<p>Homebrew 官方文档 <a href=\"https://brew.sh/\">https://brew.sh/</a></p>\n</blockquote>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>可能会报 <code>bash curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused</code> 错误，建议换成 brew 镜像安装脚本。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>​    Homebrew 安装软件时非常慢。为了提升安装速度，需要更改 Homebrew 的安装源，将其替换成国内镜像。<br>​    这里用的是由中科大负责托管维护的 Homebrew 镜像。其中，前两个为必须配置的项目，后两个可按需配置。</p>\n<ul>\n<li><p>替换 brew.git ：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git -C <span class=\"string\">&quot;<span class=\"subst\">$(brew --repo)</span>&quot;</span> remote set-url origin https://mirrors.ustc.edu.cn/brew.git</span><br></pre></td></tr></table></figure></li>\n<li><p>替换 homebrew-core.git ：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git -C <span class=\"string\">&quot;<span class=\"subst\">$(brew --repo homebrew/core)</span>&quot;</span> remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br></pre></td></tr></table></figure></li>\n<li><p>替换 homebrew-cask.git ：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git -C <span class=\"string\">&quot;<span class=\"subst\">$(brew --repo homebrew/cask)</span>&quot;</span> remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git</span><br></pre></td></tr></table></figure></li>\n<li><p>替换 homebrew-bottles ：</p>\n<p>根据使用的终端修改。</p>\n<p>若是bash，则执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#x27;</span> &gt;&gt; ~/.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<p>若是zsh，则执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n\n<p>这样Homebrew配置就完成了</p>\n</li>\n</ul>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 查询：</span><br><span class=\"line\">brew search 软件名</span><br><span class=\"line\">// 安装：</span><br><span class=\"line\">brew install 软件名</span><br><span class=\"line\">// 卸载：</span><br><span class=\"line\">brew uninstall 软件名</span><br><span class=\"line\">// 更新 Homebrew：</span><br><span class=\"line\">brew update </span><br><span class=\"line\">// 查看 Homebrew 配置信息：</span><br><span class=\"line\">brew config </span><br></pre></td></tr></table></figure>\n\n<p>使用官方脚本同样会遇到uninstall地址无法访问问题，可以替换为下面脚本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/uninstall)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置使用zsh和oh-my-zsh\"><a href=\"#配置使用zsh和oh-my-zsh\" class=\"headerlink\" title=\"配置使用zsh和oh-my-zsh\"></a>配置使用zsh和oh-my-zsh</h1><p>Mac 终端默认 shell 为 bash，可配置为其他，我更喜欢zsh一点。</p>\n<p>查看当前使用的shell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$SHELL</span></span><br></pre></td></tr></table></figure>\n\n<p>查看安装的shell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/shells</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装zsh\"><a href=\"#安装zsh\" class=\"headerlink\" title=\"安装zsh\"></a>安装zsh</h2><p>执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install zsh</span><br></pre></td></tr></table></figure>\n\n<p>切换终端为zsh：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure>\n\n<p>重启终端即可使用zsh</p>\n<h2 id=\"安装oh-my-zsh\"><a href=\"#安装oh-my-zsh\" class=\"headerlink\" title=\"安装oh-my-zsh\"></a>安装oh-my-zsh</h2><p>执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>打开配置文件，可配置主题等</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.zshrc</span><br></pre></td></tr></table></figure>\n\n<p>更新配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n\n<p>查看zsh的主题，<a href=\"https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\">oh-my-zsh Themes</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.oh-my-zsh/themes &amp;&amp; ls</span><br></pre></td></tr></table></figure>\n\n<p>查看当前使用主题名称（设置主题为random时可查看当前随机到的主题名称）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$ZSH_THEME</span></span><br></pre></td></tr></table></figure>\n\n<p>查看自带插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.oh-my-zsh/plugins &amp;&amp; ls</span><br></pre></td></tr></table></figure>\n\n<p>安装高亮语法插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class=\"variable\">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在配置文件中添加 `plugins=(zsh-syntax-highlighting)`</span></span><br><span class=\"line\"><span class=\"comment\"># zsh-syntax-highlighting 官方推荐放在最后面 各插件之间用空格隔开</span></span><br></pre></td></tr></table></figure>\n\n<p>安装根据历史输入指令的记录即时的提示的插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> git://github.com/zsh-users/zsh-autosuggestions <span class=\"variable\">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># `plugins=(git zsh-autosuggestions)`</span></span><br></pre></td></tr></table></figure>\n\n<p>注：报 “Insecure completion-dependent directories detected“ 错误解决办法</p>\n<p>这是由于 <code>/usr/local/share/zsh</code> <code>/usr/local/share/zsh/site-functions</code> 这两个目录没有权限，给这个两个目录赋权就可以了。<a href=\"https://github.com/robbyrussell/oh-my-zsh/issues/6835\">issue</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 /usr/<span class=\"built_in\">local</span>/share/zsh</span><br><span class=\"line\"></span><br><span class=\"line\">chmod 755 /usr/<span class=\"built_in\">local</span>/share/zsh/site-functions</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置使用Git\"><a href=\"#配置使用Git\" class=\"headerlink\" title=\"配置使用Git\"></a>配置使用Git</h1><p>查看用户名和邮箱</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config user.name</span><br><span class=\"line\"></span><br><span class=\"line\">git config user.email</span><br></pre></td></tr></table></figure>\n\n<p>配置用户名和邮箱</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;username&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;email&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>查看配置文件的位置，Git会优先使用库级别的配置，再然后是global级别的配置，最后是system级别的配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /etc/gitconfig</span></span><br><span class=\"line\"><span class=\"comment\"># 系统级别的配置，适用于所有的用户和所有的库，存储在Git安装目录下，可以使用如下开头指令指定和修改</span></span><br><span class=\"line\">git config --system</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ~/.gitconfig</span></span><br><span class=\"line\"><span class=\"comment\"># 用户级别的配置，适用于当前登录的用户，存储在用户目录下，可以使用如下开头指令指定和修改</span></span><br><span class=\"line\">git config --gloabal</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># .git/config</span></span><br><span class=\"line\"><span class=\"comment\"># 库级别的配置，适用于某个具体的库，存储在具体的库隐藏的.git文件夹下，可以使用如下开头指令指定和修改</span></span><br><span class=\"line\">git config</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips\"></a>Tips</h1><ul>\n<li><p>取消更新小红点</p>\n<ol>\n<li><p>在配置中取消勾选自动检查更新</p>\n</li>\n<li><p>终端执行如下两条指令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.systempreferences AttentionPrefBundleIDs 0</span><br><span class=\"line\"></span><br><span class=\"line\">killall Dock</span><br></pre></td></tr></table></figure></li>\n<li><p>屏蔽网络访问，编辑host文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1 \tswscan.apple.com</span><br><span class=\"line\">127.0.0.1 \tswcdn.apple.com</span><br><span class=\"line\">127.0.0.1 \tswdist.apple.com</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>查看隐藏文件</p>\n<ol>\n<li><p>快捷键 command+shift+.</p>\n</li>\n<li><p>命令行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示文件夹</span></span><br><span class=\"line\">defaults write com.apple.finder AppleShowAllFiles TRUE</span><br><span class=\"line\"><span class=\"comment\"># 重启finder</span></span><br><span class=\"line\">killall Finder</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 隐藏文件夹</span></span><br><span class=\"line\">defaults write com.apple.finder AppleShowAllFiles FALSE</span><br><span class=\"line\"><span class=\"comment\"># 重启finder</span></span><br><span class=\"line\">killall Finder</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>这里记录一下我使用macOS时做的一些配置。</p>","more":"<h1 id=\"Homebrew\"><a href=\"#Homebrew\" class=\"headerlink\" title=\"Homebrew\"></a>Homebrew</h1><p>​    Homebrew 是mac的包管理器，仅需执行相应的命令,就能下载安装需要的软件包，可以省掉自己去下载、解压、拖拽(安装)等繁琐的步骤。</p>\n<blockquote>\n<p>Homebrew 官方文档 <a href=\"https://brew.sh/\">https://brew.sh/</a></p>\n</blockquote>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>可能会报 <code>bash curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused</code> 错误，建议换成 brew 镜像安装脚本。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>​    Homebrew 安装软件时非常慢。为了提升安装速度，需要更改 Homebrew 的安装源，将其替换成国内镜像。<br>​    这里用的是由中科大负责托管维护的 Homebrew 镜像。其中，前两个为必须配置的项目，后两个可按需配置。</p>\n<ul>\n<li><p>替换 brew.git ：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git -C <span class=\"string\">&quot;<span class=\"subst\">$(brew --repo)</span>&quot;</span> remote set-url origin https://mirrors.ustc.edu.cn/brew.git</span><br></pre></td></tr></table></figure></li>\n<li><p>替换 homebrew-core.git ：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git -C <span class=\"string\">&quot;<span class=\"subst\">$(brew --repo homebrew/core)</span>&quot;</span> remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br></pre></td></tr></table></figure></li>\n<li><p>替换 homebrew-cask.git ：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git -C <span class=\"string\">&quot;<span class=\"subst\">$(brew --repo homebrew/cask)</span>&quot;</span> remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git</span><br></pre></td></tr></table></figure></li>\n<li><p>替换 homebrew-bottles ：</p>\n<p>根据使用的终端修改。</p>\n<p>若是bash，则执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#x27;</span> &gt;&gt; ~/.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<p>若是zsh，则执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n\n<p>这样Homebrew配置就完成了</p>\n</li>\n</ul>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 查询：</span><br><span class=\"line\">brew search 软件名</span><br><span class=\"line\">// 安装：</span><br><span class=\"line\">brew install 软件名</span><br><span class=\"line\">// 卸载：</span><br><span class=\"line\">brew uninstall 软件名</span><br><span class=\"line\">// 更新 Homebrew：</span><br><span class=\"line\">brew update </span><br><span class=\"line\">// 查看 Homebrew 配置信息：</span><br><span class=\"line\">brew config </span><br></pre></td></tr></table></figure>\n\n<p>使用官方脚本同样会遇到uninstall地址无法访问问题，可以替换为下面脚本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/uninstall)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置使用zsh和oh-my-zsh\"><a href=\"#配置使用zsh和oh-my-zsh\" class=\"headerlink\" title=\"配置使用zsh和oh-my-zsh\"></a>配置使用zsh和oh-my-zsh</h1><p>Mac 终端默认 shell 为 bash，可配置为其他，我更喜欢zsh一点。</p>\n<p>查看当前使用的shell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$SHELL</span></span><br></pre></td></tr></table></figure>\n\n<p>查看安装的shell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/shells</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装zsh\"><a href=\"#安装zsh\" class=\"headerlink\" title=\"安装zsh\"></a>安装zsh</h2><p>执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install zsh</span><br></pre></td></tr></table></figure>\n\n<p>切换终端为zsh：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure>\n\n<p>重启终端即可使用zsh</p>\n<h2 id=\"安装oh-my-zsh\"><a href=\"#安装oh-my-zsh\" class=\"headerlink\" title=\"安装oh-my-zsh\"></a>安装oh-my-zsh</h2><p>执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>打开配置文件，可配置主题等</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.zshrc</span><br></pre></td></tr></table></figure>\n\n<p>更新配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>\n\n<p>查看zsh的主题，<a href=\"https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\">oh-my-zsh Themes</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.oh-my-zsh/themes &amp;&amp; ls</span><br></pre></td></tr></table></figure>\n\n<p>查看当前使用主题名称（设置主题为random时可查看当前随机到的主题名称）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$ZSH_THEME</span></span><br></pre></td></tr></table></figure>\n\n<p>查看自带插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.oh-my-zsh/plugins &amp;&amp; ls</span><br></pre></td></tr></table></figure>\n\n<p>安装高亮语法插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class=\"variable\">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在配置文件中添加 `plugins=(zsh-syntax-highlighting)`</span></span><br><span class=\"line\"><span class=\"comment\"># zsh-syntax-highlighting 官方推荐放在最后面 各插件之间用空格隔开</span></span><br></pre></td></tr></table></figure>\n\n<p>安装根据历史输入指令的记录即时的提示的插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> git://github.com/zsh-users/zsh-autosuggestions <span class=\"variable\">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># `plugins=(git zsh-autosuggestions)`</span></span><br></pre></td></tr></table></figure>\n\n<p>注：报 “Insecure completion-dependent directories detected“ 错误解决办法</p>\n<p>这是由于 <code>/usr/local/share/zsh</code> <code>/usr/local/share/zsh/site-functions</code> 这两个目录没有权限，给这个两个目录赋权就可以了。<a href=\"https://github.com/robbyrussell/oh-my-zsh/issues/6835\">issue</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 /usr/<span class=\"built_in\">local</span>/share/zsh</span><br><span class=\"line\"></span><br><span class=\"line\">chmod 755 /usr/<span class=\"built_in\">local</span>/share/zsh/site-functions</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置使用Git\"><a href=\"#配置使用Git\" class=\"headerlink\" title=\"配置使用Git\"></a>配置使用Git</h1><p>查看用户名和邮箱</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config user.name</span><br><span class=\"line\"></span><br><span class=\"line\">git config user.email</span><br></pre></td></tr></table></figure>\n\n<p>配置用户名和邮箱</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;username&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;email&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>查看配置文件的位置，Git会优先使用库级别的配置，再然后是global级别的配置，最后是system级别的配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /etc/gitconfig</span></span><br><span class=\"line\"><span class=\"comment\"># 系统级别的配置，适用于所有的用户和所有的库，存储在Git安装目录下，可以使用如下开头指令指定和修改</span></span><br><span class=\"line\">git config --system</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ~/.gitconfig</span></span><br><span class=\"line\"><span class=\"comment\"># 用户级别的配置，适用于当前登录的用户，存储在用户目录下，可以使用如下开头指令指定和修改</span></span><br><span class=\"line\">git config --gloabal</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># .git/config</span></span><br><span class=\"line\"><span class=\"comment\"># 库级别的配置，适用于某个具体的库，存储在具体的库隐藏的.git文件夹下，可以使用如下开头指令指定和修改</span></span><br><span class=\"line\">git config</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips\"></a>Tips</h1><ul>\n<li><p>取消更新小红点</p>\n<ol>\n<li><p>在配置中取消勾选自动检查更新</p>\n</li>\n<li><p>终端执行如下两条指令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.systempreferences AttentionPrefBundleIDs 0</span><br><span class=\"line\"></span><br><span class=\"line\">killall Dock</span><br></pre></td></tr></table></figure></li>\n<li><p>屏蔽网络访问，编辑host文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1 \tswscan.apple.com</span><br><span class=\"line\">127.0.0.1 \tswcdn.apple.com</span><br><span class=\"line\">127.0.0.1 \tswdist.apple.com</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>查看隐藏文件</p>\n<ol>\n<li><p>快捷键 command+shift+.</p>\n</li>\n<li><p>命令行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示文件夹</span></span><br><span class=\"line\">defaults write com.apple.finder AppleShowAllFiles TRUE</span><br><span class=\"line\"><span class=\"comment\"># 重启finder</span></span><br><span class=\"line\">killall Finder</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 隐藏文件夹</span></span><br><span class=\"line\">defaults write com.apple.finder AppleShowAllFiles FALSE</span><br><span class=\"line\"><span class=\"comment\"># 重启finder</span></span><br><span class=\"line\">killall Finder</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ul>"},{"title":"白日做梦","date":"2021-03-21T04:00:00.000Z","_content":"\n# 后续更多有待补充\n\n<!--more-->\n\n1. 做一个博客网站\n\n   > ~~利用了github网站和前端页面模板，勉勉强强算是达成了吧~~（可惜了我的服务器和域名，都过期了我还没投入使用过），20210321\n   > \n   > ~~用Hexo重新搭建了博客页面，更美观实用~~，20210821\n   \n\n2. 组装一台主机\n\n   > 么得钱，么得私人空间\n\n3. 学会弹吉他\n\n   > 在学了在学了（~~你猜我到底有没有好好练~~，答案是否定的20210614）\n\n4. 买一台 macbook pro\n\n   > 14寸出了再说\n   >\n   > 在自己的ideapad 700-15isk上装了黑苹果过过瘾\n\n5. 给老爸老妈买新衣服\n\n   > ~~给老妈买了两件裙子，还有配套的鞋~~，20210215\n\n6. 给老爸老妈换手机\n\n   > ~~给老妈换了Iphone 12~~，20210215\n   >\n   > ~~给老爸买了Mate 40~~，20210601\n\n7. 找到女朋友（难啊）\n\n8. 考驾照\n\n9. DIY屏幕\n\n   > [DIY屏幕](https://ashestar.github.io/diy/2021/03/28/DIY%E5%B1%8F%E5%B9%95.html)，做到了做到了，20210328\n\n10. 。。。","source":"_posts/todo-list.md","raw":"---\ntitle: 白日做梦\ndate: 2021-03-21 12:00:00\ntags: \n    - Todo\ncategories:\n    - Todo\n---\n\n# 后续更多有待补充\n\n<!--more-->\n\n1. 做一个博客网站\n\n   > ~~利用了github网站和前端页面模板，勉勉强强算是达成了吧~~（可惜了我的服务器和域名，都过期了我还没投入使用过），20210321\n   > \n   > ~~用Hexo重新搭建了博客页面，更美观实用~~，20210821\n   \n\n2. 组装一台主机\n\n   > 么得钱，么得私人空间\n\n3. 学会弹吉他\n\n   > 在学了在学了（~~你猜我到底有没有好好练~~，答案是否定的20210614）\n\n4. 买一台 macbook pro\n\n   > 14寸出了再说\n   >\n   > 在自己的ideapad 700-15isk上装了黑苹果过过瘾\n\n5. 给老爸老妈买新衣服\n\n   > ~~给老妈买了两件裙子，还有配套的鞋~~，20210215\n\n6. 给老爸老妈换手机\n\n   > ~~给老妈换了Iphone 12~~，20210215\n   >\n   > ~~给老爸买了Mate 40~~，20210601\n\n7. 找到女朋友（难啊）\n\n8. 考驾照\n\n9. DIY屏幕\n\n   > [DIY屏幕](https://ashestar.github.io/diy/2021/03/28/DIY%E5%B1%8F%E5%B9%95.html)，做到了做到了，20210328\n\n10. 。。。","slug":"todo-list","published":1,"updated":"2021-08-26T06:20:56.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmbf0018fa584e7ta39x","content":"<h1 id=\"后续更多有待补充\"><a href=\"#后续更多有待补充\" class=\"headerlink\" title=\"后续更多有待补充\"></a>后续更多有待补充</h1><span id=\"more\"></span>\n\n<ol>\n<li><p>做一个博客网站</p>\n<blockquote>\n<p><del>利用了github网站和前端页面模板，勉勉强强算是达成了吧</del>（可惜了我的服务器和域名，都过期了我还没投入使用过），20210321</p>\n<p><del>用Hexo重新搭建了博客页面，更美观实用</del>，20210821</p>\n</blockquote>\n</li>\n<li><p>组装一台主机</p>\n<blockquote>\n<p>么得钱，么得私人空间</p>\n</blockquote>\n</li>\n<li><p>学会弹吉他</p>\n<blockquote>\n<p>在学了在学了（<del>你猜我到底有没有好好练</del>，答案是否定的20210614）</p>\n</blockquote>\n</li>\n<li><p>买一台 macbook pro</p>\n<blockquote>\n<p>14寸出了再说</p>\n<p>在自己的ideapad 700-15isk上装了黑苹果过过瘾</p>\n</blockquote>\n</li>\n<li><p>给老爸老妈买新衣服</p>\n<blockquote>\n<p><del>给老妈买了两件裙子，还有配套的鞋</del>，20210215</p>\n</blockquote>\n</li>\n<li><p>给老爸老妈换手机</p>\n<blockquote>\n<p><del>给老妈换了Iphone 12</del>，20210215</p>\n<p><del>给老爸买了Mate 40</del>，20210601</p>\n</blockquote>\n</li>\n<li><p>找到女朋友（难啊）</p>\n</li>\n<li><p>考驾照</p>\n</li>\n<li><p>DIY屏幕</p>\n<blockquote>\n<p><a href=\"https://ashestar.github.io/diy/2021/03/28/DIY%E5%B1%8F%E5%B9%95.html\">DIY屏幕</a>，做到了做到了，20210328</p>\n</blockquote>\n</li>\n<li><p>。。。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"后续更多有待补充\"><a href=\"#后续更多有待补充\" class=\"headerlink\" title=\"后续更多有待补充\"></a>后续更多有待补充</h1>","more":"<ol>\n<li><p>做一个博客网站</p>\n<blockquote>\n<p><del>利用了github网站和前端页面模板，勉勉强强算是达成了吧</del>（可惜了我的服务器和域名，都过期了我还没投入使用过），20210321</p>\n<p><del>用Hexo重新搭建了博客页面，更美观实用</del>，20210821</p>\n</blockquote>\n</li>\n<li><p>组装一台主机</p>\n<blockquote>\n<p>么得钱，么得私人空间</p>\n</blockquote>\n</li>\n<li><p>学会弹吉他</p>\n<blockquote>\n<p>在学了在学了（<del>你猜我到底有没有好好练</del>，答案是否定的20210614）</p>\n</blockquote>\n</li>\n<li><p>买一台 macbook pro</p>\n<blockquote>\n<p>14寸出了再说</p>\n<p>在自己的ideapad 700-15isk上装了黑苹果过过瘾</p>\n</blockquote>\n</li>\n<li><p>给老爸老妈买新衣服</p>\n<blockquote>\n<p><del>给老妈买了两件裙子，还有配套的鞋</del>，20210215</p>\n</blockquote>\n</li>\n<li><p>给老爸老妈换手机</p>\n<blockquote>\n<p><del>给老妈换了Iphone 12</del>，20210215</p>\n<p><del>给老爸买了Mate 40</del>，20210601</p>\n</blockquote>\n</li>\n<li><p>找到女朋友（难啊）</p>\n</li>\n<li><p>考驾照</p>\n</li>\n<li><p>DIY屏幕</p>\n<blockquote>\n<p><a href=\"https://ashestar.github.io/diy/2021/03/28/DIY%E5%B1%8F%E5%B9%95.html\">DIY屏幕</a>，做到了做到了，20210328</p>\n</blockquote>\n</li>\n<li><p>。。。</p>\n</li>\n</ol>"},{"title":"代码质量培训","date":"2021-01-15T01:00:00.000Z","_content":"\n这里记录的是上的培训课的东西\n\n<!--more-->\n\n# 引导\n\n> 面向对象\n>\n> 封装、继承、多态（最重要）\n\n避免小白兔思维，不是小白兔喜欢胡萝卜就表示鱼也喜欢胡萝卜\n\n# 软件研发管理精要\n\n> 软件工程过程\n>\n> ​\t|— 瀑布模型：预测型，但需求会变化\n>\n> ​\t|— ~ ：适应型\n>\n> ​\t\t\t|— SCRUM\n>\n>                - 重过程：长期而详细的计划，文档繁多，面向过程而不是面向人，预见而不是适应\n> \n>                - 轻过程：项目目标明确，有效和高效原则，适应而不是预见\n> \n>                   |— Agile开发 Just Enough\n\n1. 团队一起做计划->达成共识->一致执行\n\n2. 杜绝小白兔思维->确定需求\n\n>1. 乐观\n>\n>2. DOD-完成的定义\n>\n>3. 以终为始\n\n> 原型法：业务系统最重要的方法\n>\n> axure-交互原型设计软件\n\n> 精益软件原则\n>\n>   - 避免浪费。过度加工，不合理的等待，第一层次的代码\n> \n>   - 推迟决策。做好需求\n> \n>   - 代码规范。可通过框架实现\n\n# Enterprise Architect\n\n|  现实世界  |   类图   | 备注                                                         |\n| :--------: | :------: | ------------------------------------------------------------ |\n| 一般与特殊 | —▹ 泛化  | is a (kind of) / 100%原则，重用（包括关系）                  |\n|            | ---▹实现 | 类实现接口                                                   |\n| 整体与部分 | —♦ 组合  | 整体管理部分的生命周期                                       |\n|            | —◊ 聚合  | 整体不一定管理部分的生命周期                                 |\n|    合作    |  —>连接  | （组合、聚合、连接）关联：一个对象通过属性来表达对象对另一个对象的静态依赖关系 |\n|            | --->依赖 | 一个对象通过操作（行为）来表达对象对另一个对象的静态依赖关系 |\n\n# 面向对象设计原则\n\n- LSP 里氏替换原则\n\n  > 子类不能添加父类没有的约束\n  >\n  > 基类要继承接口/抽象类，在可能的情况下，由抽象类（接口）继承\n\n- OCP 开放关闭原则\n\n  > 关键在于抽象\n  >\n  > open拓展，close修改\n\n- SRP 单一职责原则\n\n  > 类要么是信息类（Entity），要么是服务（Service）\n  >\n  > DDD Domain Driven Design，领域驱动设计\n\n- ISP 接口隔离原则\n\n  > - 使用委托分离接口，Adapter模式\n  >\n  > - 使用多重继承分离接口\n  >\n  > 一个类对另一个类的依赖性应当建立在最小接口上，使用多个专门接口比单一肥接口好\n  >\n  > 避免接口污染\n\n- DIP 依赖倒置原则\n\n  > - 高层模块不应依赖于低层模块，二者都应依赖于抽象\n  > - 抽象不应该依赖于细节，细节应该依赖于抽象\n  > - 针对接口编程，避免针对实现编程\n  >\n  > 经典案例 Mark IV咖啡机\n\n- 启发式原则\n\n  > 依赖于抽象，程序中所有依赖关系应终止于抽象类或接口\n  >\n  > - 任何变量都不应该拥有指向具体类的指针或引用\n  >\n  > - 任何类都不应该从具体类派生\n  >\n  > - 任何方法都不应该改写其任何基类中已经实现的方法\n\n- CARP 合成/聚合复用原则\n\n  > 尽量使用合成/聚合，而不是继承\n  >\n  > 在一个新的对象里面使用一些已有的对象，新的对象通过向这些对象的委派达到复用已有功能的目的\n\n- LOD 迪米特法则 / LKD 最少知识原则\n\n  > 不要与陌生人讲话\n  >\n  > 只与你直接的朋友们通信\n  >\n  > 每个软件单位对其他单位都只有最少的知识，而且局限于与本单位密切相关的软件单位\n  >\n  > 狭义迪米特法则：两个不必彼此直接通信的类不应该发生直接的相互作用，此时要调用另一个类的方法时可以通过第三方转发这个调用\n\n# 设计模式\n\n- 核心思维：多态包容\n\n  > 一个宿主对象中包含基类型（或接口）引用，并将一部分行为委托给这个引用所指向的实际对象，使自己的行为可以根据实际对象的不同而有所不同\n  >\n  > 例子：汉堡店问题 ——类爆炸性增长，破坏单点维护能力\n  >\n  > ​\t\t\t\t\t\t \t|——使用设计模式解决\n\n# 代码质量\n\n代码审查\n\n代码走查\n\nSonarQube 代码质量管理平台\n\n# 书籍推荐\n\n《重构》——Martin Fowler\n\n《敏捷软件开发》——Robert C Martin\n\n《UML和模式应用》——拉曼\n\n《设计模式》——Eric Gamma...\n\n《影响力》——罗伯特·西奥迪尼\n\n《金字塔原理》——巴巴拉·明托\n\n《敏捷革命》——杰夫·萨瑟兰","source":"_posts/代码质量培训.md","raw":"---\ntitle: 代码质量培训\ndate: 2021-01-15 09:00:00\ntags: \n    - 培训\ncategories:\n    - 培训\n---\n\n这里记录的是上的培训课的东西\n\n<!--more-->\n\n# 引导\n\n> 面向对象\n>\n> 封装、继承、多态（最重要）\n\n避免小白兔思维，不是小白兔喜欢胡萝卜就表示鱼也喜欢胡萝卜\n\n# 软件研发管理精要\n\n> 软件工程过程\n>\n> ​\t|— 瀑布模型：预测型，但需求会变化\n>\n> ​\t|— ~ ：适应型\n>\n> ​\t\t\t|— SCRUM\n>\n>                - 重过程：长期而详细的计划，文档繁多，面向过程而不是面向人，预见而不是适应\n> \n>                - 轻过程：项目目标明确，有效和高效原则，适应而不是预见\n> \n>                   |— Agile开发 Just Enough\n\n1. 团队一起做计划->达成共识->一致执行\n\n2. 杜绝小白兔思维->确定需求\n\n>1. 乐观\n>\n>2. DOD-完成的定义\n>\n>3. 以终为始\n\n> 原型法：业务系统最重要的方法\n>\n> axure-交互原型设计软件\n\n> 精益软件原则\n>\n>   - 避免浪费。过度加工，不合理的等待，第一层次的代码\n> \n>   - 推迟决策。做好需求\n> \n>   - 代码规范。可通过框架实现\n\n# Enterprise Architect\n\n|  现实世界  |   类图   | 备注                                                         |\n| :--------: | :------: | ------------------------------------------------------------ |\n| 一般与特殊 | —▹ 泛化  | is a (kind of) / 100%原则，重用（包括关系）                  |\n|            | ---▹实现 | 类实现接口                                                   |\n| 整体与部分 | —♦ 组合  | 整体管理部分的生命周期                                       |\n|            | —◊ 聚合  | 整体不一定管理部分的生命周期                                 |\n|    合作    |  —>连接  | （组合、聚合、连接）关联：一个对象通过属性来表达对象对另一个对象的静态依赖关系 |\n|            | --->依赖 | 一个对象通过操作（行为）来表达对象对另一个对象的静态依赖关系 |\n\n# 面向对象设计原则\n\n- LSP 里氏替换原则\n\n  > 子类不能添加父类没有的约束\n  >\n  > 基类要继承接口/抽象类，在可能的情况下，由抽象类（接口）继承\n\n- OCP 开放关闭原则\n\n  > 关键在于抽象\n  >\n  > open拓展，close修改\n\n- SRP 单一职责原则\n\n  > 类要么是信息类（Entity），要么是服务（Service）\n  >\n  > DDD Domain Driven Design，领域驱动设计\n\n- ISP 接口隔离原则\n\n  > - 使用委托分离接口，Adapter模式\n  >\n  > - 使用多重继承分离接口\n  >\n  > 一个类对另一个类的依赖性应当建立在最小接口上，使用多个专门接口比单一肥接口好\n  >\n  > 避免接口污染\n\n- DIP 依赖倒置原则\n\n  > - 高层模块不应依赖于低层模块，二者都应依赖于抽象\n  > - 抽象不应该依赖于细节，细节应该依赖于抽象\n  > - 针对接口编程，避免针对实现编程\n  >\n  > 经典案例 Mark IV咖啡机\n\n- 启发式原则\n\n  > 依赖于抽象，程序中所有依赖关系应终止于抽象类或接口\n  >\n  > - 任何变量都不应该拥有指向具体类的指针或引用\n  >\n  > - 任何类都不应该从具体类派生\n  >\n  > - 任何方法都不应该改写其任何基类中已经实现的方法\n\n- CARP 合成/聚合复用原则\n\n  > 尽量使用合成/聚合，而不是继承\n  >\n  > 在一个新的对象里面使用一些已有的对象，新的对象通过向这些对象的委派达到复用已有功能的目的\n\n- LOD 迪米特法则 / LKD 最少知识原则\n\n  > 不要与陌生人讲话\n  >\n  > 只与你直接的朋友们通信\n  >\n  > 每个软件单位对其他单位都只有最少的知识，而且局限于与本单位密切相关的软件单位\n  >\n  > 狭义迪米特法则：两个不必彼此直接通信的类不应该发生直接的相互作用，此时要调用另一个类的方法时可以通过第三方转发这个调用\n\n# 设计模式\n\n- 核心思维：多态包容\n\n  > 一个宿主对象中包含基类型（或接口）引用，并将一部分行为委托给这个引用所指向的实际对象，使自己的行为可以根据实际对象的不同而有所不同\n  >\n  > 例子：汉堡店问题 ——类爆炸性增长，破坏单点维护能力\n  >\n  > ​\t\t\t\t\t\t \t|——使用设计模式解决\n\n# 代码质量\n\n代码审查\n\n代码走查\n\nSonarQube 代码质量管理平台\n\n# 书籍推荐\n\n《重构》——Martin Fowler\n\n《敏捷软件开发》——Robert C Martin\n\n《UML和模式应用》——拉曼\n\n《设计模式》——Eric Gamma...\n\n《影响力》——罗伯特·西奥迪尼\n\n《金字塔原理》——巴巴拉·明托\n\n《敏捷革命》——杰夫·萨瑟兰","slug":"代码质量培训","published":1,"updated":"2021-08-26T06:20:56.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmbg001cfa586tkqff9w","content":"<p>这里记录的是上的培训课的东西</p>\n<span id=\"more\"></span>\n\n<h1 id=\"引导\"><a href=\"#引导\" class=\"headerlink\" title=\"引导\"></a>引导</h1><blockquote>\n<p>面向对象</p>\n<p>封装、继承、多态（最重要）</p>\n</blockquote>\n<p>避免小白兔思维，不是小白兔喜欢胡萝卜就表示鱼也喜欢胡萝卜</p>\n<h1 id=\"软件研发管理精要\"><a href=\"#软件研发管理精要\" class=\"headerlink\" title=\"软件研发管理精要\"></a>软件研发管理精要</h1><blockquote>\n<p>软件工程过程</p>\n<p>​    |— 瀑布模型：预测型，但需求会变化</p>\n<p>​    |— ~ ：适应型</p>\n<p>​            |— SCRUM</p>\n<pre><code>           - 重过程：长期而详细的计划，文档繁多，面向过程而不是面向人，预见而不是适应\n\n           - 轻过程：项目目标明确，有效和高效原则，适应而不是预见\n\n              |— Agile开发 Just Enough\n</code></pre>\n</blockquote>\n<ol>\n<li><p>团队一起做计划-&gt;达成共识-&gt;一致执行</p>\n</li>\n<li><p>杜绝小白兔思维-&gt;确定需求</p>\n</li>\n</ol>\n<blockquote>\n<ol>\n<li><p>乐观</p>\n</li>\n<li><p>DOD-完成的定义</p>\n</li>\n<li><p>以终为始</p>\n</li>\n</ol>\n</blockquote>\n<blockquote>\n<p>原型法：业务系统最重要的方法</p>\n<p>axure-交互原型设计软件</p>\n</blockquote>\n<blockquote>\n<p>精益软件原则</p>\n<ul>\n<li><p>避免浪费。过度加工，不合理的等待，第一层次的代码</p>\n</li>\n<li><p>推迟决策。做好需求</p>\n</li>\n<li><p>代码规范。可通过框架实现</p>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"Enterprise-Architect\"><a href=\"#Enterprise-Architect\" class=\"headerlink\" title=\"Enterprise Architect\"></a>Enterprise Architect</h1><table>\n<thead>\n<tr>\n<th align=\"center\">现实世界</th>\n<th align=\"center\">类图</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">一般与特殊</td>\n<td align=\"center\">—▹ 泛化</td>\n<td>is a (kind of) / 100%原则，重用（包括关系）</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">—▹实现</td>\n<td>类实现接口</td>\n</tr>\n<tr>\n<td align=\"center\">整体与部分</td>\n<td align=\"center\">—♦ 组合</td>\n<td>整体管理部分的生命周期</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">—◊ 聚合</td>\n<td>整体不一定管理部分的生命周期</td>\n</tr>\n<tr>\n<td align=\"center\">合作</td>\n<td align=\"center\">—&gt;连接</td>\n<td>（组合、聚合、连接）关联：一个对象通过属性来表达对象对另一个对象的静态依赖关系</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">—&gt;依赖</td>\n<td>一个对象通过操作（行为）来表达对象对另一个对象的静态依赖关系</td>\n</tr>\n</tbody></table>\n<h1 id=\"面向对象设计原则\"><a href=\"#面向对象设计原则\" class=\"headerlink\" title=\"面向对象设计原则\"></a>面向对象设计原则</h1><ul>\n<li><p>LSP 里氏替换原则</p>\n<blockquote>\n<p>子类不能添加父类没有的约束</p>\n<p>基类要继承接口/抽象类，在可能的情况下，由抽象类（接口）继承</p>\n</blockquote>\n</li>\n<li><p>OCP 开放关闭原则</p>\n<blockquote>\n<p>关键在于抽象</p>\n<p>open拓展，close修改</p>\n</blockquote>\n</li>\n<li><p>SRP 单一职责原则</p>\n<blockquote>\n<p>类要么是信息类（Entity），要么是服务（Service）</p>\n<p>DDD Domain Driven Design，领域驱动设计</p>\n</blockquote>\n</li>\n<li><p>ISP 接口隔离原则</p>\n<blockquote>\n<ul>\n<li><p>使用委托分离接口，Adapter模式</p>\n</li>\n<li><p>使用多重继承分离接口</p>\n</li>\n</ul>\n<p>一个类对另一个类的依赖性应当建立在最小接口上，使用多个专门接口比单一肥接口好</p>\n<p>避免接口污染</p>\n</blockquote>\n</li>\n<li><p>DIP 依赖倒置原则</p>\n<blockquote>\n<ul>\n<li>高层模块不应依赖于低层模块，二者都应依赖于抽象</li>\n<li>抽象不应该依赖于细节，细节应该依赖于抽象</li>\n<li>针对接口编程，避免针对实现编程</li>\n</ul>\n<p>经典案例 Mark IV咖啡机</p>\n</blockquote>\n</li>\n<li><p>启发式原则</p>\n<blockquote>\n<p>依赖于抽象，程序中所有依赖关系应终止于抽象类或接口</p>\n<ul>\n<li><p>任何变量都不应该拥有指向具体类的指针或引用</p>\n</li>\n<li><p>任何类都不应该从具体类派生</p>\n</li>\n<li><p>任何方法都不应该改写其任何基类中已经实现的方法</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>CARP 合成/聚合复用原则</p>\n<blockquote>\n<p>尽量使用合成/聚合，而不是继承</p>\n<p>在一个新的对象里面使用一些已有的对象，新的对象通过向这些对象的委派达到复用已有功能的目的</p>\n</blockquote>\n</li>\n<li><p>LOD 迪米特法则 / LKD 最少知识原则</p>\n<blockquote>\n<p>不要与陌生人讲话</p>\n<p>只与你直接的朋友们通信</p>\n<p>每个软件单位对其他单位都只有最少的知识，而且局限于与本单位密切相关的软件单位</p>\n<p>狭义迪米特法则：两个不必彼此直接通信的类不应该发生直接的相互作用，此时要调用另一个类的方法时可以通过第三方转发这个调用</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"设计模式\"><a href=\"#设计模式\" class=\"headerlink\" title=\"设计模式\"></a>设计模式</h1><ul>\n<li><p>核心思维：多态包容</p>\n<blockquote>\n<p>一个宿主对象中包含基类型（或接口）引用，并将一部分行为委托给这个引用所指向的实际对象，使自己的行为可以根据实际对象的不同而有所不同</p>\n<p>例子：汉堡店问题 ——类爆炸性增长，破坏单点维护能力</p>\n<p>​                             |——使用设计模式解决</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"代码质量\"><a href=\"#代码质量\" class=\"headerlink\" title=\"代码质量\"></a>代码质量</h1><p>代码审查</p>\n<p>代码走查</p>\n<p>SonarQube 代码质量管理平台</p>\n<h1 id=\"书籍推荐\"><a href=\"#书籍推荐\" class=\"headerlink\" title=\"书籍推荐\"></a>书籍推荐</h1><p>《重构》——Martin Fowler</p>\n<p>《敏捷软件开发》——Robert C Martin</p>\n<p>《UML和模式应用》——拉曼</p>\n<p>《设计模式》——Eric Gamma…</p>\n<p>《影响力》——罗伯特·西奥迪尼</p>\n<p>《金字塔原理》——巴巴拉·明托</p>\n<p>《敏捷革命》——杰夫·萨瑟兰</p>\n","site":{"data":{}},"excerpt":"<p>这里记录的是上的培训课的东西</p>","more":"<h1 id=\"引导\"><a href=\"#引导\" class=\"headerlink\" title=\"引导\"></a>引导</h1><blockquote>\n<p>面向对象</p>\n<p>封装、继承、多态（最重要）</p>\n</blockquote>\n<p>避免小白兔思维，不是小白兔喜欢胡萝卜就表示鱼也喜欢胡萝卜</p>\n<h1 id=\"软件研发管理精要\"><a href=\"#软件研发管理精要\" class=\"headerlink\" title=\"软件研发管理精要\"></a>软件研发管理精要</h1><blockquote>\n<p>软件工程过程</p>\n<p>​    |— 瀑布模型：预测型，但需求会变化</p>\n<p>​    |— ~ ：适应型</p>\n<p>​            |— SCRUM</p>\n<pre><code>           - 重过程：长期而详细的计划，文档繁多，面向过程而不是面向人，预见而不是适应\n\n           - 轻过程：项目目标明确，有效和高效原则，适应而不是预见\n\n              |— Agile开发 Just Enough\n</code></pre>\n</blockquote>\n<ol>\n<li><p>团队一起做计划-&gt;达成共识-&gt;一致执行</p>\n</li>\n<li><p>杜绝小白兔思维-&gt;确定需求</p>\n</li>\n</ol>\n<blockquote>\n<ol>\n<li><p>乐观</p>\n</li>\n<li><p>DOD-完成的定义</p>\n</li>\n<li><p>以终为始</p>\n</li>\n</ol>\n</blockquote>\n<blockquote>\n<p>原型法：业务系统最重要的方法</p>\n<p>axure-交互原型设计软件</p>\n</blockquote>\n<blockquote>\n<p>精益软件原则</p>\n<ul>\n<li><p>避免浪费。过度加工，不合理的等待，第一层次的代码</p>\n</li>\n<li><p>推迟决策。做好需求</p>\n</li>\n<li><p>代码规范。可通过框架实现</p>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"Enterprise-Architect\"><a href=\"#Enterprise-Architect\" class=\"headerlink\" title=\"Enterprise Architect\"></a>Enterprise Architect</h1><table>\n<thead>\n<tr>\n<th align=\"center\">现实世界</th>\n<th align=\"center\">类图</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">一般与特殊</td>\n<td align=\"center\">—▹ 泛化</td>\n<td>is a (kind of) / 100%原则，重用（包括关系）</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">—▹实现</td>\n<td>类实现接口</td>\n</tr>\n<tr>\n<td align=\"center\">整体与部分</td>\n<td align=\"center\">—♦ 组合</td>\n<td>整体管理部分的生命周期</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">—◊ 聚合</td>\n<td>整体不一定管理部分的生命周期</td>\n</tr>\n<tr>\n<td align=\"center\">合作</td>\n<td align=\"center\">—&gt;连接</td>\n<td>（组合、聚合、连接）关联：一个对象通过属性来表达对象对另一个对象的静态依赖关系</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">—&gt;依赖</td>\n<td>一个对象通过操作（行为）来表达对象对另一个对象的静态依赖关系</td>\n</tr>\n</tbody></table>\n<h1 id=\"面向对象设计原则\"><a href=\"#面向对象设计原则\" class=\"headerlink\" title=\"面向对象设计原则\"></a>面向对象设计原则</h1><ul>\n<li><p>LSP 里氏替换原则</p>\n<blockquote>\n<p>子类不能添加父类没有的约束</p>\n<p>基类要继承接口/抽象类，在可能的情况下，由抽象类（接口）继承</p>\n</blockquote>\n</li>\n<li><p>OCP 开放关闭原则</p>\n<blockquote>\n<p>关键在于抽象</p>\n<p>open拓展，close修改</p>\n</blockquote>\n</li>\n<li><p>SRP 单一职责原则</p>\n<blockquote>\n<p>类要么是信息类（Entity），要么是服务（Service）</p>\n<p>DDD Domain Driven Design，领域驱动设计</p>\n</blockquote>\n</li>\n<li><p>ISP 接口隔离原则</p>\n<blockquote>\n<ul>\n<li><p>使用委托分离接口，Adapter模式</p>\n</li>\n<li><p>使用多重继承分离接口</p>\n</li>\n</ul>\n<p>一个类对另一个类的依赖性应当建立在最小接口上，使用多个专门接口比单一肥接口好</p>\n<p>避免接口污染</p>\n</blockquote>\n</li>\n<li><p>DIP 依赖倒置原则</p>\n<blockquote>\n<ul>\n<li>高层模块不应依赖于低层模块，二者都应依赖于抽象</li>\n<li>抽象不应该依赖于细节，细节应该依赖于抽象</li>\n<li>针对接口编程，避免针对实现编程</li>\n</ul>\n<p>经典案例 Mark IV咖啡机</p>\n</blockquote>\n</li>\n<li><p>启发式原则</p>\n<blockquote>\n<p>依赖于抽象，程序中所有依赖关系应终止于抽象类或接口</p>\n<ul>\n<li><p>任何变量都不应该拥有指向具体类的指针或引用</p>\n</li>\n<li><p>任何类都不应该从具体类派生</p>\n</li>\n<li><p>任何方法都不应该改写其任何基类中已经实现的方法</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>CARP 合成/聚合复用原则</p>\n<blockquote>\n<p>尽量使用合成/聚合，而不是继承</p>\n<p>在一个新的对象里面使用一些已有的对象，新的对象通过向这些对象的委派达到复用已有功能的目的</p>\n</blockquote>\n</li>\n<li><p>LOD 迪米特法则 / LKD 最少知识原则</p>\n<blockquote>\n<p>不要与陌生人讲话</p>\n<p>只与你直接的朋友们通信</p>\n<p>每个软件单位对其他单位都只有最少的知识，而且局限于与本单位密切相关的软件单位</p>\n<p>狭义迪米特法则：两个不必彼此直接通信的类不应该发生直接的相互作用，此时要调用另一个类的方法时可以通过第三方转发这个调用</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"设计模式\"><a href=\"#设计模式\" class=\"headerlink\" title=\"设计模式\"></a>设计模式</h1><ul>\n<li><p>核心思维：多态包容</p>\n<blockquote>\n<p>一个宿主对象中包含基类型（或接口）引用，并将一部分行为委托给这个引用所指向的实际对象，使自己的行为可以根据实际对象的不同而有所不同</p>\n<p>例子：汉堡店问题 ——类爆炸性增长，破坏单点维护能力</p>\n<p>​                             |——使用设计模式解决</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"代码质量\"><a href=\"#代码质量\" class=\"headerlink\" title=\"代码质量\"></a>代码质量</h1><p>代码审查</p>\n<p>代码走查</p>\n<p>SonarQube 代码质量管理平台</p>\n<h1 id=\"书籍推荐\"><a href=\"#书籍推荐\" class=\"headerlink\" title=\"书籍推荐\"></a>书籍推荐</h1><p>《重构》——Martin Fowler</p>\n<p>《敏捷软件开发》——Robert C Martin</p>\n<p>《UML和模式应用》——拉曼</p>\n<p>《设计模式》——Eric Gamma…</p>\n<p>《影响力》——罗伯特·西奥迪尼</p>\n<p>《金字塔原理》——巴巴拉·明托</p>\n<p>《敏捷革命》——杰夫·萨瑟兰</p>"},{"title":"黑苹果踩坑记录","date":"2021-05-29T04:00:00.000Z","_content":"\n# 前言\n\n> 等啊等，等啊等，mbp14啥时候出啊。\n\nManjaro用得虽然挺不错的，但是腾讯大流氓一直没有推出可用的Linux软件，而且我想做一下微信小程序的测试，又不想再在Windows上折腾安装环境，我又等着买mbp，于是想直接体验macOS开发了\n\n<!--more-->\n\n# 虚拟机\n\n先想到的是VMware虚拟机，上网一搜，有了。\n\n[全网最详细的VMware虚拟机安装MacOS系统教程，没有之一！！！附全部资源](https://zhuanlan.zhihu.com/p/337036027)\n\n教程有了，资源都附带了，那就吭哧吭哧开干。\n\n* 首先使用Unlocker解锁VMware，这样才能建立macOS虚拟机\n* 在VMware中新建macOS虚拟机，网络连接选择【NAT】，IO控制器选择【LSI LOGIC】，硬盘选【SATA】，一路向下完成，先不要启动，然后打开`.vmx`文件，在最后添加代码`smc.version = 0`，保存\n* 启动虚拟机，走安装流程，格式化磁盘为【Mac OS扩展（日志式）】，方案【GUID分区图】，格式化后安装系统\n* 完成，顺便安装VMware Tools，重启\n\n这样就有了一台macOS虚拟机了，体验了一下，显存只有128MB，有点卡顿，也不能使用Facetime、IMessage之类的，真的只是看个样子，体验一下。\n\n# 黑苹果\n\n于是我开始谋求在自己电脑上安装黑苹果，折腾下来最重要的结论是一定要选择好自己电脑可用的EFI与对应的macOS版本。\n\n先说成功的经验吧，我用的笔记本是Lenovo Ideapad 700-15isk，从大学陪伴我至今（大学时不折腾，工作后疯狂折腾装系统，我的脑子绝对有问题）。\n\n[联想ideapad700-15isk（小新线下版）黑苹果完美驱动附详细安装过程](https://blog.csdn.net/a1353889150/article/details/97372378)\n\n## 准备\n\n* 下载好镜像，这里是[14.3镜像](https://blog.daliansky.net/macOS-Mojave-10.14.3-18D42-official-version-with-Clover-4859-original-image.html)，黑果小兵提供\n* 下载好本机适配的clover，教程作者改好的[Clover](https://pan.baidu.com/s/1om-eWSGpNwpnnBfeoV-sWg)\n* 下载安装盘制作工具[blenaEtcher](https://www.balena.io/etcher/)\n* 下载磁盘管理工具[DiskGenius](https://pan.baidu.com/s/1zeM2IW6jHezp_SYk7BhWyw)\n* 下载启动项管理工具[EasyUEFI](https://pan.baidu.com/s/1wOrtNPN3IZYhGJ1Q59H2SA)\n* BIOS屏蔽独显，安装好后再打开；关闭安全启动，将USB启动移至最前方\n* 电脑划一份空间用于安装，我自己使用的是原先安装Windows的一整块NVME硬盘（没错，我在试错过程中搞崩了自己的系统，然后重装Win10到买来时的机械磁盘中，这个固态硬盘本来是大学时为了提高启动速度买的，本来装了Windows在上面，现在又只能委屈Windows了）\n\n## 安装\n\n* 使用blenaEtcher将镜像烧录进U盘\n* 重启电脑，跑代码，在clover界面选择USB启动，名称为Boot macOS install from（后面是镜像名称）\n* 代码跑完后就是苹果图标，等进度条走完\n* 先选择语言，然后点击磁盘工具，选择抹掉准备安装的硬盘，设置名称，格式的话，固态选择【APFS】，机械选择【Mac OS扩展（日志式）】，方案【GUID分区图】，格式完成关闭磁盘工具\n* 选择安装macOS，一直同意，安装盘选择格式化的那个硬盘。接下来它会先把需要的安装文件复制到分区里，之后会进行重启\n* 重启时不要拔出U盘，选择Boot macOS from（安装磁盘名称），继续安装，前面一次只是将文件复制进硬盘，这一次才是安装系统\n* 安装完成重启，可拔出U盘\n* 重启先不要进macOS，进入Windows，打开DiskGenius，选择安装磁盘的EFI分区，将里面的Clover删除，CrtlV替换成适配自己电脑的Clover\n* 再重启电脑，选择Boot macOS from（安装磁盘名称），进入设置，个性化设置完成后就可享用macOS了\n\n注：\n\n* 安装macOS时出现应用程序副本已损坏错误，点菜单栏-实用工具-打开终端，输入：date 032208102015.20，退出终端，继续正常点安装macOS。\n* 如果是安装的15.6的话 先替换clover文件再安装，但我没成功\n\n## 吐槽\n\n一开始我想安装10.15 Catalina，因为虚拟机安装的也是这个版本。\n\n[联想小新700-15ISK i5-6300HQ 黑苹果Catalina – 苹果地带 (macx.top)](https://macx.top/3799.html)\n\n这个EFI暂且不表，我前面下载的用于虚拟机的macOS镜像没有分区表，写入U盘无法启动，于是我重新下载了10.15.7的镜像，一直卡在苹果图标，于是我换成10.15.6版本再试一次，结果代码跑一半不动了，真是吐血，换了好几个EFI都不行，我都想直接给钱找人帮忙装了。\n\n[联想IdeaPad 700-15ISK win10 黑苹果双系统教程  子墨的博客 (zimo.wiki)](https://blog.zimo.wiki/posts/ad76eda8/)\n\n> 这个人的博客就是我想要的博客网站，不知道他怎么搭的，想要。\n\n最后选择最开始说的10.14.3 Mojave，一次成功，设置完成后刚好母上打了Facetime过来，直接在电脑上接听了，一切安好。\n\n后记：我又想整点花活，直接在电脑上下载Catalina的更新包，重启的时候进Windows替换EFI，结果当然是失败，提供的15.6Clover直接一个大大的禁止符号，气死我了，无奈重装。\n\n心疼我下载用的n多流量 T-T。","source":"_posts/黑苹果踩坑记录.md","raw":"---\ntitle: 黑苹果踩坑记录\ndate: 2021-05-29 12:00:00\ntags: \n    - DIY\ncategories:\n    - DIY\n    - 软件\n---\n\n# 前言\n\n> 等啊等，等啊等，mbp14啥时候出啊。\n\nManjaro用得虽然挺不错的，但是腾讯大流氓一直没有推出可用的Linux软件，而且我想做一下微信小程序的测试，又不想再在Windows上折腾安装环境，我又等着买mbp，于是想直接体验macOS开发了\n\n<!--more-->\n\n# 虚拟机\n\n先想到的是VMware虚拟机，上网一搜，有了。\n\n[全网最详细的VMware虚拟机安装MacOS系统教程，没有之一！！！附全部资源](https://zhuanlan.zhihu.com/p/337036027)\n\n教程有了，资源都附带了，那就吭哧吭哧开干。\n\n* 首先使用Unlocker解锁VMware，这样才能建立macOS虚拟机\n* 在VMware中新建macOS虚拟机，网络连接选择【NAT】，IO控制器选择【LSI LOGIC】，硬盘选【SATA】，一路向下完成，先不要启动，然后打开`.vmx`文件，在最后添加代码`smc.version = 0`，保存\n* 启动虚拟机，走安装流程，格式化磁盘为【Mac OS扩展（日志式）】，方案【GUID分区图】，格式化后安装系统\n* 完成，顺便安装VMware Tools，重启\n\n这样就有了一台macOS虚拟机了，体验了一下，显存只有128MB，有点卡顿，也不能使用Facetime、IMessage之类的，真的只是看个样子，体验一下。\n\n# 黑苹果\n\n于是我开始谋求在自己电脑上安装黑苹果，折腾下来最重要的结论是一定要选择好自己电脑可用的EFI与对应的macOS版本。\n\n先说成功的经验吧，我用的笔记本是Lenovo Ideapad 700-15isk，从大学陪伴我至今（大学时不折腾，工作后疯狂折腾装系统，我的脑子绝对有问题）。\n\n[联想ideapad700-15isk（小新线下版）黑苹果完美驱动附详细安装过程](https://blog.csdn.net/a1353889150/article/details/97372378)\n\n## 准备\n\n* 下载好镜像，这里是[14.3镜像](https://blog.daliansky.net/macOS-Mojave-10.14.3-18D42-official-version-with-Clover-4859-original-image.html)，黑果小兵提供\n* 下载好本机适配的clover，教程作者改好的[Clover](https://pan.baidu.com/s/1om-eWSGpNwpnnBfeoV-sWg)\n* 下载安装盘制作工具[blenaEtcher](https://www.balena.io/etcher/)\n* 下载磁盘管理工具[DiskGenius](https://pan.baidu.com/s/1zeM2IW6jHezp_SYk7BhWyw)\n* 下载启动项管理工具[EasyUEFI](https://pan.baidu.com/s/1wOrtNPN3IZYhGJ1Q59H2SA)\n* BIOS屏蔽独显，安装好后再打开；关闭安全启动，将USB启动移至最前方\n* 电脑划一份空间用于安装，我自己使用的是原先安装Windows的一整块NVME硬盘（没错，我在试错过程中搞崩了自己的系统，然后重装Win10到买来时的机械磁盘中，这个固态硬盘本来是大学时为了提高启动速度买的，本来装了Windows在上面，现在又只能委屈Windows了）\n\n## 安装\n\n* 使用blenaEtcher将镜像烧录进U盘\n* 重启电脑，跑代码，在clover界面选择USB启动，名称为Boot macOS install from（后面是镜像名称）\n* 代码跑完后就是苹果图标，等进度条走完\n* 先选择语言，然后点击磁盘工具，选择抹掉准备安装的硬盘，设置名称，格式的话，固态选择【APFS】，机械选择【Mac OS扩展（日志式）】，方案【GUID分区图】，格式完成关闭磁盘工具\n* 选择安装macOS，一直同意，安装盘选择格式化的那个硬盘。接下来它会先把需要的安装文件复制到分区里，之后会进行重启\n* 重启时不要拔出U盘，选择Boot macOS from（安装磁盘名称），继续安装，前面一次只是将文件复制进硬盘，这一次才是安装系统\n* 安装完成重启，可拔出U盘\n* 重启先不要进macOS，进入Windows，打开DiskGenius，选择安装磁盘的EFI分区，将里面的Clover删除，CrtlV替换成适配自己电脑的Clover\n* 再重启电脑，选择Boot macOS from（安装磁盘名称），进入设置，个性化设置完成后就可享用macOS了\n\n注：\n\n* 安装macOS时出现应用程序副本已损坏错误，点菜单栏-实用工具-打开终端，输入：date 032208102015.20，退出终端，继续正常点安装macOS。\n* 如果是安装的15.6的话 先替换clover文件再安装，但我没成功\n\n## 吐槽\n\n一开始我想安装10.15 Catalina，因为虚拟机安装的也是这个版本。\n\n[联想小新700-15ISK i5-6300HQ 黑苹果Catalina – 苹果地带 (macx.top)](https://macx.top/3799.html)\n\n这个EFI暂且不表，我前面下载的用于虚拟机的macOS镜像没有分区表，写入U盘无法启动，于是我重新下载了10.15.7的镜像，一直卡在苹果图标，于是我换成10.15.6版本再试一次，结果代码跑一半不动了，真是吐血，换了好几个EFI都不行，我都想直接给钱找人帮忙装了。\n\n[联想IdeaPad 700-15ISK win10 黑苹果双系统教程  子墨的博客 (zimo.wiki)](https://blog.zimo.wiki/posts/ad76eda8/)\n\n> 这个人的博客就是我想要的博客网站，不知道他怎么搭的，想要。\n\n最后选择最开始说的10.14.3 Mojave，一次成功，设置完成后刚好母上打了Facetime过来，直接在电脑上接听了，一切安好。\n\n后记：我又想整点花活，直接在电脑上下载Catalina的更新包，重启的时候进Windows替换EFI，结果当然是失败，提供的15.6Clover直接一个大大的禁止符号，气死我了，无奈重装。\n\n心疼我下载用的n多流量 T-T。","slug":"黑苹果踩坑记录","published":1,"updated":"2021-08-26T06:20:56.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckssjjmbg001ffa582eu27mnm","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>等啊等，等啊等，mbp14啥时候出啊。</p>\n</blockquote>\n<p>Manjaro用得虽然挺不错的，但是腾讯大流氓一直没有推出可用的Linux软件，而且我想做一下微信小程序的测试，又不想再在Windows上折腾安装环境，我又等着买mbp，于是想直接体验macOS开发了</p>\n<span id=\"more\"></span>\n\n<h1 id=\"虚拟机\"><a href=\"#虚拟机\" class=\"headerlink\" title=\"虚拟机\"></a>虚拟机</h1><p>先想到的是VMware虚拟机，上网一搜，有了。</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/337036027\">全网最详细的VMware虚拟机安装MacOS系统教程，没有之一！！！附全部资源</a></p>\n<p>教程有了，资源都附带了，那就吭哧吭哧开干。</p>\n<ul>\n<li>首先使用Unlocker解锁VMware，这样才能建立macOS虚拟机</li>\n<li>在VMware中新建macOS虚拟机，网络连接选择【NAT】，IO控制器选择【LSI LOGIC】，硬盘选【SATA】，一路向下完成，先不要启动，然后打开<code>.vmx</code>文件，在最后添加代码<code>smc.version = 0</code>，保存</li>\n<li>启动虚拟机，走安装流程，格式化磁盘为【Mac OS扩展（日志式）】，方案【GUID分区图】，格式化后安装系统</li>\n<li>完成，顺便安装VMware Tools，重启</li>\n</ul>\n<p>这样就有了一台macOS虚拟机了，体验了一下，显存只有128MB，有点卡顿，也不能使用Facetime、IMessage之类的，真的只是看个样子，体验一下。</p>\n<h1 id=\"黑苹果\"><a href=\"#黑苹果\" class=\"headerlink\" title=\"黑苹果\"></a>黑苹果</h1><p>于是我开始谋求在自己电脑上安装黑苹果，折腾下来最重要的结论是一定要选择好自己电脑可用的EFI与对应的macOS版本。</p>\n<p>先说成功的经验吧，我用的笔记本是Lenovo Ideapad 700-15isk，从大学陪伴我至今（大学时不折腾，工作后疯狂折腾装系统，我的脑子绝对有问题）。</p>\n<p><a href=\"https://blog.csdn.net/a1353889150/article/details/97372378\">联想ideapad700-15isk（小新线下版）黑苹果完美驱动附详细安装过程</a></p>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><ul>\n<li>下载好镜像，这里是<a href=\"https://blog.daliansky.net/macOS-Mojave-10.14.3-18D42-official-version-with-Clover-4859-original-image.html\">14.3镜像</a>，黑果小兵提供</li>\n<li>下载好本机适配的clover，教程作者改好的<a href=\"https://pan.baidu.com/s/1om-eWSGpNwpnnBfeoV-sWg\">Clover</a></li>\n<li>下载安装盘制作工具<a href=\"https://www.balena.io/etcher/\">blenaEtcher</a></li>\n<li>下载磁盘管理工具<a href=\"https://pan.baidu.com/s/1zeM2IW6jHezp_SYk7BhWyw\">DiskGenius</a></li>\n<li>下载启动项管理工具<a href=\"https://pan.baidu.com/s/1wOrtNPN3IZYhGJ1Q59H2SA\">EasyUEFI</a></li>\n<li>BIOS屏蔽独显，安装好后再打开；关闭安全启动，将USB启动移至最前方</li>\n<li>电脑划一份空间用于安装，我自己使用的是原先安装Windows的一整块NVME硬盘（没错，我在试错过程中搞崩了自己的系统，然后重装Win10到买来时的机械磁盘中，这个固态硬盘本来是大学时为了提高启动速度买的，本来装了Windows在上面，现在又只能委屈Windows了）</li>\n</ul>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ul>\n<li>使用blenaEtcher将镜像烧录进U盘</li>\n<li>重启电脑，跑代码，在clover界面选择USB启动，名称为Boot macOS install from（后面是镜像名称）</li>\n<li>代码跑完后就是苹果图标，等进度条走完</li>\n<li>先选择语言，然后点击磁盘工具，选择抹掉准备安装的硬盘，设置名称，格式的话，固态选择【APFS】，机械选择【Mac OS扩展（日志式）】，方案【GUID分区图】，格式完成关闭磁盘工具</li>\n<li>选择安装macOS，一直同意，安装盘选择格式化的那个硬盘。接下来它会先把需要的安装文件复制到分区里，之后会进行重启</li>\n<li>重启时不要拔出U盘，选择Boot macOS from（安装磁盘名称），继续安装，前面一次只是将文件复制进硬盘，这一次才是安装系统</li>\n<li>安装完成重启，可拔出U盘</li>\n<li>重启先不要进macOS，进入Windows，打开DiskGenius，选择安装磁盘的EFI分区，将里面的Clover删除，CrtlV替换成适配自己电脑的Clover</li>\n<li>再重启电脑，选择Boot macOS from（安装磁盘名称），进入设置，个性化设置完成后就可享用macOS了</li>\n</ul>\n<p>注：</p>\n<ul>\n<li>安装macOS时出现应用程序副本已损坏错误，点菜单栏-实用工具-打开终端，输入：date 032208102015.20，退出终端，继续正常点安装macOS。</li>\n<li>如果是安装的15.6的话 先替换clover文件再安装，但我没成功</li>\n</ul>\n<h2 id=\"吐槽\"><a href=\"#吐槽\" class=\"headerlink\" title=\"吐槽\"></a>吐槽</h2><p>一开始我想安装10.15 Catalina，因为虚拟机安装的也是这个版本。</p>\n<p><a href=\"https://macx.top/3799.html\">联想小新700-15ISK i5-6300HQ 黑苹果Catalina – 苹果地带 (macx.top)</a></p>\n<p>这个EFI暂且不表，我前面下载的用于虚拟机的macOS镜像没有分区表，写入U盘无法启动，于是我重新下载了10.15.7的镜像，一直卡在苹果图标，于是我换成10.15.6版本再试一次，结果代码跑一半不动了，真是吐血，换了好几个EFI都不行，我都想直接给钱找人帮忙装了。</p>\n<p><a href=\"https://blog.zimo.wiki/posts/ad76eda8/\">联想IdeaPad 700-15ISK win10 黑苹果双系统教程  子墨的博客 (zimo.wiki)</a></p>\n<blockquote>\n<p>这个人的博客就是我想要的博客网站，不知道他怎么搭的，想要。</p>\n</blockquote>\n<p>最后选择最开始说的10.14.3 Mojave，一次成功，设置完成后刚好母上打了Facetime过来，直接在电脑上接听了，一切安好。</p>\n<p>后记：我又想整点花活，直接在电脑上下载Catalina的更新包，重启的时候进Windows替换EFI，结果当然是失败，提供的15.6Clover直接一个大大的禁止符号，气死我了，无奈重装。</p>\n<p>心疼我下载用的n多流量 T-T。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote>\n<p>等啊等，等啊等，mbp14啥时候出啊。</p>\n</blockquote>\n<p>Manjaro用得虽然挺不错的，但是腾讯大流氓一直没有推出可用的Linux软件，而且我想做一下微信小程序的测试，又不想再在Windows上折腾安装环境，我又等着买mbp，于是想直接体验macOS开发了</p>","more":"<h1 id=\"虚拟机\"><a href=\"#虚拟机\" class=\"headerlink\" title=\"虚拟机\"></a>虚拟机</h1><p>先想到的是VMware虚拟机，上网一搜，有了。</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/337036027\">全网最详细的VMware虚拟机安装MacOS系统教程，没有之一！！！附全部资源</a></p>\n<p>教程有了，资源都附带了，那就吭哧吭哧开干。</p>\n<ul>\n<li>首先使用Unlocker解锁VMware，这样才能建立macOS虚拟机</li>\n<li>在VMware中新建macOS虚拟机，网络连接选择【NAT】，IO控制器选择【LSI LOGIC】，硬盘选【SATA】，一路向下完成，先不要启动，然后打开<code>.vmx</code>文件，在最后添加代码<code>smc.version = 0</code>，保存</li>\n<li>启动虚拟机，走安装流程，格式化磁盘为【Mac OS扩展（日志式）】，方案【GUID分区图】，格式化后安装系统</li>\n<li>完成，顺便安装VMware Tools，重启</li>\n</ul>\n<p>这样就有了一台macOS虚拟机了，体验了一下，显存只有128MB，有点卡顿，也不能使用Facetime、IMessage之类的，真的只是看个样子，体验一下。</p>\n<h1 id=\"黑苹果\"><a href=\"#黑苹果\" class=\"headerlink\" title=\"黑苹果\"></a>黑苹果</h1><p>于是我开始谋求在自己电脑上安装黑苹果，折腾下来最重要的结论是一定要选择好自己电脑可用的EFI与对应的macOS版本。</p>\n<p>先说成功的经验吧，我用的笔记本是Lenovo Ideapad 700-15isk，从大学陪伴我至今（大学时不折腾，工作后疯狂折腾装系统，我的脑子绝对有问题）。</p>\n<p><a href=\"https://blog.csdn.net/a1353889150/article/details/97372378\">联想ideapad700-15isk（小新线下版）黑苹果完美驱动附详细安装过程</a></p>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><ul>\n<li>下载好镜像，这里是<a href=\"https://blog.daliansky.net/macOS-Mojave-10.14.3-18D42-official-version-with-Clover-4859-original-image.html\">14.3镜像</a>，黑果小兵提供</li>\n<li>下载好本机适配的clover，教程作者改好的<a href=\"https://pan.baidu.com/s/1om-eWSGpNwpnnBfeoV-sWg\">Clover</a></li>\n<li>下载安装盘制作工具<a href=\"https://www.balena.io/etcher/\">blenaEtcher</a></li>\n<li>下载磁盘管理工具<a href=\"https://pan.baidu.com/s/1zeM2IW6jHezp_SYk7BhWyw\">DiskGenius</a></li>\n<li>下载启动项管理工具<a href=\"https://pan.baidu.com/s/1wOrtNPN3IZYhGJ1Q59H2SA\">EasyUEFI</a></li>\n<li>BIOS屏蔽独显，安装好后再打开；关闭安全启动，将USB启动移至最前方</li>\n<li>电脑划一份空间用于安装，我自己使用的是原先安装Windows的一整块NVME硬盘（没错，我在试错过程中搞崩了自己的系统，然后重装Win10到买来时的机械磁盘中，这个固态硬盘本来是大学时为了提高启动速度买的，本来装了Windows在上面，现在又只能委屈Windows了）</li>\n</ul>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ul>\n<li>使用blenaEtcher将镜像烧录进U盘</li>\n<li>重启电脑，跑代码，在clover界面选择USB启动，名称为Boot macOS install from（后面是镜像名称）</li>\n<li>代码跑完后就是苹果图标，等进度条走完</li>\n<li>先选择语言，然后点击磁盘工具，选择抹掉准备安装的硬盘，设置名称，格式的话，固态选择【APFS】，机械选择【Mac OS扩展（日志式）】，方案【GUID分区图】，格式完成关闭磁盘工具</li>\n<li>选择安装macOS，一直同意，安装盘选择格式化的那个硬盘。接下来它会先把需要的安装文件复制到分区里，之后会进行重启</li>\n<li>重启时不要拔出U盘，选择Boot macOS from（安装磁盘名称），继续安装，前面一次只是将文件复制进硬盘，这一次才是安装系统</li>\n<li>安装完成重启，可拔出U盘</li>\n<li>重启先不要进macOS，进入Windows，打开DiskGenius，选择安装磁盘的EFI分区，将里面的Clover删除，CrtlV替换成适配自己电脑的Clover</li>\n<li>再重启电脑，选择Boot macOS from（安装磁盘名称），进入设置，个性化设置完成后就可享用macOS了</li>\n</ul>\n<p>注：</p>\n<ul>\n<li>安装macOS时出现应用程序副本已损坏错误，点菜单栏-实用工具-打开终端，输入：date 032208102015.20，退出终端，继续正常点安装macOS。</li>\n<li>如果是安装的15.6的话 先替换clover文件再安装，但我没成功</li>\n</ul>\n<h2 id=\"吐槽\"><a href=\"#吐槽\" class=\"headerlink\" title=\"吐槽\"></a>吐槽</h2><p>一开始我想安装10.15 Catalina，因为虚拟机安装的也是这个版本。</p>\n<p><a href=\"https://macx.top/3799.html\">联想小新700-15ISK i5-6300HQ 黑苹果Catalina – 苹果地带 (macx.top)</a></p>\n<p>这个EFI暂且不表，我前面下载的用于虚拟机的macOS镜像没有分区表，写入U盘无法启动，于是我重新下载了10.15.7的镜像，一直卡在苹果图标，于是我换成10.15.6版本再试一次，结果代码跑一半不动了，真是吐血，换了好几个EFI都不行，我都想直接给钱找人帮忙装了。</p>\n<p><a href=\"https://blog.zimo.wiki/posts/ad76eda8/\">联想IdeaPad 700-15ISK win10 黑苹果双系统教程  子墨的博客 (zimo.wiki)</a></p>\n<blockquote>\n<p>这个人的博客就是我想要的博客网站，不知道他怎么搭的，想要。</p>\n</blockquote>\n<p>最后选择最开始说的10.14.3 Mojave，一次成功，设置完成后刚好母上打了Facetime过来，直接在电脑上接听了，一切安好。</p>\n<p>后记：我又想整点花活，直接在电脑上下载Catalina的更新包，重启的时候进Windows替换EFI，结果当然是失败，提供的15.6Clover直接一个大大的禁止符号，气死我了，无奈重装。</p>\n<p>心疼我下载用的n多流量 T-T。</p>"}],"PostAsset":[{"_id":"source/_posts/diy-screen/DIYScreen_1day.png","post":"ckssjjmb1000kfa581m81eq0p","slug":"DIYScreen_1day.png","modified":1,"renderable":1},{"_id":"source/_posts/diy-screen/DIYScreen_1hour.png","post":"ckssjjmb1000kfa581m81eq0p","slug":"DIYScreen_1hour.png","modified":1,"renderable":1},{"_id":"source/_posts/diy-screen/DIYScreen_1morning.png","post":"ckssjjmb1000kfa581m81eq0p","slug":"DIYScreen_1morning.png","modified":1,"renderable":1},{"_id":"source/_posts/diy-screen/DIYScreen_closing1.png","post":"ckssjjmb1000kfa581m81eq0p","slug":"DIYScreen_closing1.png","modified":1,"renderable":1},{"_id":"source/_posts/diy-screen/DIYScreen_closing2.png","post":"ckssjjmb1000kfa581m81eq0p","slug":"DIYScreen_closing2.png","modified":1,"renderable":1},{"_id":"source/_posts/diy-screen/DIYScreen_finish1.png","post":"ckssjjmb1000kfa581m81eq0p","slug":"DIYScreen_finish1.png","modified":1,"renderable":1},{"_id":"source/_posts/diy-screen/DIYScreen_finish2.png","post":"ckssjjmb1000kfa581m81eq0p","slug":"DIYScreen_finish2.png","modified":1,"renderable":1},{"_id":"source/_posts/diy-screen/DIYScreen_finish3.png","post":"ckssjjmb1000kfa581m81eq0p","slug":"DIYScreen_finish3.png","modified":1,"renderable":1},{"_id":"source/_posts/diy-screen/DIYScreen_my_hand.png","post":"ckssjjmb1000kfa581m81eq0p","slug":"DIYScreen_my_hand.png","modified":1,"renderable":1},{"_id":"source/_posts/diy-screen/DIYScreen_my_name.png","post":"ckssjjmb1000kfa581m81eq0p","slug":"DIYScreen_my_name.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"ckssjjmat0003fa5898080l5a","category_id":"ckssjjmay000afa58e3p7g56j","_id":"ckssjjmb2000lfa58etm3fnl8"},{"post_id":"ckssjjmb1000ifa580v5o4z3r","category_id":"ckssjjmb0000gfa582a5sbcui","_id":"ckssjjmb5000sfa58f74db238"},{"post_id":"ckssjjmaw0007fa58616g83zw","category_id":"ckssjjmb0000gfa582a5sbcui","_id":"ckssjjmb7000wfa584rwicyt0"},{"post_id":"ckssjjmax0008fa584mym3sqr","category_id":"ckssjjmb0000gfa582a5sbcui","_id":"ckssjjmb8000zfa58ae625ik7"},{"post_id":"ckssjjmar0001fa58gwmnaxe9","category_id":"ckssjjmau0004fa589dag7ubz","_id":"ckssjjmbe0017fa582flo1pa7"},{"post_id":"ckssjjmar0001fa58gwmnaxe9","category_id":"ckssjjmb6000tfa5875pzf1py","_id":"ckssjjmbg001bfa5832zq5br9"},{"post_id":"ckssjjmb80012fa583yafczvy","category_id":"ckssjjmb0000gfa582a5sbcui","_id":"ckssjjmbg001efa58fkjnbha1"},{"post_id":"ckssjjmax0009fa588az802ue","category_id":"ckssjjmau0004fa589dag7ubz","_id":"ckssjjmbi001ifa58a91s11qu"},{"post_id":"ckssjjmax0009fa588az802ue","category_id":"ckssjjmb6000tfa5875pzf1py","_id":"ckssjjmbj001kfa58245ffp45"},{"post_id":"ckssjjmb90014fa58a73sgv8y","category_id":"ckssjjmb0000gfa582a5sbcui","_id":"ckssjjmbk001ofa58abjecrw6"},{"post_id":"ckssjjmbf0018fa584e7ta39x","category_id":"ckssjjmbo0022fa5899t1bpmd","_id":"ckssjjmbo0025fa5873xj7jjo"},{"post_id":"ckssjjmbg001cfa586tkqff9w","category_id":"ckssjjmbo0024fa582jte1ivf","_id":"ckssjjmbp0027fa58dknv8en8"},{"post_id":"ckssjjmaz000dfa58294s3crf","category_id":"ckssjjmbe0016fa587jol3lvs","_id":"ckssjjmbp002afa58hfo5dthx"},{"post_id":"ckssjjmaz000dfa58294s3crf","category_id":"ckssjjmbp0026fa589tbg8qhd","_id":"ckssjjmbq002bfa58692s6e1w"},{"post_id":"ckssjjmb0000ffa58b08v8z61","category_id":"ckssjjmbh001gfa58g8ul2i3c","_id":"ckssjjmbq002dfa58f8gqcegu"},{"post_id":"ckssjjmb0000ffa58b08v8z61","category_id":"ckssjjmbp0029fa58drwc7rrm","_id":"ckssjjmbq002ffa58dnms62r1"},{"post_id":"ckssjjmb1000kfa581m81eq0p","category_id":"ckssjjmbj001mfa580qznhqyy","_id":"ckssjjmbq002gfa58donidbp4"},{"post_id":"ckssjjmb1000kfa581m81eq0p","category_id":"ckssjjmbq002cfa58ef6oa14c","_id":"ckssjjmbr002ifa585zl62otf"},{"post_id":"ckssjjmb3000pfa58f2vkc5nk","category_id":"ckssjjmbl001qfa58fkvf7wlr","_id":"ckssjjmbr002kfa5868l8gua0"},{"post_id":"ckssjjmb3000pfa58f2vkc5nk","category_id":"ckssjjmbq002efa58gof6gnk5","_id":"ckssjjmbr002lfa5840gy9ksq"},{"post_id":"ckssjjmb5000rfa58d6utco5c","category_id":"ckssjjmbl001qfa58fkvf7wlr","_id":"ckssjjmbr002nfa58fapxares"},{"post_id":"ckssjjmb5000rfa58d6utco5c","category_id":"ckssjjmbq002efa58gof6gnk5","_id":"ckssjjmbr002ofa58bo3p2g5o"},{"post_id":"ckssjjmb6000vfa5863m34hsm","category_id":"ckssjjmbl001qfa58fkvf7wlr","_id":"ckssjjmbs002pfa58gn05gg8q"},{"post_id":"ckssjjmb6000vfa5863m34hsm","category_id":"ckssjjmbq002efa58gof6gnk5","_id":"ckssjjmbs002rfa58f2s401bu"},{"post_id":"ckssjjmb7000yfa586bbxcyl8","category_id":"ckssjjmbl001qfa58fkvf7wlr","_id":"ckssjjmbs002sfa58ekd4a87h"},{"post_id":"ckssjjmb7000yfa586bbxcyl8","category_id":"ckssjjmbr002mfa58ht7i2tgp","_id":"ckssjjmbs002tfa58amvh63ed"},{"post_id":"ckssjjmbg001ffa582eu27mnm","category_id":"ckssjjmbj001mfa580qznhqyy","_id":"ckssjjmbs002ufa585uy779jt"},{"post_id":"ckssjjmbg001ffa582eu27mnm","category_id":"ckssjjmbs002qfa58bo9lay68","_id":"ckssjjmbs002vfa5813h64bv1"}],"PostTag":[{"post_id":"ckssjjmar0001fa58gwmnaxe9","tag_id":"ckssjjmav0005fa5808n69eg2","_id":"ckssjjmaz000cfa5884eje4bx"},{"post_id":"ckssjjmax0009fa588az802ue","tag_id":"ckssjjmav0005fa5808n69eg2","_id":"ckssjjmaz000efa587i6bea13"},{"post_id":"ckssjjmat0003fa5898080l5a","tag_id":"ckssjjmay000bfa587r4rc2jx","_id":"ckssjjmb1000jfa5853po7r7r"},{"post_id":"ckssjjmb1000ifa580v5o4z3r","tag_id":"ckssjjmb0000hfa58bhup8z3t","_id":"ckssjjmb2000ofa58bd2ohjnd"},{"post_id":"ckssjjmaw0007fa58616g83zw","tag_id":"ckssjjmb0000hfa58bhup8z3t","_id":"ckssjjmb5000qfa580l6e92mc"},{"post_id":"ckssjjmax0008fa584mym3sqr","tag_id":"ckssjjmb0000hfa58bhup8z3t","_id":"ckssjjmb7000xfa58gc2qhqaz"},{"post_id":"ckssjjmaz000dfa58294s3crf","tag_id":"ckssjjmb6000ufa58h2vlcoug","_id":"ckssjjmb90013fa581o3i165r"},{"post_id":"ckssjjmb80012fa583yafczvy","tag_id":"ckssjjmb0000hfa58bhup8z3t","_id":"ckssjjmbe0015fa589sn49h9m"},{"post_id":"ckssjjmb90014fa58a73sgv8y","tag_id":"ckssjjmb0000hfa58bhup8z3t","_id":"ckssjjmbg001afa58eug3aflg"},{"post_id":"ckssjjmb0000ffa58b08v8z61","tag_id":"ckssjjmb80011fa589tv850yc","_id":"ckssjjmbg001dfa58efyu7lap"},{"post_id":"ckssjjmb1000kfa581m81eq0p","tag_id":"ckssjjmbf0019fa58386x42q1","_id":"ckssjjmbi001jfa58620r4w5y"},{"post_id":"ckssjjmbg001ffa582eu27mnm","tag_id":"ckssjjmbf0019fa58386x42q1","_id":"ckssjjmbj001lfa585ov801wd"},{"post_id":"ckssjjmb3000pfa58f2vkc5nk","tag_id":"ckssjjmbi001hfa58gk0h37ne","_id":"ckssjjmbk001pfa582wafgc76"},{"post_id":"ckssjjmb5000rfa58d6utco5c","tag_id":"ckssjjmbi001hfa58gk0h37ne","_id":"ckssjjmbl001sfa589ytu5hkb"},{"post_id":"ckssjjmb6000vfa5863m34hsm","tag_id":"ckssjjmbi001hfa58gk0h37ne","_id":"ckssjjmbn001vfa588eni04oh"},{"post_id":"ckssjjmb7000yfa586bbxcyl8","tag_id":"ckssjjmbi001hfa58gk0h37ne","_id":"ckssjjmbn001yfa5847oy5pdv"},{"post_id":"ckssjjmbf0018fa584e7ta39x","tag_id":"ckssjjmbn001wfa58fmghe6qo","_id":"ckssjjmbo0021fa58guwrhrql"},{"post_id":"ckssjjmbg001cfa586tkqff9w","tag_id":"ckssjjmbn0020fa58esjg5u5d","_id":"ckssjjmbo0023fa58fcw7c885"}],"Tag":[{"name":"Java","_id":"ckssjjmav0005fa5808n69eg2"},{"name":"Git","_id":"ckssjjmay000bfa587r4rc2jx"},{"name":"配置","_id":"ckssjjmb0000hfa58bhup8z3t"},{"name":"SQL","_id":"ckssjjmb6000ufa58h2vlcoug"},{"name":"TypeScript","_id":"ckssjjmb80011fa589tv850yc"},{"name":"DIY","_id":"ckssjjmbf0019fa58386x42q1"},{"name":"博客","_id":"ckssjjmbi001hfa58gk0h37ne"},{"name":"Todo","_id":"ckssjjmbn001wfa58fmghe6qo"},{"name":"培训","_id":"ckssjjmbn0020fa58esjg5u5d"}]}}